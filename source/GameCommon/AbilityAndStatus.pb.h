// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AbilityAndStatus.proto

#ifndef PROTOBUF_AbilityAndStatus_2eproto__INCLUDED
#define PROTOBUF_AbilityAndStatus_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ProtoBufOption.pb.h"
#include "AllConfigEnum.pb.h"
// @@protoc_insertion_point(includes)

namespace Config {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_AbilityAndStatus_2eproto();
void protobuf_AssignDesc_AbilityAndStatus_2eproto();
void protobuf_ShutdownFile_AbilityAndStatus_2eproto();

class AbilityAndStatusConfig;

// ===================================================================

class AbilityAndStatusConfig : public ::google::protobuf::Message {
 public:
  AbilityAndStatusConfig();
  virtual ~AbilityAndStatusConfig();

  AbilityAndStatusConfig(const AbilityAndStatusConfig& from);

  inline AbilityAndStatusConfig& operator=(const AbilityAndStatusConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityAndStatusConfig& default_instance();

  void Swap(AbilityAndStatusConfig* other);

  // implements Message ----------------------------------------------

  AbilityAndStatusConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AbilityAndStatusConfig& from);
  void MergeFrom(const AbilityAndStatusConfig& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Config.BattleObjectStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::Config::BattleObjectStatus status() const;
  inline void set_status(::Config::BattleObjectStatus value);

  // repeated bool can_do = 2;
  inline int can_do_size() const;
  inline void clear_can_do();
  static const int kCanDoFieldNumber = 2;
  inline bool can_do(int index) const;
  inline void set_can_do(int index, bool value);
  inline void add_can_do(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      can_do() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_can_do();

  // @@protoc_insertion_point(class_scope:Config.AbilityAndStatusConfig)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< bool > can_do_;
  int status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_AbilityAndStatus_2eproto();
  friend void protobuf_AssignDesc_AbilityAndStatus_2eproto();
  friend void protobuf_ShutdownFile_AbilityAndStatus_2eproto();

  void InitAsDefaultInstance();
  static AbilityAndStatusConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// AbilityAndStatusConfig

// required .Config.BattleObjectStatus status = 1;
inline bool AbilityAndStatusConfig::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AbilityAndStatusConfig::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AbilityAndStatusConfig::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AbilityAndStatusConfig::clear_status() {
  status_ = 1;
  clear_has_status();
  SetDirty();
}
inline ::Config::BattleObjectStatus AbilityAndStatusConfig::status() const {
  return static_cast< ::Config::BattleObjectStatus >(status_);
}
inline void AbilityAndStatusConfig::set_status(::Config::BattleObjectStatus value) {
  assert(::Config::BattleObjectStatus_IsValid(value));
  SetDirty();
  set_has_status();
  status_ = value;
}

// repeated bool can_do = 2;
inline int AbilityAndStatusConfig::can_do_size() const {
  return can_do_.size();
}
inline void AbilityAndStatusConfig::clear_can_do() {
  can_do_.Clear();
  SetDirty();
}
inline bool AbilityAndStatusConfig::can_do(int index) const {
  return can_do_.Get(index);
}
inline void AbilityAndStatusConfig::set_can_do(int index, bool value) {
  SetDirty();
  can_do_.Set(index, value);
}
inline void AbilityAndStatusConfig::add_can_do(bool value) {
  SetDirty();
  can_do_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
AbilityAndStatusConfig::can_do() const {
  return can_do_;
}
inline ::google::protobuf::RepeatedField< bool >*
AbilityAndStatusConfig::mutable_can_do() {
  SetDirty();
  return &can_do_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AbilityAndStatus_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Upgrades.proto

#ifndef PROTOBUF_Upgrades_2eproto__INCLUDED
#define PROTOBUF_Upgrades_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "BattleInfo.pb.h"
#include "ActorBasicInfo.pb.h"
#include "AllPacketEnum.pb.h"
// @@protoc_insertion_point(includes)

namespace Packet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Upgrades_2eproto();
void protobuf_AssignDesc_Upgrades_2eproto();
void protobuf_ShutdownFile_Upgrades_2eproto();

class UpgradeItemInfo;
class UpgradeInfo;
class UpgradeColorReq;
class UpgradeColorReply;
class UpgradeLevelReq;
class UpgradeLevelReply;
class UpgradeStarReq;
class UpgradeStarReply;
class UpgradeSkillReq;
class EnhenceEquipReq;
class AddEnchantSlotReq;
class EnchantEquipReq;
class BatchEnchantEquipReq;
class EnchantPreviewEle;
class EnchantPreview;
class BatchEnchantEquipReply;
class BatchEnchantEquipConfirmReq;
class BatchEnchantEquipConfirmReply;
class InsetEquipReq;
class TakeOutGemReq;
class EquipInheritReq;
class FixEquipReq;
class GemFusionReq;
class CG_GemFusion;
class DismantleEquipReq;
class EquipMagicalReq;

enum UpgradeLevelReply_Result {
  UpgradeLevelReply_Result_SUCCESS = 1,
  UpgradeLevelReply_Result_MAX_LEVEL = 2,
  UpgradeLevelReply_Result_NO_ENOUGH_ITEM = 3,
  UpgradeLevelReply_Result_INVALID_TARGET = 4,
  UpgradeLevelReply_Result_ITEM_AMOUNT_SHOULD_MORE_THAN_ZERO = 5
};
bool UpgradeLevelReply_Result_IsValid(int value);
const UpgradeLevelReply_Result UpgradeLevelReply_Result_Result_MIN = UpgradeLevelReply_Result_SUCCESS;
const UpgradeLevelReply_Result UpgradeLevelReply_Result_Result_MAX = UpgradeLevelReply_Result_ITEM_AMOUNT_SHOULD_MORE_THAN_ZERO;
const int UpgradeLevelReply_Result_Result_ARRAYSIZE = UpgradeLevelReply_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* UpgradeLevelReply_Result_descriptor();
inline const ::std::string& UpgradeLevelReply_Result_Name(UpgradeLevelReply_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    UpgradeLevelReply_Result_descriptor(), value);
}
inline bool UpgradeLevelReply_Result_Parse(
    const ::std::string& name, UpgradeLevelReply_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UpgradeLevelReply_Result>(
    UpgradeLevelReply_Result_descriptor(), name, value);
}
enum UpgradeStarReply_Result {
  UpgradeStarReply_Result_SUCCESS = 1,
  UpgradeStarReply_Result_MAX_STAR = 2,
  UpgradeStarReply_Result_NO_ENOUGH_ITEM = 3,
  UpgradeStarReply_Result_INVALID_TARGET = 4
};
bool UpgradeStarReply_Result_IsValid(int value);
const UpgradeStarReply_Result UpgradeStarReply_Result_Result_MIN = UpgradeStarReply_Result_SUCCESS;
const UpgradeStarReply_Result UpgradeStarReply_Result_Result_MAX = UpgradeStarReply_Result_INVALID_TARGET;
const int UpgradeStarReply_Result_Result_ARRAYSIZE = UpgradeStarReply_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* UpgradeStarReply_Result_descriptor();
inline const ::std::string& UpgradeStarReply_Result_Name(UpgradeStarReply_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    UpgradeStarReply_Result_descriptor(), value);
}
inline bool UpgradeStarReply_Result_Parse(
    const ::std::string& name, UpgradeStarReply_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UpgradeStarReply_Result>(
    UpgradeStarReply_Result_descriptor(), name, value);
}
enum BatchEnchantEquipConfirmReply_Result {
  BatchEnchantEquipConfirmReply_Result_SUCCESS = 1,
  BatchEnchantEquipConfirmReply_Result_NEED_BATCH_ENCHANT_EQUIP_REQ_FIRST = 2,
  BatchEnchantEquipConfirmReply_Result_INVALID_EQUIP = 3,
  BatchEnchantEquipConfirmReply_Result_INVALID_INDEX = 4
};
bool BatchEnchantEquipConfirmReply_Result_IsValid(int value);
const BatchEnchantEquipConfirmReply_Result BatchEnchantEquipConfirmReply_Result_Result_MIN = BatchEnchantEquipConfirmReply_Result_SUCCESS;
const BatchEnchantEquipConfirmReply_Result BatchEnchantEquipConfirmReply_Result_Result_MAX = BatchEnchantEquipConfirmReply_Result_INVALID_INDEX;
const int BatchEnchantEquipConfirmReply_Result_Result_ARRAYSIZE = BatchEnchantEquipConfirmReply_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* BatchEnchantEquipConfirmReply_Result_descriptor();
inline const ::std::string& BatchEnchantEquipConfirmReply_Result_Name(BatchEnchantEquipConfirmReply_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    BatchEnchantEquipConfirmReply_Result_descriptor(), value);
}
inline bool BatchEnchantEquipConfirmReply_Result_Parse(
    const ::std::string& name, BatchEnchantEquipConfirmReply_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BatchEnchantEquipConfirmReply_Result>(
    BatchEnchantEquipConfirmReply_Result_descriptor(), name, value);
}
// ===================================================================

class UpgradeItemInfo : public ::google::protobuf::Message {
 public:
  UpgradeItemInfo();
  virtual ~UpgradeItemInfo();

  UpgradeItemInfo(const UpgradeItemInfo& from);

  inline UpgradeItemInfo& operator=(const UpgradeItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeItemInfo& default_instance();

  void Swap(UpgradeItemInfo* other);

  // implements Message ----------------------------------------------

  UpgradeItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeItemInfo& from);
  void MergeFrom(const UpgradeItemInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 item_guid = 1;
  inline bool has_item_guid() const;
  inline void clear_item_guid();
  static const int kItemGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 item_guid() const;
  inline void set_item_guid(::google::protobuf::uint64 value);

  // required int32 item_amount = 2;
  inline bool has_item_amount() const;
  inline void clear_item_amount();
  static const int kItemAmountFieldNumber = 2;
  inline ::google::protobuf::int32 item_amount() const;
  inline void set_item_amount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.UpgradeItemInfo)
 private:
  inline void set_has_item_guid();
  inline void clear_has_item_guid();
  inline void set_has_item_amount();
  inline void clear_has_item_amount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 item_guid_;
  ::google::protobuf::int32 item_amount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static UpgradeItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeInfo : public ::google::protobuf::Message {
 public:
  UpgradeInfo();
  virtual ~UpgradeInfo();

  UpgradeInfo(const UpgradeInfo& from);

  inline UpgradeInfo& operator=(const UpgradeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeInfo& default_instance();

  void Swap(UpgradeInfo* other);

  // implements Message ----------------------------------------------

  UpgradeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeInfo& from);
  void MergeFrom(const UpgradeInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 actor_guid = 1;
  inline bool has_actor_guid() const;
  inline void clear_actor_guid();
  static const int kActorGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 actor_guid() const;
  inline void set_actor_guid(::google::protobuf::uint64 value);

  // repeated .Packet.UpgradeItemInfo items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::Packet::UpgradeItemInfo& items(int index) const;
  inline ::Packet::UpgradeItemInfo* mutable_items(int index);
  inline ::Packet::UpgradeItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::UpgradeItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::UpgradeItemInfo >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Packet.UpgradeInfo)
 private:
  inline void set_has_actor_guid();
  inline void clear_has_actor_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 actor_guid_;
  ::google::protobuf::RepeatedPtrField< ::Packet::UpgradeItemInfo > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static UpgradeInfo* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeColorReq : public ::google::protobuf::Message {
 public:
  UpgradeColorReq();
  virtual ~UpgradeColorReq();

  UpgradeColorReq(const UpgradeColorReq& from);

  inline UpgradeColorReq& operator=(const UpgradeColorReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeColorReq& default_instance();

  void Swap(UpgradeColorReq* other);

  // implements Message ----------------------------------------------

  UpgradeColorReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeColorReq& from);
  void MergeFrom(const UpgradeColorReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.UpgradeInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::Packet::UpgradeInfo& info() const;
  inline ::Packet::UpgradeInfo* mutable_info();
  inline ::Packet::UpgradeInfo* release_info();
  inline void set_allocated_info(::Packet::UpgradeInfo* info);

  // required .Packet.ActorColor up_to_color = 2;
  inline bool has_up_to_color() const;
  inline void clear_up_to_color();
  static const int kUpToColorFieldNumber = 2;
  inline ::Packet::ActorColor up_to_color() const;
  inline void set_up_to_color(::Packet::ActorColor value);

  // @@protoc_insertion_point(class_scope:Packet.UpgradeColorReq)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_up_to_color();
  inline void clear_has_up_to_color();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::UpgradeInfo* info_;
  int up_to_color_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static UpgradeColorReq* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeColorReply : public ::google::protobuf::Message {
 public:
  UpgradeColorReply();
  virtual ~UpgradeColorReply();

  UpgradeColorReply(const UpgradeColorReply& from);

  inline UpgradeColorReply& operator=(const UpgradeColorReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeColorReply& default_instance();

  void Swap(UpgradeColorReply* other);

  // implements Message ----------------------------------------------

  UpgradeColorReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeColorReply& from);
  void MergeFrom(const UpgradeColorReply& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 actor_guid = 1;
  inline bool has_actor_guid() const;
  inline void clear_actor_guid();
  static const int kActorGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 actor_guid() const;
  inline void set_actor_guid(::google::protobuf::uint64 value);

  // required .Packet.ActorColor now_color = 2;
  inline bool has_now_color() const;
  inline void clear_now_color();
  static const int kNowColorFieldNumber = 2;
  inline ::Packet::ActorColor now_color() const;
  inline void set_now_color(::Packet::ActorColor value);

  // optional .Packet.BattleInfo prev = 3;
  inline bool has_prev() const;
  inline void clear_prev();
  static const int kPrevFieldNumber = 3;
  inline const ::Packet::BattleInfo& prev() const;
  inline ::Packet::BattleInfo* mutable_prev();
  inline ::Packet::BattleInfo* release_prev();
  inline void set_allocated_prev(::Packet::BattleInfo* prev);

  // optional .Packet.BattleInfo curr = 4;
  inline bool has_curr() const;
  inline void clear_curr();
  static const int kCurrFieldNumber = 4;
  inline const ::Packet::BattleInfo& curr() const;
  inline ::Packet::BattleInfo* mutable_curr();
  inline ::Packet::BattleInfo* release_curr();
  inline void set_allocated_curr(::Packet::BattleInfo* curr);

  // @@protoc_insertion_point(class_scope:Packet.UpgradeColorReply)
 private:
  inline void set_has_actor_guid();
  inline void clear_has_actor_guid();
  inline void set_has_now_color();
  inline void clear_has_now_color();
  inline void set_has_prev();
  inline void clear_has_prev();
  inline void set_has_curr();
  inline void clear_has_curr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 actor_guid_;
  ::Packet::BattleInfo* prev_;
  ::Packet::BattleInfo* curr_;
  int now_color_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static UpgradeColorReply* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeLevelReq : public ::google::protobuf::Message {
 public:
  UpgradeLevelReq();
  virtual ~UpgradeLevelReq();

  UpgradeLevelReq(const UpgradeLevelReq& from);

  inline UpgradeLevelReq& operator=(const UpgradeLevelReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeLevelReq& default_instance();

  void Swap(UpgradeLevelReq* other);

  // implements Message ----------------------------------------------

  UpgradeLevelReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeLevelReq& from);
  void MergeFrom(const UpgradeLevelReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool one_key = 1;
  inline bool has_one_key() const;
  inline void clear_one_key();
  static const int kOneKeyFieldNumber = 1;
  inline bool one_key() const;
  inline void set_one_key(bool value);

  // required fixed64 actor_guid = 2;
  inline bool has_actor_guid() const;
  inline void clear_actor_guid();
  static const int kActorGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 actor_guid() const;
  inline void set_actor_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.UpgradeLevelReq)
 private:
  inline void set_has_one_key();
  inline void clear_has_one_key();
  inline void set_has_actor_guid();
  inline void clear_has_actor_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 actor_guid_;
  bool one_key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static UpgradeLevelReq* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeLevelReply : public ::google::protobuf::Message {
 public:
  UpgradeLevelReply();
  virtual ~UpgradeLevelReply();

  UpgradeLevelReply(const UpgradeLevelReply& from);

  inline UpgradeLevelReply& operator=(const UpgradeLevelReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeLevelReply& default_instance();

  void Swap(UpgradeLevelReply* other);

  // implements Message ----------------------------------------------

  UpgradeLevelReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeLevelReply& from);
  void MergeFrom(const UpgradeLevelReply& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef UpgradeLevelReply_Result Result;
  static const Result SUCCESS = UpgradeLevelReply_Result_SUCCESS;
  static const Result MAX_LEVEL = UpgradeLevelReply_Result_MAX_LEVEL;
  static const Result NO_ENOUGH_ITEM = UpgradeLevelReply_Result_NO_ENOUGH_ITEM;
  static const Result INVALID_TARGET = UpgradeLevelReply_Result_INVALID_TARGET;
  static const Result ITEM_AMOUNT_SHOULD_MORE_THAN_ZERO = UpgradeLevelReply_Result_ITEM_AMOUNT_SHOULD_MORE_THAN_ZERO;
  static inline bool Result_IsValid(int value) {
    return UpgradeLevelReply_Result_IsValid(value);
  }
  static const Result Result_MIN =
    UpgradeLevelReply_Result_Result_MIN;
  static const Result Result_MAX =
    UpgradeLevelReply_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    UpgradeLevelReply_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return UpgradeLevelReply_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return UpgradeLevelReply_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return UpgradeLevelReply_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .Packet.UpgradeLevelReq req = 1;
  inline bool has_req() const;
  inline void clear_req();
  static const int kReqFieldNumber = 1;
  inline const ::Packet::UpgradeLevelReq& req() const;
  inline ::Packet::UpgradeLevelReq* mutable_req();
  inline ::Packet::UpgradeLevelReq* release_req();
  inline void set_allocated_req(::Packet::UpgradeLevelReq* req);

  // required .Packet.UpgradeLevelReply.Result result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::Packet::UpgradeLevelReply_Result result() const;
  inline void set_result(::Packet::UpgradeLevelReply_Result value);

  // @@protoc_insertion_point(class_scope:Packet.UpgradeLevelReply)
 private:
  inline void set_has_req();
  inline void clear_has_req();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::UpgradeLevelReq* req_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static UpgradeLevelReply* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeStarReq : public ::google::protobuf::Message {
 public:
  UpgradeStarReq();
  virtual ~UpgradeStarReq();

  UpgradeStarReq(const UpgradeStarReq& from);

  inline UpgradeStarReq& operator=(const UpgradeStarReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeStarReq& default_instance();

  void Swap(UpgradeStarReq* other);

  // implements Message ----------------------------------------------

  UpgradeStarReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeStarReq& from);
  void MergeFrom(const UpgradeStarReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.UpgradeInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::Packet::UpgradeInfo& info() const;
  inline ::Packet::UpgradeInfo* mutable_info();
  inline ::Packet::UpgradeInfo* release_info();
  inline void set_allocated_info(::Packet::UpgradeInfo* info);

  // required .Packet.ActorStar up_to_star = 2;
  inline bool has_up_to_star() const;
  inline void clear_up_to_star();
  static const int kUpToStarFieldNumber = 2;
  inline ::Packet::ActorStar up_to_star() const;
  inline void set_up_to_star(::Packet::ActorStar value);

  // @@protoc_insertion_point(class_scope:Packet.UpgradeStarReq)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_up_to_star();
  inline void clear_has_up_to_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::UpgradeInfo* info_;
  int up_to_star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static UpgradeStarReq* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeStarReply : public ::google::protobuf::Message {
 public:
  UpgradeStarReply();
  virtual ~UpgradeStarReply();

  UpgradeStarReply(const UpgradeStarReply& from);

  inline UpgradeStarReply& operator=(const UpgradeStarReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeStarReply& default_instance();

  void Swap(UpgradeStarReply* other);

  // implements Message ----------------------------------------------

  UpgradeStarReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeStarReply& from);
  void MergeFrom(const UpgradeStarReply& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef UpgradeStarReply_Result Result;
  static const Result SUCCESS = UpgradeStarReply_Result_SUCCESS;
  static const Result MAX_STAR = UpgradeStarReply_Result_MAX_STAR;
  static const Result NO_ENOUGH_ITEM = UpgradeStarReply_Result_NO_ENOUGH_ITEM;
  static const Result INVALID_TARGET = UpgradeStarReply_Result_INVALID_TARGET;
  static inline bool Result_IsValid(int value) {
    return UpgradeStarReply_Result_IsValid(value);
  }
  static const Result Result_MIN =
    UpgradeStarReply_Result_Result_MIN;
  static const Result Result_MAX =
    UpgradeStarReply_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    UpgradeStarReply_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return UpgradeStarReply_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return UpgradeStarReply_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return UpgradeStarReply_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .Packet.UpgradeStarReq req = 1;
  inline bool has_req() const;
  inline void clear_req();
  static const int kReqFieldNumber = 1;
  inline const ::Packet::UpgradeStarReq& req() const;
  inline ::Packet::UpgradeStarReq* mutable_req();
  inline ::Packet::UpgradeStarReq* release_req();
  inline void set_allocated_req(::Packet::UpgradeStarReq* req);

  // required .Packet.UpgradeStarReply.Result result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::Packet::UpgradeStarReply_Result result() const;
  inline void set_result(::Packet::UpgradeStarReply_Result value);

  // optional .Packet.ActorStar now_star = 3;
  inline bool has_now_star() const;
  inline void clear_now_star();
  static const int kNowStarFieldNumber = 3;
  inline ::Packet::ActorStar now_star() const;
  inline void set_now_star(::Packet::ActorStar value);

  // optional .Packet.BattleInfo prev = 4;
  inline bool has_prev() const;
  inline void clear_prev();
  static const int kPrevFieldNumber = 4;
  inline const ::Packet::BattleInfo& prev() const;
  inline ::Packet::BattleInfo* mutable_prev();
  inline ::Packet::BattleInfo* release_prev();
  inline void set_allocated_prev(::Packet::BattleInfo* prev);

  // optional .Packet.BattleInfo curr = 5;
  inline bool has_curr() const;
  inline void clear_curr();
  static const int kCurrFieldNumber = 5;
  inline const ::Packet::BattleInfo& curr() const;
  inline ::Packet::BattleInfo* mutable_curr();
  inline ::Packet::BattleInfo* release_curr();
  inline void set_allocated_curr(::Packet::BattleInfo* curr);

  // @@protoc_insertion_point(class_scope:Packet.UpgradeStarReply)
 private:
  inline void set_has_req();
  inline void clear_has_req();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_now_star();
  inline void clear_has_now_star();
  inline void set_has_prev();
  inline void clear_has_prev();
  inline void set_has_curr();
  inline void clear_has_curr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::UpgradeStarReq* req_;
  int result_;
  int now_star_;
  ::Packet::BattleInfo* prev_;
  ::Packet::BattleInfo* curr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static UpgradeStarReply* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeSkillReq : public ::google::protobuf::Message {
 public:
  UpgradeSkillReq();
  virtual ~UpgradeSkillReq();

  UpgradeSkillReq(const UpgradeSkillReq& from);

  inline UpgradeSkillReq& operator=(const UpgradeSkillReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeSkillReq& default_instance();

  void Swap(UpgradeSkillReq* other);

  // implements Message ----------------------------------------------

  UpgradeSkillReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeSkillReq& from);
  void MergeFrom(const UpgradeSkillReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 actor_guid = 1;
  inline bool has_actor_guid() const;
  inline void clear_actor_guid();
  static const int kActorGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 actor_guid() const;
  inline void set_actor_guid(::google::protobuf::uint64 value);

  // repeated fixed64 skill_guid = 2;
  inline int skill_guid_size() const;
  inline void clear_skill_guid();
  static const int kSkillGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 skill_guid(int index) const;
  inline void set_skill_guid(int index, ::google::protobuf::uint64 value);
  inline void add_skill_guid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      skill_guid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_skill_guid();

  // repeated int32 up_to_level = 3;
  inline int up_to_level_size() const;
  inline void clear_up_to_level();
  static const int kUpToLevelFieldNumber = 3;
  inline ::google::protobuf::int32 up_to_level(int index) const;
  inline void set_up_to_level(int index, ::google::protobuf::int32 value);
  inline void add_up_to_level(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      up_to_level() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_up_to_level();

  // @@protoc_insertion_point(class_scope:Packet.UpgradeSkillReq)
 private:
  inline void set_has_actor_guid();
  inline void clear_has_actor_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 actor_guid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > skill_guid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > up_to_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static UpgradeSkillReq* default_instance_;
};
// -------------------------------------------------------------------

class EnhenceEquipReq : public ::google::protobuf::Message {
 public:
  EnhenceEquipReq();
  virtual ~EnhenceEquipReq();

  EnhenceEquipReq(const EnhenceEquipReq& from);

  inline EnhenceEquipReq& operator=(const EnhenceEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnhenceEquipReq& default_instance();

  void Swap(EnhenceEquipReq* other);

  // implements Message ----------------------------------------------

  EnhenceEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnhenceEquipReq& from);
  void MergeFrom(const EnhenceEquipReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 equip_guid = 1;
  inline int equip_guid_size() const;
  inline void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 equip_guid(int index) const;
  inline void set_equip_guid(int index, ::google::protobuf::uint64 value);
  inline void add_equip_guid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      equip_guid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_equip_guid();

  // required bool is_max = 2;
  inline bool has_is_max() const;
  inline void clear_is_max();
  static const int kIsMaxFieldNumber = 2;
  inline bool is_max() const;
  inline void set_is_max(bool value);

  // @@protoc_insertion_point(class_scope:Packet.EnhenceEquipReq)
 private:
  inline void set_has_is_max();
  inline void clear_has_is_max();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > equip_guid_;
  bool is_max_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static EnhenceEquipReq* default_instance_;
};
// -------------------------------------------------------------------

class AddEnchantSlotReq : public ::google::protobuf::Message {
 public:
  AddEnchantSlotReq();
  virtual ~AddEnchantSlotReq();

  AddEnchantSlotReq(const AddEnchantSlotReq& from);

  inline AddEnchantSlotReq& operator=(const AddEnchantSlotReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddEnchantSlotReq& default_instance();

  void Swap(AddEnchantSlotReq* other);

  // implements Message ----------------------------------------------

  AddEnchantSlotReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddEnchantSlotReq& from);
  void MergeFrom(const AddEnchantSlotReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 equip_guid = 1;
  inline bool has_equip_guid() const;
  inline void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 equip_guid() const;
  inline void set_equip_guid(::google::protobuf::uint64 value);

  // required int32 slot_index = 2;
  inline bool has_slot_index() const;
  inline void clear_slot_index();
  static const int kSlotIndexFieldNumber = 2;
  inline ::google::protobuf::int32 slot_index() const;
  inline void set_slot_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.AddEnchantSlotReq)
 private:
  inline void set_has_equip_guid();
  inline void clear_has_equip_guid();
  inline void set_has_slot_index();
  inline void clear_has_slot_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 equip_guid_;
  ::google::protobuf::int32 slot_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static AddEnchantSlotReq* default_instance_;
};
// -------------------------------------------------------------------

class EnchantEquipReq : public ::google::protobuf::Message {
 public:
  EnchantEquipReq();
  virtual ~EnchantEquipReq();

  EnchantEquipReq(const EnchantEquipReq& from);

  inline EnchantEquipReq& operator=(const EnchantEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnchantEquipReq& default_instance();

  void Swap(EnchantEquipReq* other);

  // implements Message ----------------------------------------------

  EnchantEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnchantEquipReq& from);
  void MergeFrom(const EnchantEquipReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 equip_guid = 1;
  inline bool has_equip_guid() const;
  inline void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 equip_guid() const;
  inline void set_equip_guid(::google::protobuf::uint64 value);

  // repeated int32 lock_slots = 2;
  inline int lock_slots_size() const;
  inline void clear_lock_slots();
  static const int kLockSlotsFieldNumber = 2;
  inline ::google::protobuf::int32 lock_slots(int index) const;
  inline void set_lock_slots(int index, ::google::protobuf::int32 value);
  inline void add_lock_slots(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lock_slots() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lock_slots();

  // repeated .Packet.UpgradeItemInfo items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::Packet::UpgradeItemInfo& items(int index) const;
  inline ::Packet::UpgradeItemInfo* mutable_items(int index);
  inline ::Packet::UpgradeItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::UpgradeItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::UpgradeItemInfo >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Packet.EnchantEquipReq)
 private:
  inline void set_has_equip_guid();
  inline void clear_has_equip_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 equip_guid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lock_slots_;
  ::google::protobuf::RepeatedPtrField< ::Packet::UpgradeItemInfo > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static EnchantEquipReq* default_instance_;
};
// -------------------------------------------------------------------

class BatchEnchantEquipReq : public ::google::protobuf::Message {
 public:
  BatchEnchantEquipReq();
  virtual ~BatchEnchantEquipReq();

  BatchEnchantEquipReq(const BatchEnchantEquipReq& from);

  inline BatchEnchantEquipReq& operator=(const BatchEnchantEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchEnchantEquipReq& default_instance();

  void Swap(BatchEnchantEquipReq* other);

  // implements Message ----------------------------------------------

  BatchEnchantEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchEnchantEquipReq& from);
  void MergeFrom(const BatchEnchantEquipReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 equip_guid = 1;
  inline bool has_equip_guid() const;
  inline void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 equip_guid() const;
  inline void set_equip_guid(::google::protobuf::uint64 value);

  // repeated int32 lock_slots = 2;
  inline int lock_slots_size() const;
  inline void clear_lock_slots();
  static const int kLockSlotsFieldNumber = 2;
  inline ::google::protobuf::int32 lock_slots(int index) const;
  inline void set_lock_slots(int index, ::google::protobuf::int32 value);
  inline void add_lock_slots(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lock_slots() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lock_slots();

  // repeated .Packet.UpgradeItemInfo item = 3;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline const ::Packet::UpgradeItemInfo& item(int index) const;
  inline ::Packet::UpgradeItemInfo* mutable_item(int index);
  inline ::Packet::UpgradeItemInfo* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::UpgradeItemInfo >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::UpgradeItemInfo >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:Packet.BatchEnchantEquipReq)
 private:
  inline void set_has_equip_guid();
  inline void clear_has_equip_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 equip_guid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lock_slots_;
  ::google::protobuf::RepeatedPtrField< ::Packet::UpgradeItemInfo > item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static BatchEnchantEquipReq* default_instance_;
};
// -------------------------------------------------------------------

class EnchantPreviewEle : public ::google::protobuf::Message {
 public:
  EnchantPreviewEle();
  virtual ~EnchantPreviewEle();

  EnchantPreviewEle(const EnchantPreviewEle& from);

  inline EnchantPreviewEle& operator=(const EnchantPreviewEle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnchantPreviewEle& default_instance();

  void Swap(EnchantPreviewEle* other);

  // implements Message ----------------------------------------------

  EnchantPreviewEle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnchantPreviewEle& from);
  void MergeFrom(const EnchantPreviewEle& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string effect_type = 1;
  inline bool has_effect_type() const;
  inline void clear_effect_type();
  static const int kEffectTypeFieldNumber = 1;
  inline const ::std::string& effect_type() const;
  inline void set_effect_type(const ::std::string& value);
  inline void set_effect_type(const char* value);
  inline void set_effect_type(const char* value, size_t size);
  inline ::std::string* mutable_effect_type();
  inline ::std::string* release_effect_type();
  inline void set_allocated_effect_type(::std::string* effect_type);

  // required int32 effect_value = 2;
  inline bool has_effect_value() const;
  inline void clear_effect_value();
  static const int kEffectValueFieldNumber = 2;
  inline ::google::protobuf::int32 effect_value() const;
  inline void set_effect_value(::google::protobuf::int32 value);

  // required int32 max_value = 3;
  inline bool has_max_value() const;
  inline void clear_max_value();
  static const int kMaxValueFieldNumber = 3;
  inline ::google::protobuf::int32 max_value() const;
  inline void set_max_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.EnchantPreviewEle)
 private:
  inline void set_has_effect_type();
  inline void clear_has_effect_type();
  inline void set_has_effect_value();
  inline void clear_has_effect_value();
  inline void set_has_max_value();
  inline void clear_has_max_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* effect_type_;
  ::google::protobuf::int32 effect_value_;
  ::google::protobuf::int32 max_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static EnchantPreviewEle* default_instance_;
};
// -------------------------------------------------------------------

class EnchantPreview : public ::google::protobuf::Message {
 public:
  EnchantPreview();
  virtual ~EnchantPreview();

  EnchantPreview(const EnchantPreview& from);

  inline EnchantPreview& operator=(const EnchantPreview& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnchantPreview& default_instance();

  void Swap(EnchantPreview* other);

  // implements Message ----------------------------------------------

  EnchantPreview* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnchantPreview& from);
  void MergeFrom(const EnchantPreview& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.EnchantPreviewEle elements = 1;
  inline int elements_size() const;
  inline void clear_elements();
  static const int kElementsFieldNumber = 1;
  inline const ::Packet::EnchantPreviewEle& elements(int index) const;
  inline ::Packet::EnchantPreviewEle* mutable_elements(int index);
  inline ::Packet::EnchantPreviewEle* add_elements();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::EnchantPreviewEle >&
      elements() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::EnchantPreviewEle >*
      mutable_elements();

  // @@protoc_insertion_point(class_scope:Packet.EnchantPreview)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::EnchantPreviewEle > elements_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static EnchantPreview* default_instance_;
};
// -------------------------------------------------------------------

class BatchEnchantEquipReply : public ::google::protobuf::Message {
 public:
  BatchEnchantEquipReply();
  virtual ~BatchEnchantEquipReply();

  BatchEnchantEquipReply(const BatchEnchantEquipReply& from);

  inline BatchEnchantEquipReply& operator=(const BatchEnchantEquipReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchEnchantEquipReply& default_instance();

  void Swap(BatchEnchantEquipReply* other);

  // implements Message ----------------------------------------------

  BatchEnchantEquipReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchEnchantEquipReply& from);
  void MergeFrom(const BatchEnchantEquipReply& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.BatchEnchantEquipReq req = 1;
  inline bool has_req() const;
  inline void clear_req();
  static const int kReqFieldNumber = 1;
  inline const ::Packet::BatchEnchantEquipReq& req() const;
  inline ::Packet::BatchEnchantEquipReq* mutable_req();
  inline ::Packet::BatchEnchantEquipReq* release_req();
  inline void set_allocated_req(::Packet::BatchEnchantEquipReq* req);

  // repeated .Packet.EnchantPreview previews = 2;
  inline int previews_size() const;
  inline void clear_previews();
  static const int kPreviewsFieldNumber = 2;
  inline const ::Packet::EnchantPreview& previews(int index) const;
  inline ::Packet::EnchantPreview* mutable_previews(int index);
  inline ::Packet::EnchantPreview* add_previews();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::EnchantPreview >&
      previews() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::EnchantPreview >*
      mutable_previews();

  // @@protoc_insertion_point(class_scope:Packet.BatchEnchantEquipReply)
 private:
  inline void set_has_req();
  inline void clear_has_req();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::BatchEnchantEquipReq* req_;
  ::google::protobuf::RepeatedPtrField< ::Packet::EnchantPreview > previews_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static BatchEnchantEquipReply* default_instance_;
};
// -------------------------------------------------------------------

class BatchEnchantEquipConfirmReq : public ::google::protobuf::Message {
 public:
  BatchEnchantEquipConfirmReq();
  virtual ~BatchEnchantEquipConfirmReq();

  BatchEnchantEquipConfirmReq(const BatchEnchantEquipConfirmReq& from);

  inline BatchEnchantEquipConfirmReq& operator=(const BatchEnchantEquipConfirmReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchEnchantEquipConfirmReq& default_instance();

  void Swap(BatchEnchantEquipConfirmReq* other);

  // implements Message ----------------------------------------------

  BatchEnchantEquipConfirmReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchEnchantEquipConfirmReq& from);
  void MergeFrom(const BatchEnchantEquipConfirmReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 equip_guid = 1;
  inline bool has_equip_guid() const;
  inline void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 equip_guid() const;
  inline void set_equip_guid(::google::protobuf::uint64 value);

  // required int32 confirm_index = 2;
  inline bool has_confirm_index() const;
  inline void clear_confirm_index();
  static const int kConfirmIndexFieldNumber = 2;
  inline ::google::protobuf::int32 confirm_index() const;
  inline void set_confirm_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.BatchEnchantEquipConfirmReq)
 private:
  inline void set_has_equip_guid();
  inline void clear_has_equip_guid();
  inline void set_has_confirm_index();
  inline void clear_has_confirm_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 equip_guid_;
  ::google::protobuf::int32 confirm_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static BatchEnchantEquipConfirmReq* default_instance_;
};
// -------------------------------------------------------------------

class BatchEnchantEquipConfirmReply : public ::google::protobuf::Message {
 public:
  BatchEnchantEquipConfirmReply();
  virtual ~BatchEnchantEquipConfirmReply();

  BatchEnchantEquipConfirmReply(const BatchEnchantEquipConfirmReply& from);

  inline BatchEnchantEquipConfirmReply& operator=(const BatchEnchantEquipConfirmReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchEnchantEquipConfirmReply& default_instance();

  void Swap(BatchEnchantEquipConfirmReply* other);

  // implements Message ----------------------------------------------

  BatchEnchantEquipConfirmReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchEnchantEquipConfirmReply& from);
  void MergeFrom(const BatchEnchantEquipConfirmReply& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BatchEnchantEquipConfirmReply_Result Result;
  static const Result SUCCESS = BatchEnchantEquipConfirmReply_Result_SUCCESS;
  static const Result NEED_BATCH_ENCHANT_EQUIP_REQ_FIRST = BatchEnchantEquipConfirmReply_Result_NEED_BATCH_ENCHANT_EQUIP_REQ_FIRST;
  static const Result INVALID_EQUIP = BatchEnchantEquipConfirmReply_Result_INVALID_EQUIP;
  static const Result INVALID_INDEX = BatchEnchantEquipConfirmReply_Result_INVALID_INDEX;
  static inline bool Result_IsValid(int value) {
    return BatchEnchantEquipConfirmReply_Result_IsValid(value);
  }
  static const Result Result_MIN =
    BatchEnchantEquipConfirmReply_Result_Result_MIN;
  static const Result Result_MAX =
    BatchEnchantEquipConfirmReply_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    BatchEnchantEquipConfirmReply_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return BatchEnchantEquipConfirmReply_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return BatchEnchantEquipConfirmReply_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return BatchEnchantEquipConfirmReply_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .Packet.BatchEnchantEquipConfirmReq req = 1;
  inline bool has_req() const;
  inline void clear_req();
  static const int kReqFieldNumber = 1;
  inline const ::Packet::BatchEnchantEquipConfirmReq& req() const;
  inline ::Packet::BatchEnchantEquipConfirmReq* mutable_req();
  inline ::Packet::BatchEnchantEquipConfirmReq* release_req();
  inline void set_allocated_req(::Packet::BatchEnchantEquipConfirmReq* req);

  // required .Packet.BatchEnchantEquipConfirmReply.Result result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::Packet::BatchEnchantEquipConfirmReply_Result result() const;
  inline void set_result(::Packet::BatchEnchantEquipConfirmReply_Result value);

  // @@protoc_insertion_point(class_scope:Packet.BatchEnchantEquipConfirmReply)
 private:
  inline void set_has_req();
  inline void clear_has_req();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::BatchEnchantEquipConfirmReq* req_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static BatchEnchantEquipConfirmReply* default_instance_;
};
// -------------------------------------------------------------------

class InsetEquipReq : public ::google::protobuf::Message {
 public:
  InsetEquipReq();
  virtual ~InsetEquipReq();

  InsetEquipReq(const InsetEquipReq& from);

  inline InsetEquipReq& operator=(const InsetEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InsetEquipReq& default_instance();

  void Swap(InsetEquipReq* other);

  // implements Message ----------------------------------------------

  InsetEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InsetEquipReq& from);
  void MergeFrom(const InsetEquipReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 equip_guid = 1;
  inline int equip_guid_size() const;
  inline void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 equip_guid(int index) const;
  inline void set_equip_guid(int index, ::google::protobuf::uint64 value);
  inline void add_equip_guid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      equip_guid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_equip_guid();

  // repeated int32 gem_config_id = 2;
  inline int gem_config_id_size() const;
  inline void clear_gem_config_id();
  static const int kGemConfigIdFieldNumber = 2;
  inline ::google::protobuf::int32 gem_config_id(int index) const;
  inline void set_gem_config_id(int index, ::google::protobuf::int32 value);
  inline void add_gem_config_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gem_config_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gem_config_id();

  // repeated int32 index = 3;
  inline int index_size() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index(int index) const;
  inline void set_index(int index, ::google::protobuf::int32 value);
  inline void add_index(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_index();

  // @@protoc_insertion_point(class_scope:Packet.InsetEquipReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > equip_guid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gem_config_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static InsetEquipReq* default_instance_;
};
// -------------------------------------------------------------------

class TakeOutGemReq : public ::google::protobuf::Message {
 public:
  TakeOutGemReq();
  virtual ~TakeOutGemReq();

  TakeOutGemReq(const TakeOutGemReq& from);

  inline TakeOutGemReq& operator=(const TakeOutGemReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeOutGemReq& default_instance();

  void Swap(TakeOutGemReq* other);

  // implements Message ----------------------------------------------

  TakeOutGemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TakeOutGemReq& from);
  void MergeFrom(const TakeOutGemReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 equip_guid = 1;
  inline int equip_guid_size() const;
  inline void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 equip_guid(int index) const;
  inline void set_equip_guid(int index, ::google::protobuf::uint64 value);
  inline void add_equip_guid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      equip_guid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_equip_guid();

  // repeated int32 gem_config_id = 2;
  inline int gem_config_id_size() const;
  inline void clear_gem_config_id();
  static const int kGemConfigIdFieldNumber = 2;
  inline ::google::protobuf::int32 gem_config_id(int index) const;
  inline void set_gem_config_id(int index, ::google::protobuf::int32 value);
  inline void add_gem_config_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gem_config_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gem_config_id();

  // repeated int32 index = 3;
  inline int index_size() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index(int index) const;
  inline void set_index(int index, ::google::protobuf::int32 value);
  inline void add_index(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_index();

  // @@protoc_insertion_point(class_scope:Packet.TakeOutGemReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > equip_guid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gem_config_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static TakeOutGemReq* default_instance_;
};
// -------------------------------------------------------------------

class EquipInheritReq : public ::google::protobuf::Message {
 public:
  EquipInheritReq();
  virtual ~EquipInheritReq();

  EquipInheritReq(const EquipInheritReq& from);

  inline EquipInheritReq& operator=(const EquipInheritReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipInheritReq& default_instance();

  void Swap(EquipInheritReq* other);

  // implements Message ----------------------------------------------

  EquipInheritReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipInheritReq& from);
  void MergeFrom(const EquipInheritReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 old_equip_guid = 1;
  inline bool has_old_equip_guid() const;
  inline void clear_old_equip_guid();
  static const int kOldEquipGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 old_equip_guid() const;
  inline void set_old_equip_guid(::google::protobuf::uint64 value);

  // required fixed64 new_equip_guid = 2;
  inline bool has_new_equip_guid() const;
  inline void clear_new_equip_guid();
  static const int kNewEquipGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 new_equip_guid() const;
  inline void set_new_equip_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.EquipInheritReq)
 private:
  inline void set_has_old_equip_guid();
  inline void clear_has_old_equip_guid();
  inline void set_has_new_equip_guid();
  inline void clear_has_new_equip_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 old_equip_guid_;
  ::google::protobuf::uint64 new_equip_guid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static EquipInheritReq* default_instance_;
};
// -------------------------------------------------------------------

class FixEquipReq : public ::google::protobuf::Message {
 public:
  FixEquipReq();
  virtual ~FixEquipReq();

  FixEquipReq(const FixEquipReq& from);

  inline FixEquipReq& operator=(const FixEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FixEquipReq& default_instance();

  void Swap(FixEquipReq* other);

  // implements Message ----------------------------------------------

  FixEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FixEquipReq& from);
  void MergeFrom(const FixEquipReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 equip_guid = 1;
  inline int equip_guid_size() const;
  inline void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 equip_guid(int index) const;
  inline void set_equip_guid(int index, ::google::protobuf::uint64 value);
  inline void add_equip_guid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      equip_guid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_equip_guid();

  // @@protoc_insertion_point(class_scope:Packet.FixEquipReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > equip_guid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static FixEquipReq* default_instance_;
};
// -------------------------------------------------------------------

class GemFusionReq : public ::google::protobuf::Message {
 public:
  GemFusionReq();
  virtual ~GemFusionReq();

  GemFusionReq(const GemFusionReq& from);

  inline GemFusionReq& operator=(const GemFusionReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GemFusionReq& default_instance();

  void Swap(GemFusionReq* other);

  // implements Message ----------------------------------------------

  GemFusionReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GemFusionReq& from);
  void MergeFrom(const GemFusionReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 gem_guid = 1;
  inline bool has_gem_guid() const;
  inline void clear_gem_guid();
  static const int kGemGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 gem_guid() const;
  inline void set_gem_guid(::google::protobuf::uint64 value);

  // required bool fusion_all = 2;
  inline bool has_fusion_all() const;
  inline void clear_fusion_all();
  static const int kFusionAllFieldNumber = 2;
  inline bool fusion_all() const;
  inline void set_fusion_all(bool value);

  // required bool cannot_fail = 3;
  inline bool has_cannot_fail() const;
  inline void clear_cannot_fail();
  static const int kCannotFailFieldNumber = 3;
  inline bool cannot_fail() const;
  inline void set_cannot_fail(bool value);

  // @@protoc_insertion_point(class_scope:Packet.GemFusionReq)
 private:
  inline void set_has_gem_guid();
  inline void clear_has_gem_guid();
  inline void set_has_fusion_all();
  inline void clear_has_fusion_all();
  inline void set_has_cannot_fail();
  inline void clear_has_cannot_fail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 gem_guid_;
  bool fusion_all_;
  bool cannot_fail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static GemFusionReq* default_instance_;
};
// -------------------------------------------------------------------

class CG_GemFusion : public ::google::protobuf::Message {
 public:
  CG_GemFusion();
  virtual ~CG_GemFusion();

  CG_GemFusion(const CG_GemFusion& from);

  inline CG_GemFusion& operator=(const CG_GemFusion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_GemFusion& default_instance();

  void Swap(CG_GemFusion* other);

  // implements Message ----------------------------------------------

  CG_GemFusion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_GemFusion& from);
  void MergeFrom(const CG_GemFusion& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 bag_gem_guids = 1;
  inline int bag_gem_guids_size() const;
  inline void clear_bag_gem_guids();
  static const int kBagGemGuidsFieldNumber = 1;
  inline ::google::protobuf::uint64 bag_gem_guids(int index) const;
  inline void set_bag_gem_guids(int index, ::google::protobuf::uint64 value);
  inline void add_bag_gem_guids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      bag_gem_guids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_bag_gem_guids();

  // repeated int32 bag_gem_counts = 2;
  inline int bag_gem_counts_size() const;
  inline void clear_bag_gem_counts();
  static const int kBagGemCountsFieldNumber = 2;
  inline ::google::protobuf::int32 bag_gem_counts(int index) const;
  inline void set_bag_gem_counts(int index, ::google::protobuf::int32 value);
  inline void add_bag_gem_counts(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      bag_gem_counts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_bag_gem_counts();

  // repeated int32 buy_gem_ids = 3;
  inline int buy_gem_ids_size() const;
  inline void clear_buy_gem_ids();
  static const int kBuyGemIdsFieldNumber = 3;
  inline ::google::protobuf::int32 buy_gem_ids(int index) const;
  inline void set_buy_gem_ids(int index, ::google::protobuf::int32 value);
  inline void add_buy_gem_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      buy_gem_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_buy_gem_ids();

  // repeated int32 buy_gem_counts = 4;
  inline int buy_gem_counts_size() const;
  inline void clear_buy_gem_counts();
  static const int kBuyGemCountsFieldNumber = 4;
  inline ::google::protobuf::int32 buy_gem_counts(int index) const;
  inline void set_buy_gem_counts(int index, ::google::protobuf::int32 value);
  inline void add_buy_gem_counts(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      buy_gem_counts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_buy_gem_counts();

  // required int32 target_gem_id = 5;
  inline bool has_target_gem_id() const;
  inline void clear_target_gem_id();
  static const int kTargetGemIdFieldNumber = 5;
  inline ::google::protobuf::int32 target_gem_id() const;
  inline void set_target_gem_id(::google::protobuf::int32 value);

  // optional fixed64 equip_guid = 6;
  inline bool has_equip_guid() const;
  inline void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 6;
  inline ::google::protobuf::uint64 equip_guid() const;
  inline void set_equip_guid(::google::protobuf::uint64 value);

  // optional int32 gem_index = 7;
  inline bool has_gem_index() const;
  inline void clear_gem_index();
  static const int kGemIndexFieldNumber = 7;
  inline ::google::protobuf::int32 gem_index() const;
  inline void set_gem_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.CG_GemFusion)
 private:
  inline void set_has_target_gem_id();
  inline void clear_has_target_gem_id();
  inline void set_has_equip_guid();
  inline void clear_has_equip_guid();
  inline void set_has_gem_index();
  inline void clear_has_gem_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > bag_gem_guids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > bag_gem_counts_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > buy_gem_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > buy_gem_counts_;
  ::google::protobuf::uint64 equip_guid_;
  ::google::protobuf::int32 target_gem_id_;
  ::google::protobuf::int32 gem_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static CG_GemFusion* default_instance_;
};
// -------------------------------------------------------------------

class DismantleEquipReq : public ::google::protobuf::Message {
 public:
  DismantleEquipReq();
  virtual ~DismantleEquipReq();

  DismantleEquipReq(const DismantleEquipReq& from);

  inline DismantleEquipReq& operator=(const DismantleEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DismantleEquipReq& default_instance();

  void Swap(DismantleEquipReq* other);

  // implements Message ----------------------------------------------

  DismantleEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DismantleEquipReq& from);
  void MergeFrom(const DismantleEquipReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 equip_guids = 1;
  inline int equip_guids_size() const;
  inline void clear_equip_guids();
  static const int kEquipGuidsFieldNumber = 1;
  inline ::google::protobuf::uint64 equip_guids(int index) const;
  inline void set_equip_guids(int index, ::google::protobuf::uint64 value);
  inline void add_equip_guids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      equip_guids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_equip_guids();

  // @@protoc_insertion_point(class_scope:Packet.DismantleEquipReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > equip_guids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static DismantleEquipReq* default_instance_;
};
// -------------------------------------------------------------------

class EquipMagicalReq : public ::google::protobuf::Message {
 public:
  EquipMagicalReq();
  virtual ~EquipMagicalReq();

  EquipMagicalReq(const EquipMagicalReq& from);

  inline EquipMagicalReq& operator=(const EquipMagicalReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipMagicalReq& default_instance();

  void Swap(EquipMagicalReq* other);

  // implements Message ----------------------------------------------

  EquipMagicalReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipMagicalReq& from);
  void MergeFrom(const EquipMagicalReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 src_guid = 1;
  inline bool has_src_guid() const;
  inline void clear_src_guid();
  static const int kSrcGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 src_guid() const;
  inline void set_src_guid(::google::protobuf::uint64 value);

  // required fixed64 des_guid = 2;
  inline bool has_des_guid() const;
  inline void clear_des_guid();
  static const int kDesGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 des_guid() const;
  inline void set_des_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.EquipMagicalReq)
 private:
  inline void set_has_src_guid();
  inline void clear_has_src_guid();
  inline void set_has_des_guid();
  inline void clear_has_des_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 src_guid_;
  ::google::protobuf::uint64 des_guid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Upgrades_2eproto();
  friend void protobuf_AssignDesc_Upgrades_2eproto();
  friend void protobuf_ShutdownFile_Upgrades_2eproto();

  void InitAsDefaultInstance();
  static EquipMagicalReq* default_instance_;
};
// ===================================================================


// ===================================================================

// UpgradeItemInfo

// required fixed64 item_guid = 1;
inline bool UpgradeItemInfo::has_item_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeItemInfo::set_has_item_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeItemInfo::clear_has_item_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeItemInfo::clear_item_guid() {
  item_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_item_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 UpgradeItemInfo::item_guid() const {
  return item_guid_;
}
inline void UpgradeItemInfo::set_item_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_item_guid();
  item_guid_ = value;
}

// required int32 item_amount = 2;
inline bool UpgradeItemInfo::has_item_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpgradeItemInfo::set_has_item_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpgradeItemInfo::clear_has_item_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpgradeItemInfo::clear_item_amount() {
  item_amount_ = 0;
  clear_has_item_amount();
  SetDirty();
}
inline ::google::protobuf::int32 UpgradeItemInfo::item_amount() const {
  return item_amount_;
}
inline void UpgradeItemInfo::set_item_amount(::google::protobuf::int32 value) {
  SetDirty();
  set_has_item_amount();
  item_amount_ = value;
}

// -------------------------------------------------------------------

// UpgradeInfo

// required fixed64 actor_guid = 1;
inline bool UpgradeInfo::has_actor_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeInfo::set_has_actor_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeInfo::clear_has_actor_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeInfo::clear_actor_guid() {
  actor_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_actor_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 UpgradeInfo::actor_guid() const {
  return actor_guid_;
}
inline void UpgradeInfo::set_actor_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_actor_guid();
  actor_guid_ = value;
}

// repeated .Packet.UpgradeItemInfo items = 2;
inline int UpgradeInfo::items_size() const {
  return items_.size();
}
inline void UpgradeInfo::clear_items() {
  items_.Clear();
  SetDirty();
}
inline const ::Packet::UpgradeItemInfo& UpgradeInfo::items(int index) const {
  return items_.Get(index);
}
inline ::Packet::UpgradeItemInfo* UpgradeInfo::mutable_items(int index) {
  SetDirty();
  return items_.Mutable(index);
}
inline ::Packet::UpgradeItemInfo* UpgradeInfo::add_items() {
  SetDirty();
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::UpgradeItemInfo >&
UpgradeInfo::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::UpgradeItemInfo >*
UpgradeInfo::mutable_items() {
  SetDirty();
  return &items_;
}

// -------------------------------------------------------------------

// UpgradeColorReq

// required .Packet.UpgradeInfo info = 1;
inline bool UpgradeColorReq::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeColorReq::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeColorReq::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeColorReq::clear_info() {
  if (info_ != NULL) info_->::Packet::UpgradeInfo::Clear();
  clear_has_info();
  SetDirty();
}
inline const ::Packet::UpgradeInfo& UpgradeColorReq::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Packet::UpgradeInfo* UpgradeColorReq::mutable_info() {
  SetDirty();
  set_has_info();
  if (info_ == NULL) info_ = new ::Packet::UpgradeInfo;
  return info_;
}
inline ::Packet::UpgradeInfo* UpgradeColorReq::release_info() {
  SetDirty();
  clear_has_info();
  ::Packet::UpgradeInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UpgradeColorReq::set_allocated_info(::Packet::UpgradeInfo* info) {
  SetDirty();
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// required .Packet.ActorColor up_to_color = 2;
inline bool UpgradeColorReq::has_up_to_color() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpgradeColorReq::set_has_up_to_color() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpgradeColorReq::clear_has_up_to_color() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpgradeColorReq::clear_up_to_color() {
  up_to_color_ = 1;
  clear_has_up_to_color();
  SetDirty();
}
inline ::Packet::ActorColor UpgradeColorReq::up_to_color() const {
  return static_cast< ::Packet::ActorColor >(up_to_color_);
}
inline void UpgradeColorReq::set_up_to_color(::Packet::ActorColor value) {
  assert(::Packet::ActorColor_IsValid(value));
  SetDirty();
  set_has_up_to_color();
  up_to_color_ = value;
}

// -------------------------------------------------------------------

// UpgradeColorReply

// required fixed64 actor_guid = 1;
inline bool UpgradeColorReply::has_actor_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeColorReply::set_has_actor_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeColorReply::clear_has_actor_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeColorReply::clear_actor_guid() {
  actor_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_actor_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 UpgradeColorReply::actor_guid() const {
  return actor_guid_;
}
inline void UpgradeColorReply::set_actor_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_actor_guid();
  actor_guid_ = value;
}

// required .Packet.ActorColor now_color = 2;
inline bool UpgradeColorReply::has_now_color() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpgradeColorReply::set_has_now_color() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpgradeColorReply::clear_has_now_color() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpgradeColorReply::clear_now_color() {
  now_color_ = 1;
  clear_has_now_color();
  SetDirty();
}
inline ::Packet::ActorColor UpgradeColorReply::now_color() const {
  return static_cast< ::Packet::ActorColor >(now_color_);
}
inline void UpgradeColorReply::set_now_color(::Packet::ActorColor value) {
  assert(::Packet::ActorColor_IsValid(value));
  SetDirty();
  set_has_now_color();
  now_color_ = value;
}

// optional .Packet.BattleInfo prev = 3;
inline bool UpgradeColorReply::has_prev() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpgradeColorReply::set_has_prev() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpgradeColorReply::clear_has_prev() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpgradeColorReply::clear_prev() {
  if (prev_ != NULL) prev_->::Packet::BattleInfo::Clear();
  clear_has_prev();
  SetDirty();
}
inline const ::Packet::BattleInfo& UpgradeColorReply::prev() const {
  return prev_ != NULL ? *prev_ : *default_instance_->prev_;
}
inline ::Packet::BattleInfo* UpgradeColorReply::mutable_prev() {
  SetDirty();
  set_has_prev();
  if (prev_ == NULL) prev_ = new ::Packet::BattleInfo;
  return prev_;
}
inline ::Packet::BattleInfo* UpgradeColorReply::release_prev() {
  SetDirty();
  clear_has_prev();
  ::Packet::BattleInfo* temp = prev_;
  prev_ = NULL;
  return temp;
}
inline void UpgradeColorReply::set_allocated_prev(::Packet::BattleInfo* prev) {
  SetDirty();
  delete prev_;
  prev_ = prev;
  if (prev) {
    set_has_prev();
  } else {
    clear_has_prev();
  }
}

// optional .Packet.BattleInfo curr = 4;
inline bool UpgradeColorReply::has_curr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpgradeColorReply::set_has_curr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpgradeColorReply::clear_has_curr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpgradeColorReply::clear_curr() {
  if (curr_ != NULL) curr_->::Packet::BattleInfo::Clear();
  clear_has_curr();
  SetDirty();
}
inline const ::Packet::BattleInfo& UpgradeColorReply::curr() const {
  return curr_ != NULL ? *curr_ : *default_instance_->curr_;
}
inline ::Packet::BattleInfo* UpgradeColorReply::mutable_curr() {
  SetDirty();
  set_has_curr();
  if (curr_ == NULL) curr_ = new ::Packet::BattleInfo;
  return curr_;
}
inline ::Packet::BattleInfo* UpgradeColorReply::release_curr() {
  SetDirty();
  clear_has_curr();
  ::Packet::BattleInfo* temp = curr_;
  curr_ = NULL;
  return temp;
}
inline void UpgradeColorReply::set_allocated_curr(::Packet::BattleInfo* curr) {
  SetDirty();
  delete curr_;
  curr_ = curr;
  if (curr) {
    set_has_curr();
  } else {
    clear_has_curr();
  }
}

// -------------------------------------------------------------------

// UpgradeLevelReq

// required bool one_key = 1;
inline bool UpgradeLevelReq::has_one_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeLevelReq::set_has_one_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeLevelReq::clear_has_one_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeLevelReq::clear_one_key() {
  one_key_ = false;
  clear_has_one_key();
  SetDirty();
}
inline bool UpgradeLevelReq::one_key() const {
  return one_key_;
}
inline void UpgradeLevelReq::set_one_key(bool value) {
  SetDirty();
  set_has_one_key();
  one_key_ = value;
}

// required fixed64 actor_guid = 2;
inline bool UpgradeLevelReq::has_actor_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpgradeLevelReq::set_has_actor_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpgradeLevelReq::clear_has_actor_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpgradeLevelReq::clear_actor_guid() {
  actor_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_actor_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 UpgradeLevelReq::actor_guid() const {
  return actor_guid_;
}
inline void UpgradeLevelReq::set_actor_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_actor_guid();
  actor_guid_ = value;
}

// -------------------------------------------------------------------

// UpgradeLevelReply

// required .Packet.UpgradeLevelReq req = 1;
inline bool UpgradeLevelReply::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeLevelReply::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeLevelReply::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeLevelReply::clear_req() {
  if (req_ != NULL) req_->::Packet::UpgradeLevelReq::Clear();
  clear_has_req();
  SetDirty();
}
inline const ::Packet::UpgradeLevelReq& UpgradeLevelReply::req() const {
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
inline ::Packet::UpgradeLevelReq* UpgradeLevelReply::mutable_req() {
  SetDirty();
  set_has_req();
  if (req_ == NULL) req_ = new ::Packet::UpgradeLevelReq;
  return req_;
}
inline ::Packet::UpgradeLevelReq* UpgradeLevelReply::release_req() {
  SetDirty();
  clear_has_req();
  ::Packet::UpgradeLevelReq* temp = req_;
  req_ = NULL;
  return temp;
}
inline void UpgradeLevelReply::set_allocated_req(::Packet::UpgradeLevelReq* req) {
  SetDirty();
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
}

// required .Packet.UpgradeLevelReply.Result result = 2;
inline bool UpgradeLevelReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpgradeLevelReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpgradeLevelReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpgradeLevelReply::clear_result() {
  result_ = 1;
  clear_has_result();
  SetDirty();
}
inline ::Packet::UpgradeLevelReply_Result UpgradeLevelReply::result() const {
  return static_cast< ::Packet::UpgradeLevelReply_Result >(result_);
}
inline void UpgradeLevelReply::set_result(::Packet::UpgradeLevelReply_Result value) {
  assert(::Packet::UpgradeLevelReply_Result_IsValid(value));
  SetDirty();
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// UpgradeStarReq

// required .Packet.UpgradeInfo info = 1;
inline bool UpgradeStarReq::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeStarReq::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeStarReq::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeStarReq::clear_info() {
  if (info_ != NULL) info_->::Packet::UpgradeInfo::Clear();
  clear_has_info();
  SetDirty();
}
inline const ::Packet::UpgradeInfo& UpgradeStarReq::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Packet::UpgradeInfo* UpgradeStarReq::mutable_info() {
  SetDirty();
  set_has_info();
  if (info_ == NULL) info_ = new ::Packet::UpgradeInfo;
  return info_;
}
inline ::Packet::UpgradeInfo* UpgradeStarReq::release_info() {
  SetDirty();
  clear_has_info();
  ::Packet::UpgradeInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UpgradeStarReq::set_allocated_info(::Packet::UpgradeInfo* info) {
  SetDirty();
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// required .Packet.ActorStar up_to_star = 2;
inline bool UpgradeStarReq::has_up_to_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpgradeStarReq::set_has_up_to_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpgradeStarReq::clear_has_up_to_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpgradeStarReq::clear_up_to_star() {
  up_to_star_ = 1;
  clear_has_up_to_star();
  SetDirty();
}
inline ::Packet::ActorStar UpgradeStarReq::up_to_star() const {
  return static_cast< ::Packet::ActorStar >(up_to_star_);
}
inline void UpgradeStarReq::set_up_to_star(::Packet::ActorStar value) {
  assert(::Packet::ActorStar_IsValid(value));
  SetDirty();
  set_has_up_to_star();
  up_to_star_ = value;
}

// -------------------------------------------------------------------

// UpgradeStarReply

// required .Packet.UpgradeStarReq req = 1;
inline bool UpgradeStarReply::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeStarReply::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeStarReply::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeStarReply::clear_req() {
  if (req_ != NULL) req_->::Packet::UpgradeStarReq::Clear();
  clear_has_req();
  SetDirty();
}
inline const ::Packet::UpgradeStarReq& UpgradeStarReply::req() const {
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
inline ::Packet::UpgradeStarReq* UpgradeStarReply::mutable_req() {
  SetDirty();
  set_has_req();
  if (req_ == NULL) req_ = new ::Packet::UpgradeStarReq;
  return req_;
}
inline ::Packet::UpgradeStarReq* UpgradeStarReply::release_req() {
  SetDirty();
  clear_has_req();
  ::Packet::UpgradeStarReq* temp = req_;
  req_ = NULL;
  return temp;
}
inline void UpgradeStarReply::set_allocated_req(::Packet::UpgradeStarReq* req) {
  SetDirty();
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
}

// required .Packet.UpgradeStarReply.Result result = 2;
inline bool UpgradeStarReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpgradeStarReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpgradeStarReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpgradeStarReply::clear_result() {
  result_ = 1;
  clear_has_result();
  SetDirty();
}
inline ::Packet::UpgradeStarReply_Result UpgradeStarReply::result() const {
  return static_cast< ::Packet::UpgradeStarReply_Result >(result_);
}
inline void UpgradeStarReply::set_result(::Packet::UpgradeStarReply_Result value) {
  assert(::Packet::UpgradeStarReply_Result_IsValid(value));
  SetDirty();
  set_has_result();
  result_ = value;
}

// optional .Packet.ActorStar now_star = 3;
inline bool UpgradeStarReply::has_now_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpgradeStarReply::set_has_now_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpgradeStarReply::clear_has_now_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpgradeStarReply::clear_now_star() {
  now_star_ = 1;
  clear_has_now_star();
  SetDirty();
}
inline ::Packet::ActorStar UpgradeStarReply::now_star() const {
  return static_cast< ::Packet::ActorStar >(now_star_);
}
inline void UpgradeStarReply::set_now_star(::Packet::ActorStar value) {
  assert(::Packet::ActorStar_IsValid(value));
  SetDirty();
  set_has_now_star();
  now_star_ = value;
}

// optional .Packet.BattleInfo prev = 4;
inline bool UpgradeStarReply::has_prev() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpgradeStarReply::set_has_prev() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpgradeStarReply::clear_has_prev() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpgradeStarReply::clear_prev() {
  if (prev_ != NULL) prev_->::Packet::BattleInfo::Clear();
  clear_has_prev();
  SetDirty();
}
inline const ::Packet::BattleInfo& UpgradeStarReply::prev() const {
  return prev_ != NULL ? *prev_ : *default_instance_->prev_;
}
inline ::Packet::BattleInfo* UpgradeStarReply::mutable_prev() {
  SetDirty();
  set_has_prev();
  if (prev_ == NULL) prev_ = new ::Packet::BattleInfo;
  return prev_;
}
inline ::Packet::BattleInfo* UpgradeStarReply::release_prev() {
  SetDirty();
  clear_has_prev();
  ::Packet::BattleInfo* temp = prev_;
  prev_ = NULL;
  return temp;
}
inline void UpgradeStarReply::set_allocated_prev(::Packet::BattleInfo* prev) {
  SetDirty();
  delete prev_;
  prev_ = prev;
  if (prev) {
    set_has_prev();
  } else {
    clear_has_prev();
  }
}

// optional .Packet.BattleInfo curr = 5;
inline bool UpgradeStarReply::has_curr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpgradeStarReply::set_has_curr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpgradeStarReply::clear_has_curr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpgradeStarReply::clear_curr() {
  if (curr_ != NULL) curr_->::Packet::BattleInfo::Clear();
  clear_has_curr();
  SetDirty();
}
inline const ::Packet::BattleInfo& UpgradeStarReply::curr() const {
  return curr_ != NULL ? *curr_ : *default_instance_->curr_;
}
inline ::Packet::BattleInfo* UpgradeStarReply::mutable_curr() {
  SetDirty();
  set_has_curr();
  if (curr_ == NULL) curr_ = new ::Packet::BattleInfo;
  return curr_;
}
inline ::Packet::BattleInfo* UpgradeStarReply::release_curr() {
  SetDirty();
  clear_has_curr();
  ::Packet::BattleInfo* temp = curr_;
  curr_ = NULL;
  return temp;
}
inline void UpgradeStarReply::set_allocated_curr(::Packet::BattleInfo* curr) {
  SetDirty();
  delete curr_;
  curr_ = curr;
  if (curr) {
    set_has_curr();
  } else {
    clear_has_curr();
  }
}

// -------------------------------------------------------------------

// UpgradeSkillReq

// required fixed64 actor_guid = 1;
inline bool UpgradeSkillReq::has_actor_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeSkillReq::set_has_actor_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeSkillReq::clear_has_actor_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeSkillReq::clear_actor_guid() {
  actor_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_actor_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 UpgradeSkillReq::actor_guid() const {
  return actor_guid_;
}
inline void UpgradeSkillReq::set_actor_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_actor_guid();
  actor_guid_ = value;
}

// repeated fixed64 skill_guid = 2;
inline int UpgradeSkillReq::skill_guid_size() const {
  return skill_guid_.size();
}
inline void UpgradeSkillReq::clear_skill_guid() {
  skill_guid_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 UpgradeSkillReq::skill_guid(int index) const {
  return skill_guid_.Get(index);
}
inline void UpgradeSkillReq::set_skill_guid(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  skill_guid_.Set(index, value);
}
inline void UpgradeSkillReq::add_skill_guid(::google::protobuf::uint64 value) {
  SetDirty();
  skill_guid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
UpgradeSkillReq::skill_guid() const {
  return skill_guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
UpgradeSkillReq::mutable_skill_guid() {
  SetDirty();
  return &skill_guid_;
}

// repeated int32 up_to_level = 3;
inline int UpgradeSkillReq::up_to_level_size() const {
  return up_to_level_.size();
}
inline void UpgradeSkillReq::clear_up_to_level() {
  up_to_level_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 UpgradeSkillReq::up_to_level(int index) const {
  return up_to_level_.Get(index);
}
inline void UpgradeSkillReq::set_up_to_level(int index, ::google::protobuf::int32 value) {
  SetDirty();
  up_to_level_.Set(index, value);
}
inline void UpgradeSkillReq::add_up_to_level(::google::protobuf::int32 value) {
  SetDirty();
  up_to_level_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UpgradeSkillReq::up_to_level() const {
  return up_to_level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UpgradeSkillReq::mutable_up_to_level() {
  SetDirty();
  return &up_to_level_;
}

// -------------------------------------------------------------------

// EnhenceEquipReq

// repeated fixed64 equip_guid = 1;
inline int EnhenceEquipReq::equip_guid_size() const {
  return equip_guid_.size();
}
inline void EnhenceEquipReq::clear_equip_guid() {
  equip_guid_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 EnhenceEquipReq::equip_guid(int index) const {
  return equip_guid_.Get(index);
}
inline void EnhenceEquipReq::set_equip_guid(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  equip_guid_.Set(index, value);
}
inline void EnhenceEquipReq::add_equip_guid(::google::protobuf::uint64 value) {
  SetDirty();
  equip_guid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
EnhenceEquipReq::equip_guid() const {
  return equip_guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
EnhenceEquipReq::mutable_equip_guid() {
  SetDirty();
  return &equip_guid_;
}

// required bool is_max = 2;
inline bool EnhenceEquipReq::has_is_max() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnhenceEquipReq::set_has_is_max() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnhenceEquipReq::clear_has_is_max() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnhenceEquipReq::clear_is_max() {
  is_max_ = false;
  clear_has_is_max();
  SetDirty();
}
inline bool EnhenceEquipReq::is_max() const {
  return is_max_;
}
inline void EnhenceEquipReq::set_is_max(bool value) {
  SetDirty();
  set_has_is_max();
  is_max_ = value;
}

// -------------------------------------------------------------------

// AddEnchantSlotReq

// required fixed64 equip_guid = 1;
inline bool AddEnchantSlotReq::has_equip_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddEnchantSlotReq::set_has_equip_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddEnchantSlotReq::clear_has_equip_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddEnchantSlotReq::clear_equip_guid() {
  equip_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 AddEnchantSlotReq::equip_guid() const {
  return equip_guid_;
}
inline void AddEnchantSlotReq::set_equip_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_equip_guid();
  equip_guid_ = value;
}

// required int32 slot_index = 2;
inline bool AddEnchantSlotReq::has_slot_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddEnchantSlotReq::set_has_slot_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddEnchantSlotReq::clear_has_slot_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddEnchantSlotReq::clear_slot_index() {
  slot_index_ = 0;
  clear_has_slot_index();
  SetDirty();
}
inline ::google::protobuf::int32 AddEnchantSlotReq::slot_index() const {
  return slot_index_;
}
inline void AddEnchantSlotReq::set_slot_index(::google::protobuf::int32 value) {
  SetDirty();
  set_has_slot_index();
  slot_index_ = value;
}

// -------------------------------------------------------------------

// EnchantEquipReq

// required fixed64 equip_guid = 1;
inline bool EnchantEquipReq::has_equip_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnchantEquipReq::set_has_equip_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnchantEquipReq::clear_has_equip_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnchantEquipReq::clear_equip_guid() {
  equip_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 EnchantEquipReq::equip_guid() const {
  return equip_guid_;
}
inline void EnchantEquipReq::set_equip_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_equip_guid();
  equip_guid_ = value;
}

// repeated int32 lock_slots = 2;
inline int EnchantEquipReq::lock_slots_size() const {
  return lock_slots_.size();
}
inline void EnchantEquipReq::clear_lock_slots() {
  lock_slots_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 EnchantEquipReq::lock_slots(int index) const {
  return lock_slots_.Get(index);
}
inline void EnchantEquipReq::set_lock_slots(int index, ::google::protobuf::int32 value) {
  SetDirty();
  lock_slots_.Set(index, value);
}
inline void EnchantEquipReq::add_lock_slots(::google::protobuf::int32 value) {
  SetDirty();
  lock_slots_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
EnchantEquipReq::lock_slots() const {
  return lock_slots_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
EnchantEquipReq::mutable_lock_slots() {
  SetDirty();
  return &lock_slots_;
}

// repeated .Packet.UpgradeItemInfo items = 3;
inline int EnchantEquipReq::items_size() const {
  return items_.size();
}
inline void EnchantEquipReq::clear_items() {
  items_.Clear();
  SetDirty();
}
inline const ::Packet::UpgradeItemInfo& EnchantEquipReq::items(int index) const {
  return items_.Get(index);
}
inline ::Packet::UpgradeItemInfo* EnchantEquipReq::mutable_items(int index) {
  SetDirty();
  return items_.Mutable(index);
}
inline ::Packet::UpgradeItemInfo* EnchantEquipReq::add_items() {
  SetDirty();
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::UpgradeItemInfo >&
EnchantEquipReq::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::UpgradeItemInfo >*
EnchantEquipReq::mutable_items() {
  SetDirty();
  return &items_;
}

// -------------------------------------------------------------------

// BatchEnchantEquipReq

// required fixed64 equip_guid = 1;
inline bool BatchEnchantEquipReq::has_equip_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchEnchantEquipReq::set_has_equip_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchEnchantEquipReq::clear_has_equip_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchEnchantEquipReq::clear_equip_guid() {
  equip_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 BatchEnchantEquipReq::equip_guid() const {
  return equip_guid_;
}
inline void BatchEnchantEquipReq::set_equip_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_equip_guid();
  equip_guid_ = value;
}

// repeated int32 lock_slots = 2;
inline int BatchEnchantEquipReq::lock_slots_size() const {
  return lock_slots_.size();
}
inline void BatchEnchantEquipReq::clear_lock_slots() {
  lock_slots_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 BatchEnchantEquipReq::lock_slots(int index) const {
  return lock_slots_.Get(index);
}
inline void BatchEnchantEquipReq::set_lock_slots(int index, ::google::protobuf::int32 value) {
  SetDirty();
  lock_slots_.Set(index, value);
}
inline void BatchEnchantEquipReq::add_lock_slots(::google::protobuf::int32 value) {
  SetDirty();
  lock_slots_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BatchEnchantEquipReq::lock_slots() const {
  return lock_slots_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BatchEnchantEquipReq::mutable_lock_slots() {
  SetDirty();
  return &lock_slots_;
}

// repeated .Packet.UpgradeItemInfo item = 3;
inline int BatchEnchantEquipReq::item_size() const {
  return item_.size();
}
inline void BatchEnchantEquipReq::clear_item() {
  item_.Clear();
  SetDirty();
}
inline const ::Packet::UpgradeItemInfo& BatchEnchantEquipReq::item(int index) const {
  return item_.Get(index);
}
inline ::Packet::UpgradeItemInfo* BatchEnchantEquipReq::mutable_item(int index) {
  SetDirty();
  return item_.Mutable(index);
}
inline ::Packet::UpgradeItemInfo* BatchEnchantEquipReq::add_item() {
  SetDirty();
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::UpgradeItemInfo >&
BatchEnchantEquipReq::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::UpgradeItemInfo >*
BatchEnchantEquipReq::mutable_item() {
  SetDirty();
  return &item_;
}

// -------------------------------------------------------------------

// EnchantPreviewEle

// required string effect_type = 1;
inline bool EnchantPreviewEle::has_effect_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnchantPreviewEle::set_has_effect_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnchantPreviewEle::clear_has_effect_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnchantPreviewEle::clear_effect_type() {
  if (effect_type_ != &::google::protobuf::internal::kEmptyString) {
    effect_type_->clear();
  }
  clear_has_effect_type();
  SetDirty();
}
inline const ::std::string& EnchantPreviewEle::effect_type() const {
  return *effect_type_;
}
inline void EnchantPreviewEle::set_effect_type(const ::std::string& value) {
  SetDirty();
  set_has_effect_type();
  if (effect_type_ == &::google::protobuf::internal::kEmptyString) {
    effect_type_ = new ::std::string;
  }
  effect_type_->assign(value);
}
inline void EnchantPreviewEle::set_effect_type(const char* value) {
  SetDirty();
  set_has_effect_type();
  if (effect_type_ == &::google::protobuf::internal::kEmptyString) {
    effect_type_ = new ::std::string;
  }
  effect_type_->assign(value);
}
inline void EnchantPreviewEle::set_effect_type(const char* value, size_t size) {
  SetDirty();
  set_has_effect_type();
  if (effect_type_ == &::google::protobuf::internal::kEmptyString) {
    effect_type_ = new ::std::string;
  }
  effect_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* EnchantPreviewEle::mutable_effect_type() {
  SetDirty();
  set_has_effect_type();
  if (effect_type_ == &::google::protobuf::internal::kEmptyString) {
    effect_type_ = new ::std::string;
  }
  return effect_type_;
}
inline ::std::string* EnchantPreviewEle::release_effect_type() {
  SetDirty();
  clear_has_effect_type();
  if (effect_type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = effect_type_;
    effect_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void EnchantPreviewEle::set_allocated_effect_type(::std::string* effect_type) {
  SetDirty();
  if (effect_type_ != &::google::protobuf::internal::kEmptyString) {
    delete effect_type_;
  }
  if (effect_type) {
    set_has_effect_type();
    effect_type_ = effect_type;
  } else {
    clear_has_effect_type();
    effect_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 effect_value = 2;
inline bool EnchantPreviewEle::has_effect_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnchantPreviewEle::set_has_effect_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnchantPreviewEle::clear_has_effect_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnchantPreviewEle::clear_effect_value() {
  effect_value_ = 0;
  clear_has_effect_value();
  SetDirty();
}
inline ::google::protobuf::int32 EnchantPreviewEle::effect_value() const {
  return effect_value_;
}
inline void EnchantPreviewEle::set_effect_value(::google::protobuf::int32 value) {
  SetDirty();
  set_has_effect_value();
  effect_value_ = value;
}

// required int32 max_value = 3;
inline bool EnchantPreviewEle::has_max_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnchantPreviewEle::set_has_max_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnchantPreviewEle::clear_has_max_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnchantPreviewEle::clear_max_value() {
  max_value_ = 0;
  clear_has_max_value();
  SetDirty();
}
inline ::google::protobuf::int32 EnchantPreviewEle::max_value() const {
  return max_value_;
}
inline void EnchantPreviewEle::set_max_value(::google::protobuf::int32 value) {
  SetDirty();
  set_has_max_value();
  max_value_ = value;
}

// -------------------------------------------------------------------

// EnchantPreview

// repeated .Packet.EnchantPreviewEle elements = 1;
inline int EnchantPreview::elements_size() const {
  return elements_.size();
}
inline void EnchantPreview::clear_elements() {
  elements_.Clear();
  SetDirty();
}
inline const ::Packet::EnchantPreviewEle& EnchantPreview::elements(int index) const {
  return elements_.Get(index);
}
inline ::Packet::EnchantPreviewEle* EnchantPreview::mutable_elements(int index) {
  SetDirty();
  return elements_.Mutable(index);
}
inline ::Packet::EnchantPreviewEle* EnchantPreview::add_elements() {
  SetDirty();
  return elements_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::EnchantPreviewEle >&
EnchantPreview::elements() const {
  return elements_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::EnchantPreviewEle >*
EnchantPreview::mutable_elements() {
  SetDirty();
  return &elements_;
}

// -------------------------------------------------------------------

// BatchEnchantEquipReply

// required .Packet.BatchEnchantEquipReq req = 1;
inline bool BatchEnchantEquipReply::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchEnchantEquipReply::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchEnchantEquipReply::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchEnchantEquipReply::clear_req() {
  if (req_ != NULL) req_->::Packet::BatchEnchantEquipReq::Clear();
  clear_has_req();
  SetDirty();
}
inline const ::Packet::BatchEnchantEquipReq& BatchEnchantEquipReply::req() const {
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
inline ::Packet::BatchEnchantEquipReq* BatchEnchantEquipReply::mutable_req() {
  SetDirty();
  set_has_req();
  if (req_ == NULL) req_ = new ::Packet::BatchEnchantEquipReq;
  return req_;
}
inline ::Packet::BatchEnchantEquipReq* BatchEnchantEquipReply::release_req() {
  SetDirty();
  clear_has_req();
  ::Packet::BatchEnchantEquipReq* temp = req_;
  req_ = NULL;
  return temp;
}
inline void BatchEnchantEquipReply::set_allocated_req(::Packet::BatchEnchantEquipReq* req) {
  SetDirty();
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
}

// repeated .Packet.EnchantPreview previews = 2;
inline int BatchEnchantEquipReply::previews_size() const {
  return previews_.size();
}
inline void BatchEnchantEquipReply::clear_previews() {
  previews_.Clear();
  SetDirty();
}
inline const ::Packet::EnchantPreview& BatchEnchantEquipReply::previews(int index) const {
  return previews_.Get(index);
}
inline ::Packet::EnchantPreview* BatchEnchantEquipReply::mutable_previews(int index) {
  SetDirty();
  return previews_.Mutable(index);
}
inline ::Packet::EnchantPreview* BatchEnchantEquipReply::add_previews() {
  SetDirty();
  return previews_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::EnchantPreview >&
BatchEnchantEquipReply::previews() const {
  return previews_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::EnchantPreview >*
BatchEnchantEquipReply::mutable_previews() {
  SetDirty();
  return &previews_;
}

// -------------------------------------------------------------------

// BatchEnchantEquipConfirmReq

// required fixed64 equip_guid = 1;
inline bool BatchEnchantEquipConfirmReq::has_equip_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchEnchantEquipConfirmReq::set_has_equip_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchEnchantEquipConfirmReq::clear_has_equip_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchEnchantEquipConfirmReq::clear_equip_guid() {
  equip_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 BatchEnchantEquipConfirmReq::equip_guid() const {
  return equip_guid_;
}
inline void BatchEnchantEquipConfirmReq::set_equip_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_equip_guid();
  equip_guid_ = value;
}

// required int32 confirm_index = 2;
inline bool BatchEnchantEquipConfirmReq::has_confirm_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchEnchantEquipConfirmReq::set_has_confirm_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchEnchantEquipConfirmReq::clear_has_confirm_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchEnchantEquipConfirmReq::clear_confirm_index() {
  confirm_index_ = 0;
  clear_has_confirm_index();
  SetDirty();
}
inline ::google::protobuf::int32 BatchEnchantEquipConfirmReq::confirm_index() const {
  return confirm_index_;
}
inline void BatchEnchantEquipConfirmReq::set_confirm_index(::google::protobuf::int32 value) {
  SetDirty();
  set_has_confirm_index();
  confirm_index_ = value;
}

// -------------------------------------------------------------------

// BatchEnchantEquipConfirmReply

// required .Packet.BatchEnchantEquipConfirmReq req = 1;
inline bool BatchEnchantEquipConfirmReply::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchEnchantEquipConfirmReply::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchEnchantEquipConfirmReply::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchEnchantEquipConfirmReply::clear_req() {
  if (req_ != NULL) req_->::Packet::BatchEnchantEquipConfirmReq::Clear();
  clear_has_req();
  SetDirty();
}
inline const ::Packet::BatchEnchantEquipConfirmReq& BatchEnchantEquipConfirmReply::req() const {
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
inline ::Packet::BatchEnchantEquipConfirmReq* BatchEnchantEquipConfirmReply::mutable_req() {
  SetDirty();
  set_has_req();
  if (req_ == NULL) req_ = new ::Packet::BatchEnchantEquipConfirmReq;
  return req_;
}
inline ::Packet::BatchEnchantEquipConfirmReq* BatchEnchantEquipConfirmReply::release_req() {
  SetDirty();
  clear_has_req();
  ::Packet::BatchEnchantEquipConfirmReq* temp = req_;
  req_ = NULL;
  return temp;
}
inline void BatchEnchantEquipConfirmReply::set_allocated_req(::Packet::BatchEnchantEquipConfirmReq* req) {
  SetDirty();
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
}

// required .Packet.BatchEnchantEquipConfirmReply.Result result = 2;
inline bool BatchEnchantEquipConfirmReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchEnchantEquipConfirmReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchEnchantEquipConfirmReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchEnchantEquipConfirmReply::clear_result() {
  result_ = 1;
  clear_has_result();
  SetDirty();
}
inline ::Packet::BatchEnchantEquipConfirmReply_Result BatchEnchantEquipConfirmReply::result() const {
  return static_cast< ::Packet::BatchEnchantEquipConfirmReply_Result >(result_);
}
inline void BatchEnchantEquipConfirmReply::set_result(::Packet::BatchEnchantEquipConfirmReply_Result value) {
  assert(::Packet::BatchEnchantEquipConfirmReply_Result_IsValid(value));
  SetDirty();
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// InsetEquipReq

// repeated fixed64 equip_guid = 1;
inline int InsetEquipReq::equip_guid_size() const {
  return equip_guid_.size();
}
inline void InsetEquipReq::clear_equip_guid() {
  equip_guid_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 InsetEquipReq::equip_guid(int index) const {
  return equip_guid_.Get(index);
}
inline void InsetEquipReq::set_equip_guid(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  equip_guid_.Set(index, value);
}
inline void InsetEquipReq::add_equip_guid(::google::protobuf::uint64 value) {
  SetDirty();
  equip_guid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
InsetEquipReq::equip_guid() const {
  return equip_guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
InsetEquipReq::mutable_equip_guid() {
  SetDirty();
  return &equip_guid_;
}

// repeated int32 gem_config_id = 2;
inline int InsetEquipReq::gem_config_id_size() const {
  return gem_config_id_.size();
}
inline void InsetEquipReq::clear_gem_config_id() {
  gem_config_id_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 InsetEquipReq::gem_config_id(int index) const {
  return gem_config_id_.Get(index);
}
inline void InsetEquipReq::set_gem_config_id(int index, ::google::protobuf::int32 value) {
  SetDirty();
  gem_config_id_.Set(index, value);
}
inline void InsetEquipReq::add_gem_config_id(::google::protobuf::int32 value) {
  SetDirty();
  gem_config_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
InsetEquipReq::gem_config_id() const {
  return gem_config_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
InsetEquipReq::mutable_gem_config_id() {
  SetDirty();
  return &gem_config_id_;
}

// repeated int32 index = 3;
inline int InsetEquipReq::index_size() const {
  return index_.size();
}
inline void InsetEquipReq::clear_index() {
  index_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 InsetEquipReq::index(int index) const {
  return index_.Get(index);
}
inline void InsetEquipReq::set_index(int index, ::google::protobuf::int32 value) {
  SetDirty();
  index_.Set(index, value);
}
inline void InsetEquipReq::add_index(::google::protobuf::int32 value) {
  SetDirty();
  index_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
InsetEquipReq::index() const {
  return index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
InsetEquipReq::mutable_index() {
  SetDirty();
  return &index_;
}

// -------------------------------------------------------------------

// TakeOutGemReq

// repeated fixed64 equip_guid = 1;
inline int TakeOutGemReq::equip_guid_size() const {
  return equip_guid_.size();
}
inline void TakeOutGemReq::clear_equip_guid() {
  equip_guid_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 TakeOutGemReq::equip_guid(int index) const {
  return equip_guid_.Get(index);
}
inline void TakeOutGemReq::set_equip_guid(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  equip_guid_.Set(index, value);
}
inline void TakeOutGemReq::add_equip_guid(::google::protobuf::uint64 value) {
  SetDirty();
  equip_guid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TakeOutGemReq::equip_guid() const {
  return equip_guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TakeOutGemReq::mutable_equip_guid() {
  SetDirty();
  return &equip_guid_;
}

// repeated int32 gem_config_id = 2;
inline int TakeOutGemReq::gem_config_id_size() const {
  return gem_config_id_.size();
}
inline void TakeOutGemReq::clear_gem_config_id() {
  gem_config_id_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 TakeOutGemReq::gem_config_id(int index) const {
  return gem_config_id_.Get(index);
}
inline void TakeOutGemReq::set_gem_config_id(int index, ::google::protobuf::int32 value) {
  SetDirty();
  gem_config_id_.Set(index, value);
}
inline void TakeOutGemReq::add_gem_config_id(::google::protobuf::int32 value) {
  SetDirty();
  gem_config_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TakeOutGemReq::gem_config_id() const {
  return gem_config_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TakeOutGemReq::mutable_gem_config_id() {
  SetDirty();
  return &gem_config_id_;
}

// repeated int32 index = 3;
inline int TakeOutGemReq::index_size() const {
  return index_.size();
}
inline void TakeOutGemReq::clear_index() {
  index_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 TakeOutGemReq::index(int index) const {
  return index_.Get(index);
}
inline void TakeOutGemReq::set_index(int index, ::google::protobuf::int32 value) {
  SetDirty();
  index_.Set(index, value);
}
inline void TakeOutGemReq::add_index(::google::protobuf::int32 value) {
  SetDirty();
  index_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TakeOutGemReq::index() const {
  return index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TakeOutGemReq::mutable_index() {
  SetDirty();
  return &index_;
}

// -------------------------------------------------------------------

// EquipInheritReq

// required fixed64 old_equip_guid = 1;
inline bool EquipInheritReq::has_old_equip_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipInheritReq::set_has_old_equip_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipInheritReq::clear_has_old_equip_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipInheritReq::clear_old_equip_guid() {
  old_equip_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_old_equip_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 EquipInheritReq::old_equip_guid() const {
  return old_equip_guid_;
}
inline void EquipInheritReq::set_old_equip_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_old_equip_guid();
  old_equip_guid_ = value;
}

// required fixed64 new_equip_guid = 2;
inline bool EquipInheritReq::has_new_equip_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipInheritReq::set_has_new_equip_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipInheritReq::clear_has_new_equip_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipInheritReq::clear_new_equip_guid() {
  new_equip_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_new_equip_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 EquipInheritReq::new_equip_guid() const {
  return new_equip_guid_;
}
inline void EquipInheritReq::set_new_equip_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_new_equip_guid();
  new_equip_guid_ = value;
}

// -------------------------------------------------------------------

// FixEquipReq

// repeated fixed64 equip_guid = 1;
inline int FixEquipReq::equip_guid_size() const {
  return equip_guid_.size();
}
inline void FixEquipReq::clear_equip_guid() {
  equip_guid_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 FixEquipReq::equip_guid(int index) const {
  return equip_guid_.Get(index);
}
inline void FixEquipReq::set_equip_guid(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  equip_guid_.Set(index, value);
}
inline void FixEquipReq::add_equip_guid(::google::protobuf::uint64 value) {
  SetDirty();
  equip_guid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
FixEquipReq::equip_guid() const {
  return equip_guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
FixEquipReq::mutable_equip_guid() {
  SetDirty();
  return &equip_guid_;
}

// -------------------------------------------------------------------

// GemFusionReq

// required fixed64 gem_guid = 1;
inline bool GemFusionReq::has_gem_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GemFusionReq::set_has_gem_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GemFusionReq::clear_has_gem_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GemFusionReq::clear_gem_guid() {
  gem_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_gem_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 GemFusionReq::gem_guid() const {
  return gem_guid_;
}
inline void GemFusionReq::set_gem_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_gem_guid();
  gem_guid_ = value;
}

// required bool fusion_all = 2;
inline bool GemFusionReq::has_fusion_all() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GemFusionReq::set_has_fusion_all() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GemFusionReq::clear_has_fusion_all() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GemFusionReq::clear_fusion_all() {
  fusion_all_ = false;
  clear_has_fusion_all();
  SetDirty();
}
inline bool GemFusionReq::fusion_all() const {
  return fusion_all_;
}
inline void GemFusionReq::set_fusion_all(bool value) {
  SetDirty();
  set_has_fusion_all();
  fusion_all_ = value;
}

// required bool cannot_fail = 3;
inline bool GemFusionReq::has_cannot_fail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GemFusionReq::set_has_cannot_fail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GemFusionReq::clear_has_cannot_fail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GemFusionReq::clear_cannot_fail() {
  cannot_fail_ = false;
  clear_has_cannot_fail();
  SetDirty();
}
inline bool GemFusionReq::cannot_fail() const {
  return cannot_fail_;
}
inline void GemFusionReq::set_cannot_fail(bool value) {
  SetDirty();
  set_has_cannot_fail();
  cannot_fail_ = value;
}

// -------------------------------------------------------------------

// CG_GemFusion

// repeated fixed64 bag_gem_guids = 1;
inline int CG_GemFusion::bag_gem_guids_size() const {
  return bag_gem_guids_.size();
}
inline void CG_GemFusion::clear_bag_gem_guids() {
  bag_gem_guids_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 CG_GemFusion::bag_gem_guids(int index) const {
  return bag_gem_guids_.Get(index);
}
inline void CG_GemFusion::set_bag_gem_guids(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  bag_gem_guids_.Set(index, value);
}
inline void CG_GemFusion::add_bag_gem_guids(::google::protobuf::uint64 value) {
  SetDirty();
  bag_gem_guids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CG_GemFusion::bag_gem_guids() const {
  return bag_gem_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CG_GemFusion::mutable_bag_gem_guids() {
  SetDirty();
  return &bag_gem_guids_;
}

// repeated int32 bag_gem_counts = 2;
inline int CG_GemFusion::bag_gem_counts_size() const {
  return bag_gem_counts_.size();
}
inline void CG_GemFusion::clear_bag_gem_counts() {
  bag_gem_counts_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 CG_GemFusion::bag_gem_counts(int index) const {
  return bag_gem_counts_.Get(index);
}
inline void CG_GemFusion::set_bag_gem_counts(int index, ::google::protobuf::int32 value) {
  SetDirty();
  bag_gem_counts_.Set(index, value);
}
inline void CG_GemFusion::add_bag_gem_counts(::google::protobuf::int32 value) {
  SetDirty();
  bag_gem_counts_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CG_GemFusion::bag_gem_counts() const {
  return bag_gem_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CG_GemFusion::mutable_bag_gem_counts() {
  SetDirty();
  return &bag_gem_counts_;
}

// repeated int32 buy_gem_ids = 3;
inline int CG_GemFusion::buy_gem_ids_size() const {
  return buy_gem_ids_.size();
}
inline void CG_GemFusion::clear_buy_gem_ids() {
  buy_gem_ids_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 CG_GemFusion::buy_gem_ids(int index) const {
  return buy_gem_ids_.Get(index);
}
inline void CG_GemFusion::set_buy_gem_ids(int index, ::google::protobuf::int32 value) {
  SetDirty();
  buy_gem_ids_.Set(index, value);
}
inline void CG_GemFusion::add_buy_gem_ids(::google::protobuf::int32 value) {
  SetDirty();
  buy_gem_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CG_GemFusion::buy_gem_ids() const {
  return buy_gem_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CG_GemFusion::mutable_buy_gem_ids() {
  SetDirty();
  return &buy_gem_ids_;
}

// repeated int32 buy_gem_counts = 4;
inline int CG_GemFusion::buy_gem_counts_size() const {
  return buy_gem_counts_.size();
}
inline void CG_GemFusion::clear_buy_gem_counts() {
  buy_gem_counts_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 CG_GemFusion::buy_gem_counts(int index) const {
  return buy_gem_counts_.Get(index);
}
inline void CG_GemFusion::set_buy_gem_counts(int index, ::google::protobuf::int32 value) {
  SetDirty();
  buy_gem_counts_.Set(index, value);
}
inline void CG_GemFusion::add_buy_gem_counts(::google::protobuf::int32 value) {
  SetDirty();
  buy_gem_counts_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CG_GemFusion::buy_gem_counts() const {
  return buy_gem_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CG_GemFusion::mutable_buy_gem_counts() {
  SetDirty();
  return &buy_gem_counts_;
}

// required int32 target_gem_id = 5;
inline bool CG_GemFusion::has_target_gem_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CG_GemFusion::set_has_target_gem_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CG_GemFusion::clear_has_target_gem_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CG_GemFusion::clear_target_gem_id() {
  target_gem_id_ = 0;
  clear_has_target_gem_id();
  SetDirty();
}
inline ::google::protobuf::int32 CG_GemFusion::target_gem_id() const {
  return target_gem_id_;
}
inline void CG_GemFusion::set_target_gem_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_target_gem_id();
  target_gem_id_ = value;
}

// optional fixed64 equip_guid = 6;
inline bool CG_GemFusion::has_equip_guid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CG_GemFusion::set_has_equip_guid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CG_GemFusion::clear_has_equip_guid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CG_GemFusion::clear_equip_guid() {
  equip_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 CG_GemFusion::equip_guid() const {
  return equip_guid_;
}
inline void CG_GemFusion::set_equip_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_equip_guid();
  equip_guid_ = value;
}

// optional int32 gem_index = 7;
inline bool CG_GemFusion::has_gem_index() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CG_GemFusion::set_has_gem_index() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CG_GemFusion::clear_has_gem_index() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CG_GemFusion::clear_gem_index() {
  gem_index_ = 0;
  clear_has_gem_index();
  SetDirty();
}
inline ::google::protobuf::int32 CG_GemFusion::gem_index() const {
  return gem_index_;
}
inline void CG_GemFusion::set_gem_index(::google::protobuf::int32 value) {
  SetDirty();
  set_has_gem_index();
  gem_index_ = value;
}

// -------------------------------------------------------------------

// DismantleEquipReq

// repeated fixed64 equip_guids = 1;
inline int DismantleEquipReq::equip_guids_size() const {
  return equip_guids_.size();
}
inline void DismantleEquipReq::clear_equip_guids() {
  equip_guids_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 DismantleEquipReq::equip_guids(int index) const {
  return equip_guids_.Get(index);
}
inline void DismantleEquipReq::set_equip_guids(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  equip_guids_.Set(index, value);
}
inline void DismantleEquipReq::add_equip_guids(::google::protobuf::uint64 value) {
  SetDirty();
  equip_guids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
DismantleEquipReq::equip_guids() const {
  return equip_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
DismantleEquipReq::mutable_equip_guids() {
  SetDirty();
  return &equip_guids_;
}

// -------------------------------------------------------------------

// EquipMagicalReq

// required fixed64 src_guid = 1;
inline bool EquipMagicalReq::has_src_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipMagicalReq::set_has_src_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipMagicalReq::clear_has_src_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipMagicalReq::clear_src_guid() {
  src_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_src_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 EquipMagicalReq::src_guid() const {
  return src_guid_;
}
inline void EquipMagicalReq::set_src_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_src_guid();
  src_guid_ = value;
}

// required fixed64 des_guid = 2;
inline bool EquipMagicalReq::has_des_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipMagicalReq::set_has_des_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipMagicalReq::clear_has_des_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipMagicalReq::clear_des_guid() {
  des_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_des_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 EquipMagicalReq::des_guid() const {
  return des_guid_;
}
inline void EquipMagicalReq::set_des_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_des_guid();
  des_guid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Packet

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Packet::UpgradeLevelReply_Result>() {
  return ::Packet::UpgradeLevelReply_Result_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Packet::UpgradeStarReply_Result>() {
  return ::Packet::UpgradeStarReply_Result_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Packet::BatchEnchantEquipConfirmReply_Result>() {
  return ::Packet::BatchEnchantEquipConfirmReply_Result_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Upgrades_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BattleExpression.proto

#ifndef PROTOBUF_BattleExpression_2eproto__INCLUDED
#define PROTOBUF_BattleExpression_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Base.pb.h"
#include "AllPacketEnum.pb.h"
#include "AllConfigEnum.pb.h"
#include "PlayerBasicInfo.pb.h"
#include "ItemConfig.pb.h"
#include "PackageConfig.pb.h"
#include "AbilityAndStatus.pb.h"
// @@protoc_insertion_point(includes)

namespace Packet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BattleExpression_2eproto();
void protobuf_AssignDesc_BattleExpression_2eproto();
void protobuf_ShutdownFile_BattleExpression_2eproto();

class SkillInfo;
class BuffInfo;
class TrapInfo;
class ActorMoveToTarget;
class ActorMoveToTargetFinish;
class ActorMoveToPos;
class ActorUseSkill;
class ActorCancelSkill;
class ActorBuffAttach;
class ActorBuffRefresh;
class ActorAddState;
class ActorRemoveState;
class ActorBuffDettach;
class MoveSpeedUpdate;
class SkillEffects;
class ActorOnDamage;
class FlashChainDamage;
class CureChain;
class ActorOnCure;
class ActorDead;
class ActorRelive;
class ActorAddBuff;
class SkillPositionLogic;
class ActorTransform;
class ActorTransformCancel;
class TrapCreate;
class TrapDestroy;
class ActorDamage;
class ActorStat;
class Stat;
class StatisticInfo;

// ===================================================================

class SkillInfo : public ::google::protobuf::Message {
 public:
  SkillInfo();
  virtual ~SkillInfo();

  SkillInfo(const SkillInfo& from);

  inline SkillInfo& operator=(const SkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillInfo& default_instance();

  void Swap(SkillInfo* other);

  // implements Message ----------------------------------------------

  SkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillInfo& from);
  void MergeFrom(const SkillInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // required int32 skill_level = 2 [default = 1];
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::int32 skill_level() const;
  inline void set_skill_level(::google::protobuf::int32 value);

  // optional float bullet_speed = 3;
  inline bool has_bullet_speed() const;
  inline void clear_bullet_speed();
  static const int kBulletSpeedFieldNumber = 3;
  inline float bullet_speed() const;
  inline void set_bullet_speed(float value);

  // @@protoc_insertion_point(class_scope:Packet.SkillInfo)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  inline void set_has_bullet_speed();
  inline void clear_has_bullet_speed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 skill_id_;
  ::google::protobuf::int32 skill_level_;
  float bullet_speed_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static SkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class BuffInfo : public ::google::protobuf::Message {
 public:
  BuffInfo();
  virtual ~BuffInfo();

  BuffInfo(const BuffInfo& from);

  inline BuffInfo& operator=(const BuffInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffInfo& default_instance();

  void Swap(BuffInfo* other);

  // implements Message ----------------------------------------------

  BuffInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffInfo& from);
  void MergeFrom(const BuffInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 buff_id = 1;
  inline bool has_buff_id() const;
  inline void clear_buff_id();
  static const int kBuffIdFieldNumber = 1;
  inline ::google::protobuf::int32 buff_id() const;
  inline void set_buff_id(::google::protobuf::int32 value);

  // required int32 buff_level = 2 [default = 1];
  inline bool has_buff_level() const;
  inline void clear_buff_level();
  static const int kBuffLevelFieldNumber = 2;
  inline ::google::protobuf::int32 buff_level() const;
  inline void set_buff_level(::google::protobuf::int32 value);

  // optional .Packet.SkillInfo skill = 3;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 3;
  inline const ::Packet::SkillInfo& skill() const;
  inline ::Packet::SkillInfo* mutable_skill();
  inline ::Packet::SkillInfo* release_skill();
  inline void set_allocated_skill(::Packet::SkillInfo* skill);

  // optional int32 layer = 4;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 4;
  inline ::google::protobuf::int32 layer() const;
  inline void set_layer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.BuffInfo)
 private:
  inline void set_has_buff_id();
  inline void clear_has_buff_id();
  inline void set_has_buff_level();
  inline void clear_has_buff_level();
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_layer();
  inline void clear_has_layer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buff_id_;
  ::google::protobuf::int32 buff_level_;
  ::Packet::SkillInfo* skill_;
  ::google::protobuf::int32 layer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static BuffInfo* default_instance_;
};
// -------------------------------------------------------------------

class TrapInfo : public ::google::protobuf::Message {
 public:
  TrapInfo();
  virtual ~TrapInfo();

  TrapInfo(const TrapInfo& from);

  inline TrapInfo& operator=(const TrapInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrapInfo& default_instance();

  void Swap(TrapInfo* other);

  // implements Message ----------------------------------------------

  TrapInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrapInfo& from);
  void MergeFrom(const TrapInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 trap_id = 1;
  inline bool has_trap_id() const;
  inline void clear_trap_id();
  static const int kTrapIdFieldNumber = 1;
  inline ::google::protobuf::int32 trap_id() const;
  inline void set_trap_id(::google::protobuf::int32 value);

  // required int32 trap_level = 2;
  inline bool has_trap_level() const;
  inline void clear_trap_level();
  static const int kTrapLevelFieldNumber = 2;
  inline ::google::protobuf::int32 trap_level() const;
  inline void set_trap_level(::google::protobuf::int32 value);

  // optional .Packet.Position pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::Packet::Position& pos() const;
  inline ::Packet::Position* mutable_pos();
  inline ::Packet::Position* release_pos();
  inline void set_allocated_pos(::Packet::Position* pos);

  // optional int32 range = 4;
  inline bool has_range() const;
  inline void clear_range();
  static const int kRangeFieldNumber = 4;
  inline ::google::protobuf::int32 range() const;
  inline void set_range(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.TrapInfo)
 private:
  inline void set_has_trap_id();
  inline void clear_has_trap_id();
  inline void set_has_trap_level();
  inline void clear_has_trap_level();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_range();
  inline void clear_has_range();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 trap_id_;
  ::google::protobuf::int32 trap_level_;
  ::Packet::Position* pos_;
  ::google::protobuf::int32 range_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static TrapInfo* default_instance_;
};
// -------------------------------------------------------------------

class ActorMoveToTarget : public ::google::protobuf::Message {
 public:
  ActorMoveToTarget();
  virtual ~ActorMoveToTarget();

  ActorMoveToTarget(const ActorMoveToTarget& from);

  inline ActorMoveToTarget& operator=(const ActorMoveToTarget& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorMoveToTarget& default_instance();

  void Swap(ActorMoveToTarget* other);

  // implements Message ----------------------------------------------

  ActorMoveToTarget* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorMoveToTarget& from);
  void MergeFrom(const ActorMoveToTarget& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 source_guid = 1;
  inline bool has_source_guid() const;
  inline void clear_source_guid();
  static const int kSourceGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 source_guid() const;
  inline void set_source_guid(::google::protobuf::uint64 value);

  // optional fixed64 target_guid = 2;
  inline bool has_target_guid() const;
  inline void clear_target_guid();
  static const int kTargetGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 target_guid() const;
  inline void set_target_guid(::google::protobuf::uint64 value);

  // required int32 stop_range = 3;
  inline bool has_stop_range() const;
  inline void clear_stop_range();
  static const int kStopRangeFieldNumber = 3;
  inline ::google::protobuf::int32 stop_range() const;
  inline void set_stop_range(::google::protobuf::int32 value);

  // required int32 move_speed = 4;
  inline bool has_move_speed() const;
  inline void clear_move_speed();
  static const int kMoveSpeedFieldNumber = 4;
  inline ::google::protobuf::int32 move_speed() const;
  inline void set_move_speed(::google::protobuf::int32 value);

  // required fixed64 time_stamp = 5;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 5;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // required int32 move_serial = 6;
  inline bool has_move_serial() const;
  inline void clear_move_serial();
  static const int kMoveSerialFieldNumber = 6;
  inline ::google::protobuf::int32 move_serial() const;
  inline void set_move_serial(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorMoveToTarget)
 private:
  inline void set_has_source_guid();
  inline void clear_has_source_guid();
  inline void set_has_target_guid();
  inline void clear_has_target_guid();
  inline void set_has_stop_range();
  inline void clear_has_stop_range();
  inline void set_has_move_speed();
  inline void clear_has_move_speed();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();
  inline void set_has_move_serial();
  inline void clear_has_move_serial();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 source_guid_;
  ::google::protobuf::uint64 target_guid_;
  ::google::protobuf::int32 stop_range_;
  ::google::protobuf::int32 move_speed_;
  ::google::protobuf::uint64 time_stamp_;
  ::google::protobuf::int32 move_serial_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorMoveToTarget* default_instance_;
};
// -------------------------------------------------------------------

class ActorMoveToTargetFinish : public ::google::protobuf::Message {
 public:
  ActorMoveToTargetFinish();
  virtual ~ActorMoveToTargetFinish();

  ActorMoveToTargetFinish(const ActorMoveToTargetFinish& from);

  inline ActorMoveToTargetFinish& operator=(const ActorMoveToTargetFinish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorMoveToTargetFinish& default_instance();

  void Swap(ActorMoveToTargetFinish* other);

  // implements Message ----------------------------------------------

  ActorMoveToTargetFinish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorMoveToTargetFinish& from);
  void MergeFrom(const ActorMoveToTargetFinish& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 source_guid = 1;
  inline bool has_source_guid() const;
  inline void clear_source_guid();
  static const int kSourceGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 source_guid() const;
  inline void set_source_guid(::google::protobuf::uint64 value);

  // required int32 move_serial = 2;
  inline bool has_move_serial() const;
  inline void clear_move_serial();
  static const int kMoveSerialFieldNumber = 2;
  inline ::google::protobuf::int32 move_serial() const;
  inline void set_move_serial(::google::protobuf::int32 value);

  // required .Packet.Position pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::Packet::Position& pos() const;
  inline ::Packet::Position* mutable_pos();
  inline ::Packet::Position* release_pos();
  inline void set_allocated_pos(::Packet::Position* pos);

  // @@protoc_insertion_point(class_scope:Packet.ActorMoveToTargetFinish)
 private:
  inline void set_has_source_guid();
  inline void clear_has_source_guid();
  inline void set_has_move_serial();
  inline void clear_has_move_serial();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 source_guid_;
  ::Packet::Position* pos_;
  ::google::protobuf::int32 move_serial_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorMoveToTargetFinish* default_instance_;
};
// -------------------------------------------------------------------

class ActorMoveToPos : public ::google::protobuf::Message {
 public:
  ActorMoveToPos();
  virtual ~ActorMoveToPos();

  ActorMoveToPos(const ActorMoveToPos& from);

  inline ActorMoveToPos& operator=(const ActorMoveToPos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorMoveToPos& default_instance();

  void Swap(ActorMoveToPos* other);

  // implements Message ----------------------------------------------

  ActorMoveToPos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorMoveToPos& from);
  void MergeFrom(const ActorMoveToPos& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 source_guid = 1;
  inline bool has_source_guid() const;
  inline void clear_source_guid();
  static const int kSourceGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 source_guid() const;
  inline void set_source_guid(::google::protobuf::uint64 value);

  // required .Packet.Position target_pos = 2;
  inline bool has_target_pos() const;
  inline void clear_target_pos();
  static const int kTargetPosFieldNumber = 2;
  inline const ::Packet::Position& target_pos() const;
  inline ::Packet::Position* mutable_target_pos();
  inline ::Packet::Position* release_target_pos();
  inline void set_allocated_target_pos(::Packet::Position* target_pos);

  // required int32 move_speed = 3;
  inline bool has_move_speed() const;
  inline void clear_move_speed();
  static const int kMoveSpeedFieldNumber = 3;
  inline ::google::protobuf::int32 move_speed() const;
  inline void set_move_speed(::google::protobuf::int32 value);

  // required fixed64 time_stamp = 4;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 4;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorMoveToPos)
 private:
  inline void set_has_source_guid();
  inline void clear_has_source_guid();
  inline void set_has_target_pos();
  inline void clear_has_target_pos();
  inline void set_has_move_speed();
  inline void clear_has_move_speed();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 source_guid_;
  ::Packet::Position* target_pos_;
  ::google::protobuf::uint64 time_stamp_;
  ::google::protobuf::int32 move_speed_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorMoveToPos* default_instance_;
};
// -------------------------------------------------------------------

class ActorUseSkill : public ::google::protobuf::Message {
 public:
  ActorUseSkill();
  virtual ~ActorUseSkill();

  ActorUseSkill(const ActorUseSkill& from);

  inline ActorUseSkill& operator=(const ActorUseSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorUseSkill& default_instance();

  void Swap(ActorUseSkill* other);

  // implements Message ----------------------------------------------

  ActorUseSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorUseSkill& from);
  void MergeFrom(const ActorUseSkill& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 source_guid = 1;
  inline bool has_source_guid() const;
  inline void clear_source_guid();
  static const int kSourceGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 source_guid() const;
  inline void set_source_guid(::google::protobuf::uint64 value);

  // repeated fixed64 target_guid = 2;
  inline int target_guid_size() const;
  inline void clear_target_guid();
  static const int kTargetGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 target_guid(int index) const;
  inline void set_target_guid(int index, ::google::protobuf::uint64 value);
  inline void add_target_guid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      target_guid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_target_guid();

  // required .Packet.SkillInfo skill = 3;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 3;
  inline const ::Packet::SkillInfo& skill() const;
  inline ::Packet::SkillInfo* mutable_skill();
  inline ::Packet::SkillInfo* release_skill();
  inline void set_allocated_skill(::Packet::SkillInfo* skill);

  // required fixed64 time_stamp = 4;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 4;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorUseSkill)
 private:
  inline void set_has_source_guid();
  inline void clear_has_source_guid();
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 source_guid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > target_guid_;
  ::Packet::SkillInfo* skill_;
  ::google::protobuf::uint64 time_stamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorUseSkill* default_instance_;
};
// -------------------------------------------------------------------

class ActorCancelSkill : public ::google::protobuf::Message {
 public:
  ActorCancelSkill();
  virtual ~ActorCancelSkill();

  ActorCancelSkill(const ActorCancelSkill& from);

  inline ActorCancelSkill& operator=(const ActorCancelSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorCancelSkill& default_instance();

  void Swap(ActorCancelSkill* other);

  // implements Message ----------------------------------------------

  ActorCancelSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorCancelSkill& from);
  void MergeFrom(const ActorCancelSkill& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 source_guid = 1;
  inline bool has_source_guid() const;
  inline void clear_source_guid();
  static const int kSourceGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 source_guid() const;
  inline void set_source_guid(::google::protobuf::uint64 value);

  // required int32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // required fixed64 time_stamp = 3;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 3;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorCancelSkill)
 private:
  inline void set_has_source_guid();
  inline void clear_has_source_guid();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 source_guid_;
  ::google::protobuf::uint64 time_stamp_;
  ::google::protobuf::int32 skill_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorCancelSkill* default_instance_;
};
// -------------------------------------------------------------------

class ActorBuffAttach : public ::google::protobuf::Message {
 public:
  ActorBuffAttach();
  virtual ~ActorBuffAttach();

  ActorBuffAttach(const ActorBuffAttach& from);

  inline ActorBuffAttach& operator=(const ActorBuffAttach& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorBuffAttach& default_instance();

  void Swap(ActorBuffAttach* other);

  // implements Message ----------------------------------------------

  ActorBuffAttach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorBuffAttach& from);
  void MergeFrom(const ActorBuffAttach& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 source_guid = 1;
  inline bool has_source_guid() const;
  inline void clear_source_guid();
  static const int kSourceGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 source_guid() const;
  inline void set_source_guid(::google::protobuf::uint64 value);

  // optional fixed64 target_guid = 2;
  inline bool has_target_guid() const;
  inline void clear_target_guid();
  static const int kTargetGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 target_guid() const;
  inline void set_target_guid(::google::protobuf::uint64 value);

  // required .Packet.BuffInfo buff = 3;
  inline bool has_buff() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 3;
  inline const ::Packet::BuffInfo& buff() const;
  inline ::Packet::BuffInfo* mutable_buff();
  inline ::Packet::BuffInfo* release_buff();
  inline void set_allocated_buff(::Packet::BuffInfo* buff);

  // required fixed64 time_stamp = 4;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 4;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorBuffAttach)
 private:
  inline void set_has_source_guid();
  inline void clear_has_source_guid();
  inline void set_has_target_guid();
  inline void clear_has_target_guid();
  inline void set_has_buff();
  inline void clear_has_buff();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 source_guid_;
  ::google::protobuf::uint64 target_guid_;
  ::Packet::BuffInfo* buff_;
  ::google::protobuf::uint64 time_stamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorBuffAttach* default_instance_;
};
// -------------------------------------------------------------------

class ActorBuffRefresh : public ::google::protobuf::Message {
 public:
  ActorBuffRefresh();
  virtual ~ActorBuffRefresh();

  ActorBuffRefresh(const ActorBuffRefresh& from);

  inline ActorBuffRefresh& operator=(const ActorBuffRefresh& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorBuffRefresh& default_instance();

  void Swap(ActorBuffRefresh* other);

  // implements Message ----------------------------------------------

  ActorBuffRefresh* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorBuffRefresh& from);
  void MergeFrom(const ActorBuffRefresh& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 source_guid = 1;
  inline bool has_source_guid() const;
  inline void clear_source_guid();
  static const int kSourceGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 source_guid() const;
  inline void set_source_guid(::google::protobuf::uint64 value);

  // optional fixed64 target_guid = 2;
  inline bool has_target_guid() const;
  inline void clear_target_guid();
  static const int kTargetGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 target_guid() const;
  inline void set_target_guid(::google::protobuf::uint64 value);

  // required .Packet.BuffInfo buff = 3;
  inline bool has_buff() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 3;
  inline const ::Packet::BuffInfo& buff() const;
  inline ::Packet::BuffInfo* mutable_buff();
  inline ::Packet::BuffInfo* release_buff();
  inline void set_allocated_buff(::Packet::BuffInfo* buff);

  // required fixed64 time_stamp = 4;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 4;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorBuffRefresh)
 private:
  inline void set_has_source_guid();
  inline void clear_has_source_guid();
  inline void set_has_target_guid();
  inline void clear_has_target_guid();
  inline void set_has_buff();
  inline void clear_has_buff();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 source_guid_;
  ::google::protobuf::uint64 target_guid_;
  ::Packet::BuffInfo* buff_;
  ::google::protobuf::uint64 time_stamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorBuffRefresh* default_instance_;
};
// -------------------------------------------------------------------

class ActorAddState : public ::google::protobuf::Message {
 public:
  ActorAddState();
  virtual ~ActorAddState();

  ActorAddState(const ActorAddState& from);

  inline ActorAddState& operator=(const ActorAddState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorAddState& default_instance();

  void Swap(ActorAddState* other);

  // implements Message ----------------------------------------------

  ActorAddState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorAddState& from);
  void MergeFrom(const ActorAddState& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 target_guid = 1;
  inline bool has_target_guid() const;
  inline void clear_target_guid();
  static const int kTargetGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 target_guid() const;
  inline void set_target_guid(::google::protobuf::uint64 value);

  // required .Config.BattleObjectStatus state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::Config::BattleObjectStatus state() const;
  inline void set_state(::Config::BattleObjectStatus value);

  // required fixed64 time_stamp = 3;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 3;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // optional float fear_dir = 4;
  inline bool has_fear_dir() const;
  inline void clear_fear_dir();
  static const int kFearDirFieldNumber = 4;
  inline float fear_dir() const;
  inline void set_fear_dir(float value);

  // @@protoc_insertion_point(class_scope:Packet.ActorAddState)
 private:
  inline void set_has_target_guid();
  inline void clear_has_target_guid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();
  inline void set_has_fear_dir();
  inline void clear_has_fear_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 target_guid_;
  ::google::protobuf::uint64 time_stamp_;
  int state_;
  float fear_dir_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorAddState* default_instance_;
};
// -------------------------------------------------------------------

class ActorRemoveState : public ::google::protobuf::Message {
 public:
  ActorRemoveState();
  virtual ~ActorRemoveState();

  ActorRemoveState(const ActorRemoveState& from);

  inline ActorRemoveState& operator=(const ActorRemoveState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorRemoveState& default_instance();

  void Swap(ActorRemoveState* other);

  // implements Message ----------------------------------------------

  ActorRemoveState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorRemoveState& from);
  void MergeFrom(const ActorRemoveState& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 target_guid = 1;
  inline bool has_target_guid() const;
  inline void clear_target_guid();
  static const int kTargetGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 target_guid() const;
  inline void set_target_guid(::google::protobuf::uint64 value);

  // required .Config.BattleObjectStatus state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::Config::BattleObjectStatus state() const;
  inline void set_state(::Config::BattleObjectStatus value);

  // required fixed64 time_stamp = 3;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 3;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorRemoveState)
 private:
  inline void set_has_target_guid();
  inline void clear_has_target_guid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 target_guid_;
  ::google::protobuf::uint64 time_stamp_;
  int state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorRemoveState* default_instance_;
};
// -------------------------------------------------------------------

class ActorBuffDettach : public ::google::protobuf::Message {
 public:
  ActorBuffDettach();
  virtual ~ActorBuffDettach();

  ActorBuffDettach(const ActorBuffDettach& from);

  inline ActorBuffDettach& operator=(const ActorBuffDettach& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorBuffDettach& default_instance();

  void Swap(ActorBuffDettach* other);

  // implements Message ----------------------------------------------

  ActorBuffDettach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorBuffDettach& from);
  void MergeFrom(const ActorBuffDettach& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 source_guid = 1;
  inline bool has_source_guid() const;
  inline void clear_source_guid();
  static const int kSourceGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 source_guid() const;
  inline void set_source_guid(::google::protobuf::uint64 value);

  // required fixed64 target_guid = 2;
  inline bool has_target_guid() const;
  inline void clear_target_guid();
  static const int kTargetGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 target_guid() const;
  inline void set_target_guid(::google::protobuf::uint64 value);

  // required .Packet.BuffInfo buff = 3;
  inline bool has_buff() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 3;
  inline const ::Packet::BuffInfo& buff() const;
  inline ::Packet::BuffInfo* mutable_buff();
  inline ::Packet::BuffInfo* release_buff();
  inline void set_allocated_buff(::Packet::BuffInfo* buff);

  // required fixed64 time_stamp = 4;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 4;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorBuffDettach)
 private:
  inline void set_has_source_guid();
  inline void clear_has_source_guid();
  inline void set_has_target_guid();
  inline void clear_has_target_guid();
  inline void set_has_buff();
  inline void clear_has_buff();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 source_guid_;
  ::google::protobuf::uint64 target_guid_;
  ::Packet::BuffInfo* buff_;
  ::google::protobuf::uint64 time_stamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorBuffDettach* default_instance_;
};
// -------------------------------------------------------------------

class MoveSpeedUpdate : public ::google::protobuf::Message {
 public:
  MoveSpeedUpdate();
  virtual ~MoveSpeedUpdate();

  MoveSpeedUpdate(const MoveSpeedUpdate& from);

  inline MoveSpeedUpdate& operator=(const MoveSpeedUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveSpeedUpdate& default_instance();

  void Swap(MoveSpeedUpdate* other);

  // implements Message ----------------------------------------------

  MoveSpeedUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveSpeedUpdate& from);
  void MergeFrom(const MoveSpeedUpdate& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 target_guid = 1;
  inline bool has_target_guid() const;
  inline void clear_target_guid();
  static const int kTargetGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 target_guid() const;
  inline void set_target_guid(::google::protobuf::uint64 value);

  // required int32 move_speed = 2;
  inline bool has_move_speed() const;
  inline void clear_move_speed();
  static const int kMoveSpeedFieldNumber = 2;
  inline ::google::protobuf::int32 move_speed() const;
  inline void set_move_speed(::google::protobuf::int32 value);

  // optional .Packet.BuffInfo buff = 3;
  inline bool has_buff() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 3;
  inline const ::Packet::BuffInfo& buff() const;
  inline ::Packet::BuffInfo* mutable_buff();
  inline ::Packet::BuffInfo* release_buff();
  inline void set_allocated_buff(::Packet::BuffInfo* buff);

  // required fixed64 time_stamp = 4;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 4;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.MoveSpeedUpdate)
 private:
  inline void set_has_target_guid();
  inline void clear_has_target_guid();
  inline void set_has_move_speed();
  inline void clear_has_move_speed();
  inline void set_has_buff();
  inline void clear_has_buff();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 target_guid_;
  ::Packet::BuffInfo* buff_;
  ::google::protobuf::uint64 time_stamp_;
  ::google::protobuf::int32 move_speed_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static MoveSpeedUpdate* default_instance_;
};
// -------------------------------------------------------------------

class SkillEffects : public ::google::protobuf::Message {
 public:
  SkillEffects();
  virtual ~SkillEffects();

  SkillEffects(const SkillEffects& from);

  inline SkillEffects& operator=(const SkillEffects& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillEffects& default_instance();

  void Swap(SkillEffects* other);

  // implements Message ----------------------------------------------

  SkillEffects* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillEffects& from);
  void MergeFrom(const SkillEffects& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.ActorOnDamage damages = 1;
  inline int damages_size() const;
  inline void clear_damages();
  static const int kDamagesFieldNumber = 1;
  inline const ::Packet::ActorOnDamage& damages(int index) const;
  inline ::Packet::ActorOnDamage* mutable_damages(int index);
  inline ::Packet::ActorOnDamage* add_damages();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnDamage >&
      damages() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnDamage >*
      mutable_damages();

  // repeated .Packet.ActorOnCure cures = 2;
  inline int cures_size() const;
  inline void clear_cures();
  static const int kCuresFieldNumber = 2;
  inline const ::Packet::ActorOnCure& cures(int index) const;
  inline ::Packet::ActorOnCure* mutable_cures(int index);
  inline ::Packet::ActorOnCure* add_cures();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnCure >&
      cures() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnCure >*
      mutable_cures();

  // required fixed64 time_stamp = 3;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 3;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.SkillEffects)
 private:
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnDamage > damages_;
  ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnCure > cures_;
  ::google::protobuf::uint64 time_stamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static SkillEffects* default_instance_;
};
// -------------------------------------------------------------------

class ActorOnDamage : public ::google::protobuf::Message {
 public:
  ActorOnDamage();
  virtual ~ActorOnDamage();

  ActorOnDamage(const ActorOnDamage& from);

  inline ActorOnDamage& operator=(const ActorOnDamage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorOnDamage& default_instance();

  void Swap(ActorOnDamage* other);

  // implements Message ----------------------------------------------

  ActorOnDamage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorOnDamage& from);
  void MergeFrom(const ActorOnDamage& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 source_guid = 1;
  inline bool has_source_guid() const;
  inline void clear_source_guid();
  static const int kSourceGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 source_guid() const;
  inline void set_source_guid(::google::protobuf::uint64 value);

  // required fixed64 target_guid = 2;
  inline bool has_target_guid() const;
  inline void clear_target_guid();
  static const int kTargetGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 target_guid() const;
  inline void set_target_guid(::google::protobuf::uint64 value);

  // required int32 damage = 3;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 3;
  inline ::google::protobuf::int32 damage() const;
  inline void set_damage(::google::protobuf::int32 value);

  // required .Packet.DamageType type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::Packet::DamageType type() const;
  inline void set_type(::Packet::DamageType value);

  // required .Packet.DamageExpression expression = 5;
  inline bool has_expression() const;
  inline void clear_expression();
  static const int kExpressionFieldNumber = 5;
  inline ::Packet::DamageExpression expression() const;
  inline void set_expression(::Packet::DamageExpression value);

  // required int32 old_hp = 6;
  inline bool has_old_hp() const;
  inline void clear_old_hp();
  static const int kOldHpFieldNumber = 6;
  inline ::google::protobuf::int32 old_hp() const;
  inline void set_old_hp(::google::protobuf::int32 value);

  // required int32 new_hp = 7;
  inline bool has_new_hp() const;
  inline void clear_new_hp();
  static const int kNewHpFieldNumber = 7;
  inline ::google::protobuf::int32 new_hp() const;
  inline void set_new_hp(::google::protobuf::int32 value);

  // optional .Packet.SkillInfo skill = 8;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 8;
  inline const ::Packet::SkillInfo& skill() const;
  inline ::Packet::SkillInfo* mutable_skill();
  inline ::Packet::SkillInfo* release_skill();
  inline void set_allocated_skill(::Packet::SkillInfo* skill);

  // optional .Packet.BuffInfo buff = 9;
  inline bool has_buff() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 9;
  inline const ::Packet::BuffInfo& buff() const;
  inline ::Packet::BuffInfo* mutable_buff();
  inline ::Packet::BuffInfo* release_buff();
  inline void set_allocated_buff(::Packet::BuffInfo* buff);

  // optional .Packet.TrapInfo trap = 10;
  inline bool has_trap() const;
  inline void clear_trap();
  static const int kTrapFieldNumber = 10;
  inline const ::Packet::TrapInfo& trap() const;
  inline ::Packet::TrapInfo* mutable_trap();
  inline ::Packet::TrapInfo* release_trap();
  inline void set_allocated_trap(::Packet::TrapInfo* trap);

  // @@protoc_insertion_point(class_scope:Packet.ActorOnDamage)
 private:
  inline void set_has_source_guid();
  inline void clear_has_source_guid();
  inline void set_has_target_guid();
  inline void clear_has_target_guid();
  inline void set_has_damage();
  inline void clear_has_damage();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_expression();
  inline void clear_has_expression();
  inline void set_has_old_hp();
  inline void clear_has_old_hp();
  inline void set_has_new_hp();
  inline void clear_has_new_hp();
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_buff();
  inline void clear_has_buff();
  inline void set_has_trap();
  inline void clear_has_trap();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 source_guid_;
  ::google::protobuf::uint64 target_guid_;
  ::google::protobuf::int32 damage_;
  int type_;
  int expression_;
  ::google::protobuf::int32 old_hp_;
  ::Packet::SkillInfo* skill_;
  ::Packet::BuffInfo* buff_;
  ::Packet::TrapInfo* trap_;
  ::google::protobuf::int32 new_hp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorOnDamage* default_instance_;
};
// -------------------------------------------------------------------

class FlashChainDamage : public ::google::protobuf::Message {
 public:
  FlashChainDamage();
  virtual ~FlashChainDamage();

  FlashChainDamage(const FlashChainDamage& from);

  inline FlashChainDamage& operator=(const FlashChainDamage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FlashChainDamage& default_instance();

  void Swap(FlashChainDamage* other);

  // implements Message ----------------------------------------------

  FlashChainDamage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FlashChainDamage& from);
  void MergeFrom(const FlashChainDamage& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.ActorOnDamage damages = 1;
  inline int damages_size() const;
  inline void clear_damages();
  static const int kDamagesFieldNumber = 1;
  inline const ::Packet::ActorOnDamage& damages(int index) const;
  inline ::Packet::ActorOnDamage* mutable_damages(int index);
  inline ::Packet::ActorOnDamage* add_damages();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnDamage >&
      damages() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnDamage >*
      mutable_damages();

  // required fixed64 time_stamp = 2;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 2;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.FlashChainDamage)
 private:
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnDamage > damages_;
  ::google::protobuf::uint64 time_stamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static FlashChainDamage* default_instance_;
};
// -------------------------------------------------------------------

class CureChain : public ::google::protobuf::Message {
 public:
  CureChain();
  virtual ~CureChain();

  CureChain(const CureChain& from);

  inline CureChain& operator=(const CureChain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CureChain& default_instance();

  void Swap(CureChain* other);

  // implements Message ----------------------------------------------

  CureChain* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CureChain& from);
  void MergeFrom(const CureChain& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.ActorOnCure cures = 1;
  inline int cures_size() const;
  inline void clear_cures();
  static const int kCuresFieldNumber = 1;
  inline const ::Packet::ActorOnCure& cures(int index) const;
  inline ::Packet::ActorOnCure* mutable_cures(int index);
  inline ::Packet::ActorOnCure* add_cures();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnCure >&
      cures() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnCure >*
      mutable_cures();

  // required fixed64 time_stamp = 2;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 2;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.CureChain)
 private:
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnCure > cures_;
  ::google::protobuf::uint64 time_stamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static CureChain* default_instance_;
};
// -------------------------------------------------------------------

class ActorOnCure : public ::google::protobuf::Message {
 public:
  ActorOnCure();
  virtual ~ActorOnCure();

  ActorOnCure(const ActorOnCure& from);

  inline ActorOnCure& operator=(const ActorOnCure& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorOnCure& default_instance();

  void Swap(ActorOnCure* other);

  // implements Message ----------------------------------------------

  ActorOnCure* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorOnCure& from);
  void MergeFrom(const ActorOnCure& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 source_guid = 1;
  inline bool has_source_guid() const;
  inline void clear_source_guid();
  static const int kSourceGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 source_guid() const;
  inline void set_source_guid(::google::protobuf::uint64 value);

  // required fixed64 target_guid = 2;
  inline bool has_target_guid() const;
  inline void clear_target_guid();
  static const int kTargetGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 target_guid() const;
  inline void set_target_guid(::google::protobuf::uint64 value);

  // required int32 cure = 3;
  inline bool has_cure() const;
  inline void clear_cure();
  static const int kCureFieldNumber = 3;
  inline ::google::protobuf::int32 cure() const;
  inline void set_cure(::google::protobuf::int32 value);

  // required int32 old_hp = 4;
  inline bool has_old_hp() const;
  inline void clear_old_hp();
  static const int kOldHpFieldNumber = 4;
  inline ::google::protobuf::int32 old_hp() const;
  inline void set_old_hp(::google::protobuf::int32 value);

  // required int32 new_hp = 5;
  inline bool has_new_hp() const;
  inline void clear_new_hp();
  static const int kNewHpFieldNumber = 5;
  inline ::google::protobuf::int32 new_hp() const;
  inline void set_new_hp(::google::protobuf::int32 value);

  // optional .Packet.SkillInfo skill = 6;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 6;
  inline const ::Packet::SkillInfo& skill() const;
  inline ::Packet::SkillInfo* mutable_skill();
  inline ::Packet::SkillInfo* release_skill();
  inline void set_allocated_skill(::Packet::SkillInfo* skill);

  // optional .Packet.BuffInfo buff = 7;
  inline bool has_buff() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 7;
  inline const ::Packet::BuffInfo& buff() const;
  inline ::Packet::BuffInfo* mutable_buff();
  inline ::Packet::BuffInfo* release_buff();
  inline void set_allocated_buff(::Packet::BuffInfo* buff);

  // @@protoc_insertion_point(class_scope:Packet.ActorOnCure)
 private:
  inline void set_has_source_guid();
  inline void clear_has_source_guid();
  inline void set_has_target_guid();
  inline void clear_has_target_guid();
  inline void set_has_cure();
  inline void clear_has_cure();
  inline void set_has_old_hp();
  inline void clear_has_old_hp();
  inline void set_has_new_hp();
  inline void clear_has_new_hp();
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_buff();
  inline void clear_has_buff();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 source_guid_;
  ::google::protobuf::uint64 target_guid_;
  ::google::protobuf::int32 cure_;
  ::google::protobuf::int32 old_hp_;
  ::Packet::SkillInfo* skill_;
  ::Packet::BuffInfo* buff_;
  ::google::protobuf::int32 new_hp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorOnCure* default_instance_;
};
// -------------------------------------------------------------------

class ActorDead : public ::google::protobuf::Message {
 public:
  ActorDead();
  virtual ~ActorDead();

  ActorDead(const ActorDead& from);

  inline ActorDead& operator=(const ActorDead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorDead& default_instance();

  void Swap(ActorDead* other);

  // implements Message ----------------------------------------------

  ActorDead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorDead& from);
  void MergeFrom(const ActorDead& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 source_guid = 1;
  inline bool has_source_guid() const;
  inline void clear_source_guid();
  static const int kSourceGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 source_guid() const;
  inline void set_source_guid(::google::protobuf::uint64 value);

  // required fixed64 target_guid = 2;
  inline bool has_target_guid() const;
  inline void clear_target_guid();
  static const int kTargetGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 target_guid() const;
  inline void set_target_guid(::google::protobuf::uint64 value);

  // optional .Packet.SkillInfo skill = 3;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 3;
  inline const ::Packet::SkillInfo& skill() const;
  inline ::Packet::SkillInfo* mutable_skill();
  inline ::Packet::SkillInfo* release_skill();
  inline void set_allocated_skill(::Packet::SkillInfo* skill);

  // optional .Packet.BuffInfo buff = 4;
  inline bool has_buff() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 4;
  inline const ::Packet::BuffInfo& buff() const;
  inline ::Packet::BuffInfo* mutable_buff();
  inline ::Packet::BuffInfo* release_buff();
  inline void set_allocated_buff(::Packet::BuffInfo* buff);

  // required fixed64 time_stamp = 5;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 5;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorDead)
 private:
  inline void set_has_source_guid();
  inline void clear_has_source_guid();
  inline void set_has_target_guid();
  inline void clear_has_target_guid();
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_buff();
  inline void clear_has_buff();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 source_guid_;
  ::google::protobuf::uint64 target_guid_;
  ::Packet::SkillInfo* skill_;
  ::Packet::BuffInfo* buff_;
  ::google::protobuf::uint64 time_stamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorDead* default_instance_;
};
// -------------------------------------------------------------------

class ActorRelive : public ::google::protobuf::Message {
 public:
  ActorRelive();
  virtual ~ActorRelive();

  ActorRelive(const ActorRelive& from);

  inline ActorRelive& operator=(const ActorRelive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorRelive& default_instance();

  void Swap(ActorRelive* other);

  // implements Message ----------------------------------------------

  ActorRelive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorRelive& from);
  void MergeFrom(const ActorRelive& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 source_guid = 1;
  inline bool has_source_guid() const;
  inline void clear_source_guid();
  static const int kSourceGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 source_guid() const;
  inline void set_source_guid(::google::protobuf::uint64 value);

  // required fixed64 target_guid = 2;
  inline bool has_target_guid() const;
  inline void clear_target_guid();
  static const int kTargetGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 target_guid() const;
  inline void set_target_guid(::google::protobuf::uint64 value);

  // required int32 hp = 3;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 3;
  inline ::google::protobuf::int32 hp() const;
  inline void set_hp(::google::protobuf::int32 value);

  // required .Packet.SkillInfo skill = 4;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 4;
  inline const ::Packet::SkillInfo& skill() const;
  inline ::Packet::SkillInfo* mutable_skill();
  inline ::Packet::SkillInfo* release_skill();
  inline void set_allocated_skill(::Packet::SkillInfo* skill);

  // required fixed64 time_stamp = 5;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 5;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorRelive)
 private:
  inline void set_has_source_guid();
  inline void clear_has_source_guid();
  inline void set_has_target_guid();
  inline void clear_has_target_guid();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 source_guid_;
  ::google::protobuf::uint64 target_guid_;
  ::Packet::SkillInfo* skill_;
  ::google::protobuf::uint64 time_stamp_;
  ::google::protobuf::int32 hp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorRelive* default_instance_;
};
// -------------------------------------------------------------------

class ActorAddBuff : public ::google::protobuf::Message {
 public:
  ActorAddBuff();
  virtual ~ActorAddBuff();

  ActorAddBuff(const ActorAddBuff& from);

  inline ActorAddBuff& operator=(const ActorAddBuff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorAddBuff& default_instance();

  void Swap(ActorAddBuff* other);

  // implements Message ----------------------------------------------

  ActorAddBuff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorAddBuff& from);
  void MergeFrom(const ActorAddBuff& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 source_guid = 1;
  inline bool has_source_guid() const;
  inline void clear_source_guid();
  static const int kSourceGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 source_guid() const;
  inline void set_source_guid(::google::protobuf::uint64 value);

  // required fixed64 target_guid = 2;
  inline bool has_target_guid() const;
  inline void clear_target_guid();
  static const int kTargetGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 target_guid() const;
  inline void set_target_guid(::google::protobuf::uint64 value);

  // required .Packet.BuffInfo buff = 3;
  inline bool has_buff() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 3;
  inline const ::Packet::BuffInfo& buff() const;
  inline ::Packet::BuffInfo* mutable_buff();
  inline ::Packet::BuffInfo* release_buff();
  inline void set_allocated_buff(::Packet::BuffInfo* buff);

  // required fixed64 time_stamp = 4;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 4;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorAddBuff)
 private:
  inline void set_has_source_guid();
  inline void clear_has_source_guid();
  inline void set_has_target_guid();
  inline void clear_has_target_guid();
  inline void set_has_buff();
  inline void clear_has_buff();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 source_guid_;
  ::google::protobuf::uint64 target_guid_;
  ::Packet::BuffInfo* buff_;
  ::google::protobuf::uint64 time_stamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorAddBuff* default_instance_;
};
// -------------------------------------------------------------------

class SkillPositionLogic : public ::google::protobuf::Message {
 public:
  SkillPositionLogic();
  virtual ~SkillPositionLogic();

  SkillPositionLogic(const SkillPositionLogic& from);

  inline SkillPositionLogic& operator=(const SkillPositionLogic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillPositionLogic& default_instance();

  void Swap(SkillPositionLogic* other);

  // implements Message ----------------------------------------------

  SkillPositionLogic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillPositionLogic& from);
  void MergeFrom(const SkillPositionLogic& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.SkillPositionLogicType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Packet::SkillPositionLogicType type() const;
  inline void set_type(::Packet::SkillPositionLogicType value);

  // required fixed64 source_guid = 2;
  inline bool has_source_guid() const;
  inline void clear_source_guid();
  static const int kSourceGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 source_guid() const;
  inline void set_source_guid(::google::protobuf::uint64 value);

  // required fixed64 target_guid = 3;
  inline bool has_target_guid() const;
  inline void clear_target_guid();
  static const int kTargetGuidFieldNumber = 3;
  inline ::google::protobuf::uint64 target_guid() const;
  inline void set_target_guid(::google::protobuf::uint64 value);

  // optional int32 move_speed = 4;
  inline bool has_move_speed() const;
  inline void clear_move_speed();
  static const int kMoveSpeedFieldNumber = 4;
  inline ::google::protobuf::int32 move_speed() const;
  inline void set_move_speed(::google::protobuf::int32 value);

  // optional .Packet.SkillInfo skill_info = 5;
  inline bool has_skill_info() const;
  inline void clear_skill_info();
  static const int kSkillInfoFieldNumber = 5;
  inline const ::Packet::SkillInfo& skill_info() const;
  inline ::Packet::SkillInfo* mutable_skill_info();
  inline ::Packet::SkillInfo* release_skill_info();
  inline void set_allocated_skill_info(::Packet::SkillInfo* skill_info);

  // optional int32 range = 6;
  inline bool has_range() const;
  inline void clear_range();
  static const int kRangeFieldNumber = 6;
  inline ::google::protobuf::int32 range() const;
  inline void set_range(::google::protobuf::int32 value);

  // required fixed64 time_stamp = 7;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 7;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.SkillPositionLogic)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_source_guid();
  inline void clear_has_source_guid();
  inline void set_has_target_guid();
  inline void clear_has_target_guid();
  inline void set_has_move_speed();
  inline void clear_has_move_speed();
  inline void set_has_skill_info();
  inline void clear_has_skill_info();
  inline void set_has_range();
  inline void clear_has_range();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 source_guid_;
  int type_;
  ::google::protobuf::int32 move_speed_;
  ::google::protobuf::uint64 target_guid_;
  ::Packet::SkillInfo* skill_info_;
  ::google::protobuf::uint64 time_stamp_;
  ::google::protobuf::int32 range_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static SkillPositionLogic* default_instance_;
};
// -------------------------------------------------------------------

class ActorTransform : public ::google::protobuf::Message {
 public:
  ActorTransform();
  virtual ~ActorTransform();

  ActorTransform(const ActorTransform& from);

  inline ActorTransform& operator=(const ActorTransform& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorTransform& default_instance();

  void Swap(ActorTransform* other);

  // implements Message ----------------------------------------------

  ActorTransform* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorTransform& from);
  void MergeFrom(const ActorTransform& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 source_guid = 1;
  inline bool has_source_guid() const;
  inline void clear_source_guid();
  static const int kSourceGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 source_guid() const;
  inline void set_source_guid(::google::protobuf::uint64 value);

  // required int32 new_res_id = 2;
  inline bool has_new_res_id() const;
  inline void clear_new_res_id();
  static const int kNewResIdFieldNumber = 2;
  inline ::google::protobuf::int32 new_res_id() const;
  inline void set_new_res_id(::google::protobuf::int32 value);

  // required int32 new_hp = 3;
  inline bool has_new_hp() const;
  inline void clear_new_hp();
  static const int kNewHpFieldNumber = 3;
  inline ::google::protobuf::int32 new_hp() const;
  inline void set_new_hp(::google::protobuf::int32 value);

  // required int32 new_max_hp = 4;
  inline bool has_new_max_hp() const;
  inline void clear_new_max_hp();
  static const int kNewMaxHpFieldNumber = 4;
  inline ::google::protobuf::int32 new_max_hp() const;
  inline void set_new_max_hp(::google::protobuf::int32 value);

  // required int32 radius = 5;
  inline bool has_radius() const;
  inline void clear_radius();
  static const int kRadiusFieldNumber = 5;
  inline ::google::protobuf::int32 radius() const;
  inline void set_radius(::google::protobuf::int32 value);

  // required fixed64 time_stamp = 6;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 6;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorTransform)
 private:
  inline void set_has_source_guid();
  inline void clear_has_source_guid();
  inline void set_has_new_res_id();
  inline void clear_has_new_res_id();
  inline void set_has_new_hp();
  inline void clear_has_new_hp();
  inline void set_has_new_max_hp();
  inline void clear_has_new_max_hp();
  inline void set_has_radius();
  inline void clear_has_radius();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 source_guid_;
  ::google::protobuf::int32 new_res_id_;
  ::google::protobuf::int32 new_hp_;
  ::google::protobuf::int32 new_max_hp_;
  ::google::protobuf::int32 radius_;
  ::google::protobuf::uint64 time_stamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorTransform* default_instance_;
};
// -------------------------------------------------------------------

class ActorTransformCancel : public ::google::protobuf::Message {
 public:
  ActorTransformCancel();
  virtual ~ActorTransformCancel();

  ActorTransformCancel(const ActorTransformCancel& from);

  inline ActorTransformCancel& operator=(const ActorTransformCancel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorTransformCancel& default_instance();

  void Swap(ActorTransformCancel* other);

  // implements Message ----------------------------------------------

  ActorTransformCancel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorTransformCancel& from);
  void MergeFrom(const ActorTransformCancel& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 source_guid = 1;
  inline bool has_source_guid() const;
  inline void clear_source_guid();
  static const int kSourceGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 source_guid() const;
  inline void set_source_guid(::google::protobuf::uint64 value);

  // required int32 radius = 2;
  inline bool has_radius() const;
  inline void clear_radius();
  static const int kRadiusFieldNumber = 2;
  inline ::google::protobuf::int32 radius() const;
  inline void set_radius(::google::protobuf::int32 value);

  // required fixed64 time_stamp = 3;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 3;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorTransformCancel)
 private:
  inline void set_has_source_guid();
  inline void clear_has_source_guid();
  inline void set_has_radius();
  inline void clear_has_radius();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 source_guid_;
  ::google::protobuf::uint64 time_stamp_;
  ::google::protobuf::int32 radius_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorTransformCancel* default_instance_;
};
// -------------------------------------------------------------------

class TrapCreate : public ::google::protobuf::Message {
 public:
  TrapCreate();
  virtual ~TrapCreate();

  TrapCreate(const TrapCreate& from);

  inline TrapCreate& operator=(const TrapCreate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrapCreate& default_instance();

  void Swap(TrapCreate* other);

  // implements Message ----------------------------------------------

  TrapCreate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrapCreate& from);
  void MergeFrom(const TrapCreate& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required .Packet.TrapInfo trap = 2;
  inline bool has_trap() const;
  inline void clear_trap();
  static const int kTrapFieldNumber = 2;
  inline const ::Packet::TrapInfo& trap() const;
  inline ::Packet::TrapInfo* mutable_trap();
  inline ::Packet::TrapInfo* release_trap();
  inline void set_allocated_trap(::Packet::TrapInfo* trap);

  // required fixed64 time_stamp = 3;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 3;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.TrapCreate)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_trap();
  inline void clear_has_trap();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::Packet::TrapInfo* trap_;
  ::google::protobuf::uint64 time_stamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static TrapCreate* default_instance_;
};
// -------------------------------------------------------------------

class TrapDestroy : public ::google::protobuf::Message {
 public:
  TrapDestroy();
  virtual ~TrapDestroy();

  TrapDestroy(const TrapDestroy& from);

  inline TrapDestroy& operator=(const TrapDestroy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrapDestroy& default_instance();

  void Swap(TrapDestroy* other);

  // implements Message ----------------------------------------------

  TrapDestroy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrapDestroy& from);
  void MergeFrom(const TrapDestroy& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required fixed64 time_stamp = 2;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 2;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.TrapDestroy)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 time_stamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static TrapDestroy* default_instance_;
};
// -------------------------------------------------------------------

class ActorDamage : public ::google::protobuf::Message {
 public:
  ActorDamage();
  virtual ~ActorDamage();

  ActorDamage(const ActorDamage& from);

  inline ActorDamage& operator=(const ActorDamage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorDamage& default_instance();

  void Swap(ActorDamage* other);

  // implements Message ----------------------------------------------

  ActorDamage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorDamage& from);
  void MergeFrom(const ActorDamage& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required int32 damage = 2;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 2;
  inline ::google::protobuf::int32 damage() const;
  inline void set_damage(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorDamage)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_damage();
  inline void clear_has_damage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 damage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorDamage* default_instance_;
};
// -------------------------------------------------------------------

class ActorStat : public ::google::protobuf::Message {
 public:
  ActorStat();
  virtual ~ActorStat();

  ActorStat(const ActorStat& from);

  inline ActorStat& operator=(const ActorStat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorStat& default_instance();

  void Swap(ActorStat* other);

  // implements Message ----------------------------------------------

  ActorStat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorStat& from);
  void MergeFrom(const ActorStat& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // optional int32 config_id = 3;
  inline bool has_config_id() const;
  inline void clear_config_id();
  static const int kConfigIdFieldNumber = 3;
  inline ::google::protobuf::int32 config_id() const;
  inline void set_config_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorStat)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_config_id();
  inline void clear_has_config_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int32 config_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static ActorStat* default_instance_;
};
// -------------------------------------------------------------------

class Stat : public ::google::protobuf::Message {
 public:
  Stat();
  virtual ~Stat();

  Stat(const Stat& from);

  inline Stat& operator=(const Stat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Stat& default_instance();

  void Swap(Stat* other);

  // implements Message ----------------------------------------------

  Stat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Stat& from);
  void MergeFrom(const Stat& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.ActorStat damages = 1;
  inline int damages_size() const;
  inline void clear_damages();
  static const int kDamagesFieldNumber = 1;
  inline const ::Packet::ActorStat& damages(int index) const;
  inline ::Packet::ActorStat* mutable_damages(int index);
  inline ::Packet::ActorStat* add_damages();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorStat >&
      damages() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorStat >*
      mutable_damages();

  // repeated .Packet.ActorStat be_damages = 2;
  inline int be_damages_size() const;
  inline void clear_be_damages();
  static const int kBeDamagesFieldNumber = 2;
  inline const ::Packet::ActorStat& be_damages(int index) const;
  inline ::Packet::ActorStat* mutable_be_damages(int index);
  inline ::Packet::ActorStat* add_be_damages();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorStat >&
      be_damages() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorStat >*
      mutable_be_damages();

  // repeated .Packet.ActorStat cures = 3;
  inline int cures_size() const;
  inline void clear_cures();
  static const int kCuresFieldNumber = 3;
  inline const ::Packet::ActorStat& cures(int index) const;
  inline ::Packet::ActorStat* mutable_cures(int index);
  inline ::Packet::ActorStat* add_cures();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorStat >&
      cures() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorStat >*
      mutable_cures();

  // optional fixed64 attacker_damage = 4;
  inline bool has_attacker_damage() const;
  inline void clear_attacker_damage();
  static const int kAttackerDamageFieldNumber = 4;
  inline ::google::protobuf::uint64 attacker_damage() const;
  inline void set_attacker_damage(::google::protobuf::uint64 value);

  // optional fixed64 defender_damage = 5;
  inline bool has_defender_damage() const;
  inline void clear_defender_damage();
  static const int kDefenderDamageFieldNumber = 5;
  inline ::google::protobuf::uint64 defender_damage() const;
  inline void set_defender_damage(::google::protobuf::uint64 value);

  // optional fixed64 attacker_cure = 6;
  inline bool has_attacker_cure() const;
  inline void clear_attacker_cure();
  static const int kAttackerCureFieldNumber = 6;
  inline ::google::protobuf::uint64 attacker_cure() const;
  inline void set_attacker_cure(::google::protobuf::uint64 value);

  // optional fixed64 defender_cure = 7;
  inline bool has_defender_cure() const;
  inline void clear_defender_cure();
  static const int kDefenderCureFieldNumber = 7;
  inline ::google::protobuf::uint64 defender_cure() const;
  inline void set_defender_cure(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.Stat)
 private:
  inline void set_has_attacker_damage();
  inline void clear_has_attacker_damage();
  inline void set_has_defender_damage();
  inline void clear_has_defender_damage();
  inline void set_has_attacker_cure();
  inline void clear_has_attacker_cure();
  inline void set_has_defender_cure();
  inline void clear_has_defender_cure();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::ActorStat > damages_;
  ::google::protobuf::RepeatedPtrField< ::Packet::ActorStat > be_damages_;
  ::google::protobuf::RepeatedPtrField< ::Packet::ActorStat > cures_;
  ::google::protobuf::uint64 attacker_damage_;
  ::google::protobuf::uint64 defender_damage_;
  ::google::protobuf::uint64 attacker_cure_;
  ::google::protobuf::uint64 defender_cure_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static Stat* default_instance_;
};
// -------------------------------------------------------------------

class StatisticInfo : public ::google::protobuf::Message {
 public:
  StatisticInfo();
  virtual ~StatisticInfo();

  StatisticInfo(const StatisticInfo& from);

  inline StatisticInfo& operator=(const StatisticInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatisticInfo& default_instance();

  void Swap(StatisticInfo* other);

  // implements Message ----------------------------------------------

  StatisticInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatisticInfo& from);
  void MergeFrom(const StatisticInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 player_exp = 1;
  inline bool has_player_exp() const;
  inline void clear_player_exp();
  static const int kPlayerExpFieldNumber = 1;
  inline ::google::protobuf::int32 player_exp() const;
  inline void set_player_exp(::google::protobuf::int32 value);

  // optional int32 actor_exp = 2;
  inline bool has_actor_exp() const;
  inline void clear_actor_exp();
  static const int kActorExpFieldNumber = 2;
  inline ::google::protobuf::int32 actor_exp() const;
  inline void set_actor_exp(::google::protobuf::int32 value);

  // repeated .Config.ItemPackageElement items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::Config::ItemPackageElement& items(int index) const;
  inline ::Config::ItemPackageElement* mutable_items(int index);
  inline ::Config::ItemPackageElement* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Config::ItemPackageElement >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Config::ItemPackageElement >*
      mutable_items();

  // optional fixed64 time_stamp = 4;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 4;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // optional int32 damage = 5;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 5;
  inline ::google::protobuf::int32 damage() const;
  inline void set_damage(::google::protobuf::int32 value);

  // repeated .Packet.ActorDamage actordamage = 6;
  inline int actordamage_size() const;
  inline void clear_actordamage();
  static const int kActordamageFieldNumber = 6;
  inline const ::Packet::ActorDamage& actordamage(int index) const;
  inline ::Packet::ActorDamage* mutable_actordamage(int index);
  inline ::Packet::ActorDamage* add_actordamage();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorDamage >&
      actordamage() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorDamage >*
      mutable_actordamage();

  // @@protoc_insertion_point(class_scope:Packet.StatisticInfo)
 private:
  inline void set_has_player_exp();
  inline void clear_has_player_exp();
  inline void set_has_actor_exp();
  inline void clear_has_actor_exp();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();
  inline void set_has_damage();
  inline void clear_has_damage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 player_exp_;
  ::google::protobuf::int32 actor_exp_;
  ::google::protobuf::RepeatedPtrField< ::Config::ItemPackageElement > items_;
  ::google::protobuf::uint64 time_stamp_;
  ::google::protobuf::RepeatedPtrField< ::Packet::ActorDamage > actordamage_;
  ::google::protobuf::int32 damage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_BattleExpression_2eproto();
  friend void protobuf_AssignDesc_BattleExpression_2eproto();
  friend void protobuf_ShutdownFile_BattleExpression_2eproto();

  void InitAsDefaultInstance();
  static StatisticInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// SkillInfo

// required int32 skill_id = 1;
inline bool SkillInfo::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillInfo::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillInfo::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillInfo::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
  SetDirty();
}
inline ::google::protobuf::int32 SkillInfo::skill_id() const {
  return skill_id_;
}
inline void SkillInfo::set_skill_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_skill_id();
  skill_id_ = value;
}

// required int32 skill_level = 2 [default = 1];
inline bool SkillInfo::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillInfo::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillInfo::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillInfo::clear_skill_level() {
  skill_level_ = 1;
  clear_has_skill_level();
  SetDirty();
}
inline ::google::protobuf::int32 SkillInfo::skill_level() const {
  return skill_level_;
}
inline void SkillInfo::set_skill_level(::google::protobuf::int32 value) {
  SetDirty();
  set_has_skill_level();
  skill_level_ = value;
}

// optional float bullet_speed = 3;
inline bool SkillInfo::has_bullet_speed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillInfo::set_has_bullet_speed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillInfo::clear_has_bullet_speed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillInfo::clear_bullet_speed() {
  bullet_speed_ = 0;
  clear_has_bullet_speed();
  SetDirty();
}
inline float SkillInfo::bullet_speed() const {
  return bullet_speed_;
}
inline void SkillInfo::set_bullet_speed(float value) {
  SetDirty();
  set_has_bullet_speed();
  bullet_speed_ = value;
}

// -------------------------------------------------------------------

// BuffInfo

// required int32 buff_id = 1;
inline bool BuffInfo::has_buff_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffInfo::set_has_buff_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffInfo::clear_has_buff_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffInfo::clear_buff_id() {
  buff_id_ = 0;
  clear_has_buff_id();
  SetDirty();
}
inline ::google::protobuf::int32 BuffInfo::buff_id() const {
  return buff_id_;
}
inline void BuffInfo::set_buff_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_buff_id();
  buff_id_ = value;
}

// required int32 buff_level = 2 [default = 1];
inline bool BuffInfo::has_buff_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffInfo::set_has_buff_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffInfo::clear_has_buff_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffInfo::clear_buff_level() {
  buff_level_ = 1;
  clear_has_buff_level();
  SetDirty();
}
inline ::google::protobuf::int32 BuffInfo::buff_level() const {
  return buff_level_;
}
inline void BuffInfo::set_buff_level(::google::protobuf::int32 value) {
  SetDirty();
  set_has_buff_level();
  buff_level_ = value;
}

// optional .Packet.SkillInfo skill = 3;
inline bool BuffInfo::has_skill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuffInfo::set_has_skill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuffInfo::clear_has_skill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuffInfo::clear_skill() {
  if (skill_ != NULL) skill_->::Packet::SkillInfo::Clear();
  clear_has_skill();
  SetDirty();
}
inline const ::Packet::SkillInfo& BuffInfo::skill() const {
  return skill_ != NULL ? *skill_ : *default_instance_->skill_;
}
inline ::Packet::SkillInfo* BuffInfo::mutable_skill() {
  SetDirty();
  set_has_skill();
  if (skill_ == NULL) skill_ = new ::Packet::SkillInfo;
  return skill_;
}
inline ::Packet::SkillInfo* BuffInfo::release_skill() {
  SetDirty();
  clear_has_skill();
  ::Packet::SkillInfo* temp = skill_;
  skill_ = NULL;
  return temp;
}
inline void BuffInfo::set_allocated_skill(::Packet::SkillInfo* skill) {
  SetDirty();
  delete skill_;
  skill_ = skill;
  if (skill) {
    set_has_skill();
  } else {
    clear_has_skill();
  }
}

// optional int32 layer = 4;
inline bool BuffInfo::has_layer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuffInfo::set_has_layer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuffInfo::clear_has_layer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuffInfo::clear_layer() {
  layer_ = 0;
  clear_has_layer();
  SetDirty();
}
inline ::google::protobuf::int32 BuffInfo::layer() const {
  return layer_;
}
inline void BuffInfo::set_layer(::google::protobuf::int32 value) {
  SetDirty();
  set_has_layer();
  layer_ = value;
}

// -------------------------------------------------------------------

// TrapInfo

// required int32 trap_id = 1;
inline bool TrapInfo::has_trap_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrapInfo::set_has_trap_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrapInfo::clear_has_trap_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrapInfo::clear_trap_id() {
  trap_id_ = 0;
  clear_has_trap_id();
  SetDirty();
}
inline ::google::protobuf::int32 TrapInfo::trap_id() const {
  return trap_id_;
}
inline void TrapInfo::set_trap_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_trap_id();
  trap_id_ = value;
}

// required int32 trap_level = 2;
inline bool TrapInfo::has_trap_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrapInfo::set_has_trap_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrapInfo::clear_has_trap_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrapInfo::clear_trap_level() {
  trap_level_ = 0;
  clear_has_trap_level();
  SetDirty();
}
inline ::google::protobuf::int32 TrapInfo::trap_level() const {
  return trap_level_;
}
inline void TrapInfo::set_trap_level(::google::protobuf::int32 value) {
  SetDirty();
  set_has_trap_level();
  trap_level_ = value;
}

// optional .Packet.Position pos = 3;
inline bool TrapInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TrapInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TrapInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TrapInfo::clear_pos() {
  if (pos_ != NULL) pos_->::Packet::Position::Clear();
  clear_has_pos();
  SetDirty();
}
inline const ::Packet::Position& TrapInfo::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Packet::Position* TrapInfo::mutable_pos() {
  SetDirty();
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Packet::Position;
  return pos_;
}
inline ::Packet::Position* TrapInfo::release_pos() {
  SetDirty();
  clear_has_pos();
  ::Packet::Position* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void TrapInfo::set_allocated_pos(::Packet::Position* pos) {
  SetDirty();
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// optional int32 range = 4;
inline bool TrapInfo::has_range() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TrapInfo::set_has_range() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TrapInfo::clear_has_range() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TrapInfo::clear_range() {
  range_ = 0;
  clear_has_range();
  SetDirty();
}
inline ::google::protobuf::int32 TrapInfo::range() const {
  return range_;
}
inline void TrapInfo::set_range(::google::protobuf::int32 value) {
  SetDirty();
  set_has_range();
  range_ = value;
}

// -------------------------------------------------------------------

// ActorMoveToTarget

// required fixed64 source_guid = 1;
inline bool ActorMoveToTarget::has_source_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorMoveToTarget::set_has_source_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorMoveToTarget::clear_has_source_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorMoveToTarget::clear_source_guid() {
  source_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorMoveToTarget::source_guid() const {
  return source_guid_;
}
inline void ActorMoveToTarget::set_source_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_source_guid();
  source_guid_ = value;
}

// optional fixed64 target_guid = 2;
inline bool ActorMoveToTarget::has_target_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorMoveToTarget::set_has_target_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorMoveToTarget::clear_has_target_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorMoveToTarget::clear_target_guid() {
  target_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorMoveToTarget::target_guid() const {
  return target_guid_;
}
inline void ActorMoveToTarget::set_target_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_target_guid();
  target_guid_ = value;
}

// required int32 stop_range = 3;
inline bool ActorMoveToTarget::has_stop_range() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorMoveToTarget::set_has_stop_range() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorMoveToTarget::clear_has_stop_range() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorMoveToTarget::clear_stop_range() {
  stop_range_ = 0;
  clear_has_stop_range();
  SetDirty();
}
inline ::google::protobuf::int32 ActorMoveToTarget::stop_range() const {
  return stop_range_;
}
inline void ActorMoveToTarget::set_stop_range(::google::protobuf::int32 value) {
  SetDirty();
  set_has_stop_range();
  stop_range_ = value;
}

// required int32 move_speed = 4;
inline bool ActorMoveToTarget::has_move_speed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActorMoveToTarget::set_has_move_speed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActorMoveToTarget::clear_has_move_speed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActorMoveToTarget::clear_move_speed() {
  move_speed_ = 0;
  clear_has_move_speed();
  SetDirty();
}
inline ::google::protobuf::int32 ActorMoveToTarget::move_speed() const {
  return move_speed_;
}
inline void ActorMoveToTarget::set_move_speed(::google::protobuf::int32 value) {
  SetDirty();
  set_has_move_speed();
  move_speed_ = value;
}

// required fixed64 time_stamp = 5;
inline bool ActorMoveToTarget::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActorMoveToTarget::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActorMoveToTarget::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActorMoveToTarget::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorMoveToTarget::time_stamp() const {
  return time_stamp_;
}
inline void ActorMoveToTarget::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// required int32 move_serial = 6;
inline bool ActorMoveToTarget::has_move_serial() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ActorMoveToTarget::set_has_move_serial() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ActorMoveToTarget::clear_has_move_serial() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ActorMoveToTarget::clear_move_serial() {
  move_serial_ = 0;
  clear_has_move_serial();
  SetDirty();
}
inline ::google::protobuf::int32 ActorMoveToTarget::move_serial() const {
  return move_serial_;
}
inline void ActorMoveToTarget::set_move_serial(::google::protobuf::int32 value) {
  SetDirty();
  set_has_move_serial();
  move_serial_ = value;
}

// -------------------------------------------------------------------

// ActorMoveToTargetFinish

// required fixed64 source_guid = 1;
inline bool ActorMoveToTargetFinish::has_source_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorMoveToTargetFinish::set_has_source_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorMoveToTargetFinish::clear_has_source_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorMoveToTargetFinish::clear_source_guid() {
  source_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorMoveToTargetFinish::source_guid() const {
  return source_guid_;
}
inline void ActorMoveToTargetFinish::set_source_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_source_guid();
  source_guid_ = value;
}

// required int32 move_serial = 2;
inline bool ActorMoveToTargetFinish::has_move_serial() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorMoveToTargetFinish::set_has_move_serial() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorMoveToTargetFinish::clear_has_move_serial() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorMoveToTargetFinish::clear_move_serial() {
  move_serial_ = 0;
  clear_has_move_serial();
  SetDirty();
}
inline ::google::protobuf::int32 ActorMoveToTargetFinish::move_serial() const {
  return move_serial_;
}
inline void ActorMoveToTargetFinish::set_move_serial(::google::protobuf::int32 value) {
  SetDirty();
  set_has_move_serial();
  move_serial_ = value;
}

// required .Packet.Position pos = 3;
inline bool ActorMoveToTargetFinish::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorMoveToTargetFinish::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorMoveToTargetFinish::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorMoveToTargetFinish::clear_pos() {
  if (pos_ != NULL) pos_->::Packet::Position::Clear();
  clear_has_pos();
  SetDirty();
}
inline const ::Packet::Position& ActorMoveToTargetFinish::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::Packet::Position* ActorMoveToTargetFinish::mutable_pos() {
  SetDirty();
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::Packet::Position;
  return pos_;
}
inline ::Packet::Position* ActorMoveToTargetFinish::release_pos() {
  SetDirty();
  clear_has_pos();
  ::Packet::Position* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void ActorMoveToTargetFinish::set_allocated_pos(::Packet::Position* pos) {
  SetDirty();
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// -------------------------------------------------------------------

// ActorMoveToPos

// required fixed64 source_guid = 1;
inline bool ActorMoveToPos::has_source_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorMoveToPos::set_has_source_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorMoveToPos::clear_has_source_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorMoveToPos::clear_source_guid() {
  source_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorMoveToPos::source_guid() const {
  return source_guid_;
}
inline void ActorMoveToPos::set_source_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_source_guid();
  source_guid_ = value;
}

// required .Packet.Position target_pos = 2;
inline bool ActorMoveToPos::has_target_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorMoveToPos::set_has_target_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorMoveToPos::clear_has_target_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorMoveToPos::clear_target_pos() {
  if (target_pos_ != NULL) target_pos_->::Packet::Position::Clear();
  clear_has_target_pos();
  SetDirty();
}
inline const ::Packet::Position& ActorMoveToPos::target_pos() const {
  return target_pos_ != NULL ? *target_pos_ : *default_instance_->target_pos_;
}
inline ::Packet::Position* ActorMoveToPos::mutable_target_pos() {
  SetDirty();
  set_has_target_pos();
  if (target_pos_ == NULL) target_pos_ = new ::Packet::Position;
  return target_pos_;
}
inline ::Packet::Position* ActorMoveToPos::release_target_pos() {
  SetDirty();
  clear_has_target_pos();
  ::Packet::Position* temp = target_pos_;
  target_pos_ = NULL;
  return temp;
}
inline void ActorMoveToPos::set_allocated_target_pos(::Packet::Position* target_pos) {
  SetDirty();
  delete target_pos_;
  target_pos_ = target_pos;
  if (target_pos) {
    set_has_target_pos();
  } else {
    clear_has_target_pos();
  }
}

// required int32 move_speed = 3;
inline bool ActorMoveToPos::has_move_speed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorMoveToPos::set_has_move_speed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorMoveToPos::clear_has_move_speed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorMoveToPos::clear_move_speed() {
  move_speed_ = 0;
  clear_has_move_speed();
  SetDirty();
}
inline ::google::protobuf::int32 ActorMoveToPos::move_speed() const {
  return move_speed_;
}
inline void ActorMoveToPos::set_move_speed(::google::protobuf::int32 value) {
  SetDirty();
  set_has_move_speed();
  move_speed_ = value;
}

// required fixed64 time_stamp = 4;
inline bool ActorMoveToPos::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActorMoveToPos::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActorMoveToPos::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActorMoveToPos::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorMoveToPos::time_stamp() const {
  return time_stamp_;
}
inline void ActorMoveToPos::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// ActorUseSkill

// required fixed64 source_guid = 1;
inline bool ActorUseSkill::has_source_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorUseSkill::set_has_source_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorUseSkill::clear_has_source_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorUseSkill::clear_source_guid() {
  source_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorUseSkill::source_guid() const {
  return source_guid_;
}
inline void ActorUseSkill::set_source_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_source_guid();
  source_guid_ = value;
}

// repeated fixed64 target_guid = 2;
inline int ActorUseSkill::target_guid_size() const {
  return target_guid_.size();
}
inline void ActorUseSkill::clear_target_guid() {
  target_guid_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorUseSkill::target_guid(int index) const {
  return target_guid_.Get(index);
}
inline void ActorUseSkill::set_target_guid(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  target_guid_.Set(index, value);
}
inline void ActorUseSkill::add_target_guid(::google::protobuf::uint64 value) {
  SetDirty();
  target_guid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ActorUseSkill::target_guid() const {
  return target_guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ActorUseSkill::mutable_target_guid() {
  SetDirty();
  return &target_guid_;
}

// required .Packet.SkillInfo skill = 3;
inline bool ActorUseSkill::has_skill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorUseSkill::set_has_skill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorUseSkill::clear_has_skill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorUseSkill::clear_skill() {
  if (skill_ != NULL) skill_->::Packet::SkillInfo::Clear();
  clear_has_skill();
  SetDirty();
}
inline const ::Packet::SkillInfo& ActorUseSkill::skill() const {
  return skill_ != NULL ? *skill_ : *default_instance_->skill_;
}
inline ::Packet::SkillInfo* ActorUseSkill::mutable_skill() {
  SetDirty();
  set_has_skill();
  if (skill_ == NULL) skill_ = new ::Packet::SkillInfo;
  return skill_;
}
inline ::Packet::SkillInfo* ActorUseSkill::release_skill() {
  SetDirty();
  clear_has_skill();
  ::Packet::SkillInfo* temp = skill_;
  skill_ = NULL;
  return temp;
}
inline void ActorUseSkill::set_allocated_skill(::Packet::SkillInfo* skill) {
  SetDirty();
  delete skill_;
  skill_ = skill;
  if (skill) {
    set_has_skill();
  } else {
    clear_has_skill();
  }
}

// required fixed64 time_stamp = 4;
inline bool ActorUseSkill::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActorUseSkill::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActorUseSkill::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActorUseSkill::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorUseSkill::time_stamp() const {
  return time_stamp_;
}
inline void ActorUseSkill::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// ActorCancelSkill

// required fixed64 source_guid = 1;
inline bool ActorCancelSkill::has_source_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorCancelSkill::set_has_source_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorCancelSkill::clear_has_source_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorCancelSkill::clear_source_guid() {
  source_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorCancelSkill::source_guid() const {
  return source_guid_;
}
inline void ActorCancelSkill::set_source_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_source_guid();
  source_guid_ = value;
}

// required int32 skill_id = 2;
inline bool ActorCancelSkill::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorCancelSkill::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorCancelSkill::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorCancelSkill::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
  SetDirty();
}
inline ::google::protobuf::int32 ActorCancelSkill::skill_id() const {
  return skill_id_;
}
inline void ActorCancelSkill::set_skill_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_skill_id();
  skill_id_ = value;
}

// required fixed64 time_stamp = 3;
inline bool ActorCancelSkill::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorCancelSkill::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorCancelSkill::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorCancelSkill::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorCancelSkill::time_stamp() const {
  return time_stamp_;
}
inline void ActorCancelSkill::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// ActorBuffAttach

// required fixed64 source_guid = 1;
inline bool ActorBuffAttach::has_source_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorBuffAttach::set_has_source_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorBuffAttach::clear_has_source_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorBuffAttach::clear_source_guid() {
  source_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorBuffAttach::source_guid() const {
  return source_guid_;
}
inline void ActorBuffAttach::set_source_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_source_guid();
  source_guid_ = value;
}

// optional fixed64 target_guid = 2;
inline bool ActorBuffAttach::has_target_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorBuffAttach::set_has_target_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorBuffAttach::clear_has_target_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorBuffAttach::clear_target_guid() {
  target_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorBuffAttach::target_guid() const {
  return target_guid_;
}
inline void ActorBuffAttach::set_target_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_target_guid();
  target_guid_ = value;
}

// required .Packet.BuffInfo buff = 3;
inline bool ActorBuffAttach::has_buff() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorBuffAttach::set_has_buff() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorBuffAttach::clear_has_buff() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorBuffAttach::clear_buff() {
  if (buff_ != NULL) buff_->::Packet::BuffInfo::Clear();
  clear_has_buff();
  SetDirty();
}
inline const ::Packet::BuffInfo& ActorBuffAttach::buff() const {
  return buff_ != NULL ? *buff_ : *default_instance_->buff_;
}
inline ::Packet::BuffInfo* ActorBuffAttach::mutable_buff() {
  SetDirty();
  set_has_buff();
  if (buff_ == NULL) buff_ = new ::Packet::BuffInfo;
  return buff_;
}
inline ::Packet::BuffInfo* ActorBuffAttach::release_buff() {
  SetDirty();
  clear_has_buff();
  ::Packet::BuffInfo* temp = buff_;
  buff_ = NULL;
  return temp;
}
inline void ActorBuffAttach::set_allocated_buff(::Packet::BuffInfo* buff) {
  SetDirty();
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
}

// required fixed64 time_stamp = 4;
inline bool ActorBuffAttach::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActorBuffAttach::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActorBuffAttach::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActorBuffAttach::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorBuffAttach::time_stamp() const {
  return time_stamp_;
}
inline void ActorBuffAttach::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// ActorBuffRefresh

// required fixed64 source_guid = 1;
inline bool ActorBuffRefresh::has_source_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorBuffRefresh::set_has_source_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorBuffRefresh::clear_has_source_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorBuffRefresh::clear_source_guid() {
  source_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorBuffRefresh::source_guid() const {
  return source_guid_;
}
inline void ActorBuffRefresh::set_source_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_source_guid();
  source_guid_ = value;
}

// optional fixed64 target_guid = 2;
inline bool ActorBuffRefresh::has_target_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorBuffRefresh::set_has_target_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorBuffRefresh::clear_has_target_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorBuffRefresh::clear_target_guid() {
  target_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorBuffRefresh::target_guid() const {
  return target_guid_;
}
inline void ActorBuffRefresh::set_target_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_target_guid();
  target_guid_ = value;
}

// required .Packet.BuffInfo buff = 3;
inline bool ActorBuffRefresh::has_buff() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorBuffRefresh::set_has_buff() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorBuffRefresh::clear_has_buff() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorBuffRefresh::clear_buff() {
  if (buff_ != NULL) buff_->::Packet::BuffInfo::Clear();
  clear_has_buff();
  SetDirty();
}
inline const ::Packet::BuffInfo& ActorBuffRefresh::buff() const {
  return buff_ != NULL ? *buff_ : *default_instance_->buff_;
}
inline ::Packet::BuffInfo* ActorBuffRefresh::mutable_buff() {
  SetDirty();
  set_has_buff();
  if (buff_ == NULL) buff_ = new ::Packet::BuffInfo;
  return buff_;
}
inline ::Packet::BuffInfo* ActorBuffRefresh::release_buff() {
  SetDirty();
  clear_has_buff();
  ::Packet::BuffInfo* temp = buff_;
  buff_ = NULL;
  return temp;
}
inline void ActorBuffRefresh::set_allocated_buff(::Packet::BuffInfo* buff) {
  SetDirty();
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
}

// required fixed64 time_stamp = 4;
inline bool ActorBuffRefresh::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActorBuffRefresh::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActorBuffRefresh::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActorBuffRefresh::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorBuffRefresh::time_stamp() const {
  return time_stamp_;
}
inline void ActorBuffRefresh::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// ActorAddState

// required fixed64 target_guid = 1;
inline bool ActorAddState::has_target_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorAddState::set_has_target_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorAddState::clear_has_target_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorAddState::clear_target_guid() {
  target_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorAddState::target_guid() const {
  return target_guid_;
}
inline void ActorAddState::set_target_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_target_guid();
  target_guid_ = value;
}

// required .Config.BattleObjectStatus state = 2;
inline bool ActorAddState::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorAddState::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorAddState::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorAddState::clear_state() {
  state_ = 1;
  clear_has_state();
  SetDirty();
}
inline ::Config::BattleObjectStatus ActorAddState::state() const {
  return static_cast< ::Config::BattleObjectStatus >(state_);
}
inline void ActorAddState::set_state(::Config::BattleObjectStatus value) {
  assert(::Config::BattleObjectStatus_IsValid(value));
  SetDirty();
  set_has_state();
  state_ = value;
}

// required fixed64 time_stamp = 3;
inline bool ActorAddState::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorAddState::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorAddState::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorAddState::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorAddState::time_stamp() const {
  return time_stamp_;
}
inline void ActorAddState::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// optional float fear_dir = 4;
inline bool ActorAddState::has_fear_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActorAddState::set_has_fear_dir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActorAddState::clear_has_fear_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActorAddState::clear_fear_dir() {
  fear_dir_ = 0;
  clear_has_fear_dir();
  SetDirty();
}
inline float ActorAddState::fear_dir() const {
  return fear_dir_;
}
inline void ActorAddState::set_fear_dir(float value) {
  SetDirty();
  set_has_fear_dir();
  fear_dir_ = value;
}

// -------------------------------------------------------------------

// ActorRemoveState

// required fixed64 target_guid = 1;
inline bool ActorRemoveState::has_target_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorRemoveState::set_has_target_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorRemoveState::clear_has_target_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorRemoveState::clear_target_guid() {
  target_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorRemoveState::target_guid() const {
  return target_guid_;
}
inline void ActorRemoveState::set_target_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_target_guid();
  target_guid_ = value;
}

// required .Config.BattleObjectStatus state = 2;
inline bool ActorRemoveState::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorRemoveState::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorRemoveState::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorRemoveState::clear_state() {
  state_ = 1;
  clear_has_state();
  SetDirty();
}
inline ::Config::BattleObjectStatus ActorRemoveState::state() const {
  return static_cast< ::Config::BattleObjectStatus >(state_);
}
inline void ActorRemoveState::set_state(::Config::BattleObjectStatus value) {
  assert(::Config::BattleObjectStatus_IsValid(value));
  SetDirty();
  set_has_state();
  state_ = value;
}

// required fixed64 time_stamp = 3;
inline bool ActorRemoveState::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorRemoveState::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorRemoveState::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorRemoveState::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorRemoveState::time_stamp() const {
  return time_stamp_;
}
inline void ActorRemoveState::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// ActorBuffDettach

// optional fixed64 source_guid = 1;
inline bool ActorBuffDettach::has_source_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorBuffDettach::set_has_source_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorBuffDettach::clear_has_source_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorBuffDettach::clear_source_guid() {
  source_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorBuffDettach::source_guid() const {
  return source_guid_;
}
inline void ActorBuffDettach::set_source_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_source_guid();
  source_guid_ = value;
}

// required fixed64 target_guid = 2;
inline bool ActorBuffDettach::has_target_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorBuffDettach::set_has_target_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorBuffDettach::clear_has_target_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorBuffDettach::clear_target_guid() {
  target_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorBuffDettach::target_guid() const {
  return target_guid_;
}
inline void ActorBuffDettach::set_target_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_target_guid();
  target_guid_ = value;
}

// required .Packet.BuffInfo buff = 3;
inline bool ActorBuffDettach::has_buff() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorBuffDettach::set_has_buff() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorBuffDettach::clear_has_buff() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorBuffDettach::clear_buff() {
  if (buff_ != NULL) buff_->::Packet::BuffInfo::Clear();
  clear_has_buff();
  SetDirty();
}
inline const ::Packet::BuffInfo& ActorBuffDettach::buff() const {
  return buff_ != NULL ? *buff_ : *default_instance_->buff_;
}
inline ::Packet::BuffInfo* ActorBuffDettach::mutable_buff() {
  SetDirty();
  set_has_buff();
  if (buff_ == NULL) buff_ = new ::Packet::BuffInfo;
  return buff_;
}
inline ::Packet::BuffInfo* ActorBuffDettach::release_buff() {
  SetDirty();
  clear_has_buff();
  ::Packet::BuffInfo* temp = buff_;
  buff_ = NULL;
  return temp;
}
inline void ActorBuffDettach::set_allocated_buff(::Packet::BuffInfo* buff) {
  SetDirty();
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
}

// required fixed64 time_stamp = 4;
inline bool ActorBuffDettach::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActorBuffDettach::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActorBuffDettach::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActorBuffDettach::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorBuffDettach::time_stamp() const {
  return time_stamp_;
}
inline void ActorBuffDettach::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// MoveSpeedUpdate

// required fixed64 target_guid = 1;
inline bool MoveSpeedUpdate::has_target_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveSpeedUpdate::set_has_target_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveSpeedUpdate::clear_has_target_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveSpeedUpdate::clear_target_guid() {
  target_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 MoveSpeedUpdate::target_guid() const {
  return target_guid_;
}
inline void MoveSpeedUpdate::set_target_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_target_guid();
  target_guid_ = value;
}

// required int32 move_speed = 2;
inline bool MoveSpeedUpdate::has_move_speed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveSpeedUpdate::set_has_move_speed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveSpeedUpdate::clear_has_move_speed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveSpeedUpdate::clear_move_speed() {
  move_speed_ = 0;
  clear_has_move_speed();
  SetDirty();
}
inline ::google::protobuf::int32 MoveSpeedUpdate::move_speed() const {
  return move_speed_;
}
inline void MoveSpeedUpdate::set_move_speed(::google::protobuf::int32 value) {
  SetDirty();
  set_has_move_speed();
  move_speed_ = value;
}

// optional .Packet.BuffInfo buff = 3;
inline bool MoveSpeedUpdate::has_buff() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MoveSpeedUpdate::set_has_buff() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MoveSpeedUpdate::clear_has_buff() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MoveSpeedUpdate::clear_buff() {
  if (buff_ != NULL) buff_->::Packet::BuffInfo::Clear();
  clear_has_buff();
  SetDirty();
}
inline const ::Packet::BuffInfo& MoveSpeedUpdate::buff() const {
  return buff_ != NULL ? *buff_ : *default_instance_->buff_;
}
inline ::Packet::BuffInfo* MoveSpeedUpdate::mutable_buff() {
  SetDirty();
  set_has_buff();
  if (buff_ == NULL) buff_ = new ::Packet::BuffInfo;
  return buff_;
}
inline ::Packet::BuffInfo* MoveSpeedUpdate::release_buff() {
  SetDirty();
  clear_has_buff();
  ::Packet::BuffInfo* temp = buff_;
  buff_ = NULL;
  return temp;
}
inline void MoveSpeedUpdate::set_allocated_buff(::Packet::BuffInfo* buff) {
  SetDirty();
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
}

// required fixed64 time_stamp = 4;
inline bool MoveSpeedUpdate::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MoveSpeedUpdate::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MoveSpeedUpdate::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MoveSpeedUpdate::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 MoveSpeedUpdate::time_stamp() const {
  return time_stamp_;
}
inline void MoveSpeedUpdate::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// SkillEffects

// repeated .Packet.ActorOnDamage damages = 1;
inline int SkillEffects::damages_size() const {
  return damages_.size();
}
inline void SkillEffects::clear_damages() {
  damages_.Clear();
  SetDirty();
}
inline const ::Packet::ActorOnDamage& SkillEffects::damages(int index) const {
  return damages_.Get(index);
}
inline ::Packet::ActorOnDamage* SkillEffects::mutable_damages(int index) {
  SetDirty();
  return damages_.Mutable(index);
}
inline ::Packet::ActorOnDamage* SkillEffects::add_damages() {
  SetDirty();
  return damages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnDamage >&
SkillEffects::damages() const {
  return damages_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnDamage >*
SkillEffects::mutable_damages() {
  SetDirty();
  return &damages_;
}

// repeated .Packet.ActorOnCure cures = 2;
inline int SkillEffects::cures_size() const {
  return cures_.size();
}
inline void SkillEffects::clear_cures() {
  cures_.Clear();
  SetDirty();
}
inline const ::Packet::ActorOnCure& SkillEffects::cures(int index) const {
  return cures_.Get(index);
}
inline ::Packet::ActorOnCure* SkillEffects::mutable_cures(int index) {
  SetDirty();
  return cures_.Mutable(index);
}
inline ::Packet::ActorOnCure* SkillEffects::add_cures() {
  SetDirty();
  return cures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnCure >&
SkillEffects::cures() const {
  return cures_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnCure >*
SkillEffects::mutable_cures() {
  SetDirty();
  return &cures_;
}

// required fixed64 time_stamp = 3;
inline bool SkillEffects::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillEffects::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillEffects::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillEffects::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 SkillEffects::time_stamp() const {
  return time_stamp_;
}
inline void SkillEffects::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// ActorOnDamage

// optional fixed64 source_guid = 1;
inline bool ActorOnDamage::has_source_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorOnDamage::set_has_source_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorOnDamage::clear_has_source_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorOnDamage::clear_source_guid() {
  source_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorOnDamage::source_guid() const {
  return source_guid_;
}
inline void ActorOnDamage::set_source_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_source_guid();
  source_guid_ = value;
}

// required fixed64 target_guid = 2;
inline bool ActorOnDamage::has_target_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorOnDamage::set_has_target_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorOnDamage::clear_has_target_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorOnDamage::clear_target_guid() {
  target_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorOnDamage::target_guid() const {
  return target_guid_;
}
inline void ActorOnDamage::set_target_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_target_guid();
  target_guid_ = value;
}

// required int32 damage = 3;
inline bool ActorOnDamage::has_damage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorOnDamage::set_has_damage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorOnDamage::clear_has_damage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorOnDamage::clear_damage() {
  damage_ = 0;
  clear_has_damage();
  SetDirty();
}
inline ::google::protobuf::int32 ActorOnDamage::damage() const {
  return damage_;
}
inline void ActorOnDamage::set_damage(::google::protobuf::int32 value) {
  SetDirty();
  set_has_damage();
  damage_ = value;
}

// required .Packet.DamageType type = 4;
inline bool ActorOnDamage::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActorOnDamage::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActorOnDamage::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActorOnDamage::clear_type() {
  type_ = 1;
  clear_has_type();
  SetDirty();
}
inline ::Packet::DamageType ActorOnDamage::type() const {
  return static_cast< ::Packet::DamageType >(type_);
}
inline void ActorOnDamage::set_type(::Packet::DamageType value) {
  assert(::Packet::DamageType_IsValid(value));
  SetDirty();
  set_has_type();
  type_ = value;
}

// required .Packet.DamageExpression expression = 5;
inline bool ActorOnDamage::has_expression() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActorOnDamage::set_has_expression() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActorOnDamage::clear_has_expression() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActorOnDamage::clear_expression() {
  expression_ = 1;
  clear_has_expression();
  SetDirty();
}
inline ::Packet::DamageExpression ActorOnDamage::expression() const {
  return static_cast< ::Packet::DamageExpression >(expression_);
}
inline void ActorOnDamage::set_expression(::Packet::DamageExpression value) {
  assert(::Packet::DamageExpression_IsValid(value));
  SetDirty();
  set_has_expression();
  expression_ = value;
}

// required int32 old_hp = 6;
inline bool ActorOnDamage::has_old_hp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ActorOnDamage::set_has_old_hp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ActorOnDamage::clear_has_old_hp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ActorOnDamage::clear_old_hp() {
  old_hp_ = 0;
  clear_has_old_hp();
  SetDirty();
}
inline ::google::protobuf::int32 ActorOnDamage::old_hp() const {
  return old_hp_;
}
inline void ActorOnDamage::set_old_hp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_old_hp();
  old_hp_ = value;
}

// required int32 new_hp = 7;
inline bool ActorOnDamage::has_new_hp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ActorOnDamage::set_has_new_hp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ActorOnDamage::clear_has_new_hp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ActorOnDamage::clear_new_hp() {
  new_hp_ = 0;
  clear_has_new_hp();
  SetDirty();
}
inline ::google::protobuf::int32 ActorOnDamage::new_hp() const {
  return new_hp_;
}
inline void ActorOnDamage::set_new_hp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_new_hp();
  new_hp_ = value;
}

// optional .Packet.SkillInfo skill = 8;
inline bool ActorOnDamage::has_skill() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ActorOnDamage::set_has_skill() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ActorOnDamage::clear_has_skill() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ActorOnDamage::clear_skill() {
  if (skill_ != NULL) skill_->::Packet::SkillInfo::Clear();
  clear_has_skill();
  SetDirty();
}
inline const ::Packet::SkillInfo& ActorOnDamage::skill() const {
  return skill_ != NULL ? *skill_ : *default_instance_->skill_;
}
inline ::Packet::SkillInfo* ActorOnDamage::mutable_skill() {
  SetDirty();
  set_has_skill();
  if (skill_ == NULL) skill_ = new ::Packet::SkillInfo;
  return skill_;
}
inline ::Packet::SkillInfo* ActorOnDamage::release_skill() {
  SetDirty();
  clear_has_skill();
  ::Packet::SkillInfo* temp = skill_;
  skill_ = NULL;
  return temp;
}
inline void ActorOnDamage::set_allocated_skill(::Packet::SkillInfo* skill) {
  SetDirty();
  delete skill_;
  skill_ = skill;
  if (skill) {
    set_has_skill();
  } else {
    clear_has_skill();
  }
}

// optional .Packet.BuffInfo buff = 9;
inline bool ActorOnDamage::has_buff() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ActorOnDamage::set_has_buff() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ActorOnDamage::clear_has_buff() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ActorOnDamage::clear_buff() {
  if (buff_ != NULL) buff_->::Packet::BuffInfo::Clear();
  clear_has_buff();
  SetDirty();
}
inline const ::Packet::BuffInfo& ActorOnDamage::buff() const {
  return buff_ != NULL ? *buff_ : *default_instance_->buff_;
}
inline ::Packet::BuffInfo* ActorOnDamage::mutable_buff() {
  SetDirty();
  set_has_buff();
  if (buff_ == NULL) buff_ = new ::Packet::BuffInfo;
  return buff_;
}
inline ::Packet::BuffInfo* ActorOnDamage::release_buff() {
  SetDirty();
  clear_has_buff();
  ::Packet::BuffInfo* temp = buff_;
  buff_ = NULL;
  return temp;
}
inline void ActorOnDamage::set_allocated_buff(::Packet::BuffInfo* buff) {
  SetDirty();
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
}

// optional .Packet.TrapInfo trap = 10;
inline bool ActorOnDamage::has_trap() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ActorOnDamage::set_has_trap() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ActorOnDamage::clear_has_trap() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ActorOnDamage::clear_trap() {
  if (trap_ != NULL) trap_->::Packet::TrapInfo::Clear();
  clear_has_trap();
  SetDirty();
}
inline const ::Packet::TrapInfo& ActorOnDamage::trap() const {
  return trap_ != NULL ? *trap_ : *default_instance_->trap_;
}
inline ::Packet::TrapInfo* ActorOnDamage::mutable_trap() {
  SetDirty();
  set_has_trap();
  if (trap_ == NULL) trap_ = new ::Packet::TrapInfo;
  return trap_;
}
inline ::Packet::TrapInfo* ActorOnDamage::release_trap() {
  SetDirty();
  clear_has_trap();
  ::Packet::TrapInfo* temp = trap_;
  trap_ = NULL;
  return temp;
}
inline void ActorOnDamage::set_allocated_trap(::Packet::TrapInfo* trap) {
  SetDirty();
  delete trap_;
  trap_ = trap;
  if (trap) {
    set_has_trap();
  } else {
    clear_has_trap();
  }
}

// -------------------------------------------------------------------

// FlashChainDamage

// repeated .Packet.ActorOnDamage damages = 1;
inline int FlashChainDamage::damages_size() const {
  return damages_.size();
}
inline void FlashChainDamage::clear_damages() {
  damages_.Clear();
  SetDirty();
}
inline const ::Packet::ActorOnDamage& FlashChainDamage::damages(int index) const {
  return damages_.Get(index);
}
inline ::Packet::ActorOnDamage* FlashChainDamage::mutable_damages(int index) {
  SetDirty();
  return damages_.Mutable(index);
}
inline ::Packet::ActorOnDamage* FlashChainDamage::add_damages() {
  SetDirty();
  return damages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnDamage >&
FlashChainDamage::damages() const {
  return damages_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnDamage >*
FlashChainDamage::mutable_damages() {
  SetDirty();
  return &damages_;
}

// required fixed64 time_stamp = 2;
inline bool FlashChainDamage::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FlashChainDamage::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FlashChainDamage::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FlashChainDamage::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 FlashChainDamage::time_stamp() const {
  return time_stamp_;
}
inline void FlashChainDamage::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// CureChain

// repeated .Packet.ActorOnCure cures = 1;
inline int CureChain::cures_size() const {
  return cures_.size();
}
inline void CureChain::clear_cures() {
  cures_.Clear();
  SetDirty();
}
inline const ::Packet::ActorOnCure& CureChain::cures(int index) const {
  return cures_.Get(index);
}
inline ::Packet::ActorOnCure* CureChain::mutable_cures(int index) {
  SetDirty();
  return cures_.Mutable(index);
}
inline ::Packet::ActorOnCure* CureChain::add_cures() {
  SetDirty();
  return cures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnCure >&
CureChain::cures() const {
  return cures_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorOnCure >*
CureChain::mutable_cures() {
  SetDirty();
  return &cures_;
}

// required fixed64 time_stamp = 2;
inline bool CureChain::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CureChain::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CureChain::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CureChain::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 CureChain::time_stamp() const {
  return time_stamp_;
}
inline void CureChain::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// ActorOnCure

// optional fixed64 source_guid = 1;
inline bool ActorOnCure::has_source_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorOnCure::set_has_source_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorOnCure::clear_has_source_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorOnCure::clear_source_guid() {
  source_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorOnCure::source_guid() const {
  return source_guid_;
}
inline void ActorOnCure::set_source_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_source_guid();
  source_guid_ = value;
}

// required fixed64 target_guid = 2;
inline bool ActorOnCure::has_target_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorOnCure::set_has_target_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorOnCure::clear_has_target_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorOnCure::clear_target_guid() {
  target_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorOnCure::target_guid() const {
  return target_guid_;
}
inline void ActorOnCure::set_target_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_target_guid();
  target_guid_ = value;
}

// required int32 cure = 3;
inline bool ActorOnCure::has_cure() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorOnCure::set_has_cure() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorOnCure::clear_has_cure() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorOnCure::clear_cure() {
  cure_ = 0;
  clear_has_cure();
  SetDirty();
}
inline ::google::protobuf::int32 ActorOnCure::cure() const {
  return cure_;
}
inline void ActorOnCure::set_cure(::google::protobuf::int32 value) {
  SetDirty();
  set_has_cure();
  cure_ = value;
}

// required int32 old_hp = 4;
inline bool ActorOnCure::has_old_hp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActorOnCure::set_has_old_hp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActorOnCure::clear_has_old_hp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActorOnCure::clear_old_hp() {
  old_hp_ = 0;
  clear_has_old_hp();
  SetDirty();
}
inline ::google::protobuf::int32 ActorOnCure::old_hp() const {
  return old_hp_;
}
inline void ActorOnCure::set_old_hp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_old_hp();
  old_hp_ = value;
}

// required int32 new_hp = 5;
inline bool ActorOnCure::has_new_hp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActorOnCure::set_has_new_hp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActorOnCure::clear_has_new_hp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActorOnCure::clear_new_hp() {
  new_hp_ = 0;
  clear_has_new_hp();
  SetDirty();
}
inline ::google::protobuf::int32 ActorOnCure::new_hp() const {
  return new_hp_;
}
inline void ActorOnCure::set_new_hp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_new_hp();
  new_hp_ = value;
}

// optional .Packet.SkillInfo skill = 6;
inline bool ActorOnCure::has_skill() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ActorOnCure::set_has_skill() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ActorOnCure::clear_has_skill() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ActorOnCure::clear_skill() {
  if (skill_ != NULL) skill_->::Packet::SkillInfo::Clear();
  clear_has_skill();
  SetDirty();
}
inline const ::Packet::SkillInfo& ActorOnCure::skill() const {
  return skill_ != NULL ? *skill_ : *default_instance_->skill_;
}
inline ::Packet::SkillInfo* ActorOnCure::mutable_skill() {
  SetDirty();
  set_has_skill();
  if (skill_ == NULL) skill_ = new ::Packet::SkillInfo;
  return skill_;
}
inline ::Packet::SkillInfo* ActorOnCure::release_skill() {
  SetDirty();
  clear_has_skill();
  ::Packet::SkillInfo* temp = skill_;
  skill_ = NULL;
  return temp;
}
inline void ActorOnCure::set_allocated_skill(::Packet::SkillInfo* skill) {
  SetDirty();
  delete skill_;
  skill_ = skill;
  if (skill) {
    set_has_skill();
  } else {
    clear_has_skill();
  }
}

// optional .Packet.BuffInfo buff = 7;
inline bool ActorOnCure::has_buff() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ActorOnCure::set_has_buff() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ActorOnCure::clear_has_buff() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ActorOnCure::clear_buff() {
  if (buff_ != NULL) buff_->::Packet::BuffInfo::Clear();
  clear_has_buff();
  SetDirty();
}
inline const ::Packet::BuffInfo& ActorOnCure::buff() const {
  return buff_ != NULL ? *buff_ : *default_instance_->buff_;
}
inline ::Packet::BuffInfo* ActorOnCure::mutable_buff() {
  SetDirty();
  set_has_buff();
  if (buff_ == NULL) buff_ = new ::Packet::BuffInfo;
  return buff_;
}
inline ::Packet::BuffInfo* ActorOnCure::release_buff() {
  SetDirty();
  clear_has_buff();
  ::Packet::BuffInfo* temp = buff_;
  buff_ = NULL;
  return temp;
}
inline void ActorOnCure::set_allocated_buff(::Packet::BuffInfo* buff) {
  SetDirty();
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
}

// -------------------------------------------------------------------

// ActorDead

// optional fixed64 source_guid = 1;
inline bool ActorDead::has_source_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorDead::set_has_source_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorDead::clear_has_source_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorDead::clear_source_guid() {
  source_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorDead::source_guid() const {
  return source_guid_;
}
inline void ActorDead::set_source_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_source_guid();
  source_guid_ = value;
}

// required fixed64 target_guid = 2;
inline bool ActorDead::has_target_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorDead::set_has_target_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorDead::clear_has_target_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorDead::clear_target_guid() {
  target_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorDead::target_guid() const {
  return target_guid_;
}
inline void ActorDead::set_target_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_target_guid();
  target_guid_ = value;
}

// optional .Packet.SkillInfo skill = 3;
inline bool ActorDead::has_skill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorDead::set_has_skill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorDead::clear_has_skill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorDead::clear_skill() {
  if (skill_ != NULL) skill_->::Packet::SkillInfo::Clear();
  clear_has_skill();
  SetDirty();
}
inline const ::Packet::SkillInfo& ActorDead::skill() const {
  return skill_ != NULL ? *skill_ : *default_instance_->skill_;
}
inline ::Packet::SkillInfo* ActorDead::mutable_skill() {
  SetDirty();
  set_has_skill();
  if (skill_ == NULL) skill_ = new ::Packet::SkillInfo;
  return skill_;
}
inline ::Packet::SkillInfo* ActorDead::release_skill() {
  SetDirty();
  clear_has_skill();
  ::Packet::SkillInfo* temp = skill_;
  skill_ = NULL;
  return temp;
}
inline void ActorDead::set_allocated_skill(::Packet::SkillInfo* skill) {
  SetDirty();
  delete skill_;
  skill_ = skill;
  if (skill) {
    set_has_skill();
  } else {
    clear_has_skill();
  }
}

// optional .Packet.BuffInfo buff = 4;
inline bool ActorDead::has_buff() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActorDead::set_has_buff() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActorDead::clear_has_buff() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActorDead::clear_buff() {
  if (buff_ != NULL) buff_->::Packet::BuffInfo::Clear();
  clear_has_buff();
  SetDirty();
}
inline const ::Packet::BuffInfo& ActorDead::buff() const {
  return buff_ != NULL ? *buff_ : *default_instance_->buff_;
}
inline ::Packet::BuffInfo* ActorDead::mutable_buff() {
  SetDirty();
  set_has_buff();
  if (buff_ == NULL) buff_ = new ::Packet::BuffInfo;
  return buff_;
}
inline ::Packet::BuffInfo* ActorDead::release_buff() {
  SetDirty();
  clear_has_buff();
  ::Packet::BuffInfo* temp = buff_;
  buff_ = NULL;
  return temp;
}
inline void ActorDead::set_allocated_buff(::Packet::BuffInfo* buff) {
  SetDirty();
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
}

// required fixed64 time_stamp = 5;
inline bool ActorDead::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActorDead::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActorDead::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActorDead::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorDead::time_stamp() const {
  return time_stamp_;
}
inline void ActorDead::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// ActorRelive

// optional fixed64 source_guid = 1;
inline bool ActorRelive::has_source_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorRelive::set_has_source_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorRelive::clear_has_source_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorRelive::clear_source_guid() {
  source_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorRelive::source_guid() const {
  return source_guid_;
}
inline void ActorRelive::set_source_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_source_guid();
  source_guid_ = value;
}

// required fixed64 target_guid = 2;
inline bool ActorRelive::has_target_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorRelive::set_has_target_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorRelive::clear_has_target_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorRelive::clear_target_guid() {
  target_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorRelive::target_guid() const {
  return target_guid_;
}
inline void ActorRelive::set_target_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_target_guid();
  target_guid_ = value;
}

// required int32 hp = 3;
inline bool ActorRelive::has_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorRelive::set_has_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorRelive::clear_has_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorRelive::clear_hp() {
  hp_ = 0;
  clear_has_hp();
  SetDirty();
}
inline ::google::protobuf::int32 ActorRelive::hp() const {
  return hp_;
}
inline void ActorRelive::set_hp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_hp();
  hp_ = value;
}

// required .Packet.SkillInfo skill = 4;
inline bool ActorRelive::has_skill() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActorRelive::set_has_skill() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActorRelive::clear_has_skill() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActorRelive::clear_skill() {
  if (skill_ != NULL) skill_->::Packet::SkillInfo::Clear();
  clear_has_skill();
  SetDirty();
}
inline const ::Packet::SkillInfo& ActorRelive::skill() const {
  return skill_ != NULL ? *skill_ : *default_instance_->skill_;
}
inline ::Packet::SkillInfo* ActorRelive::mutable_skill() {
  SetDirty();
  set_has_skill();
  if (skill_ == NULL) skill_ = new ::Packet::SkillInfo;
  return skill_;
}
inline ::Packet::SkillInfo* ActorRelive::release_skill() {
  SetDirty();
  clear_has_skill();
  ::Packet::SkillInfo* temp = skill_;
  skill_ = NULL;
  return temp;
}
inline void ActorRelive::set_allocated_skill(::Packet::SkillInfo* skill) {
  SetDirty();
  delete skill_;
  skill_ = skill;
  if (skill) {
    set_has_skill();
  } else {
    clear_has_skill();
  }
}

// required fixed64 time_stamp = 5;
inline bool ActorRelive::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActorRelive::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActorRelive::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActorRelive::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorRelive::time_stamp() const {
  return time_stamp_;
}
inline void ActorRelive::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// ActorAddBuff

// required fixed64 source_guid = 1;
inline bool ActorAddBuff::has_source_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorAddBuff::set_has_source_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorAddBuff::clear_has_source_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorAddBuff::clear_source_guid() {
  source_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorAddBuff::source_guid() const {
  return source_guid_;
}
inline void ActorAddBuff::set_source_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_source_guid();
  source_guid_ = value;
}

// required fixed64 target_guid = 2;
inline bool ActorAddBuff::has_target_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorAddBuff::set_has_target_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorAddBuff::clear_has_target_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorAddBuff::clear_target_guid() {
  target_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorAddBuff::target_guid() const {
  return target_guid_;
}
inline void ActorAddBuff::set_target_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_target_guid();
  target_guid_ = value;
}

// required .Packet.BuffInfo buff = 3;
inline bool ActorAddBuff::has_buff() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorAddBuff::set_has_buff() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorAddBuff::clear_has_buff() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorAddBuff::clear_buff() {
  if (buff_ != NULL) buff_->::Packet::BuffInfo::Clear();
  clear_has_buff();
  SetDirty();
}
inline const ::Packet::BuffInfo& ActorAddBuff::buff() const {
  return buff_ != NULL ? *buff_ : *default_instance_->buff_;
}
inline ::Packet::BuffInfo* ActorAddBuff::mutable_buff() {
  SetDirty();
  set_has_buff();
  if (buff_ == NULL) buff_ = new ::Packet::BuffInfo;
  return buff_;
}
inline ::Packet::BuffInfo* ActorAddBuff::release_buff() {
  SetDirty();
  clear_has_buff();
  ::Packet::BuffInfo* temp = buff_;
  buff_ = NULL;
  return temp;
}
inline void ActorAddBuff::set_allocated_buff(::Packet::BuffInfo* buff) {
  SetDirty();
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
}

// required fixed64 time_stamp = 4;
inline bool ActorAddBuff::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActorAddBuff::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActorAddBuff::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActorAddBuff::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorAddBuff::time_stamp() const {
  return time_stamp_;
}
inline void ActorAddBuff::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// SkillPositionLogic

// required .Packet.SkillPositionLogicType type = 1;
inline bool SkillPositionLogic::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillPositionLogic::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillPositionLogic::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillPositionLogic::clear_type() {
  type_ = 1;
  clear_has_type();
  SetDirty();
}
inline ::Packet::SkillPositionLogicType SkillPositionLogic::type() const {
  return static_cast< ::Packet::SkillPositionLogicType >(type_);
}
inline void SkillPositionLogic::set_type(::Packet::SkillPositionLogicType value) {
  assert(::Packet::SkillPositionLogicType_IsValid(value));
  SetDirty();
  set_has_type();
  type_ = value;
}

// required fixed64 source_guid = 2;
inline bool SkillPositionLogic::has_source_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillPositionLogic::set_has_source_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillPositionLogic::clear_has_source_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillPositionLogic::clear_source_guid() {
  source_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 SkillPositionLogic::source_guid() const {
  return source_guid_;
}
inline void SkillPositionLogic::set_source_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_source_guid();
  source_guid_ = value;
}

// required fixed64 target_guid = 3;
inline bool SkillPositionLogic::has_target_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillPositionLogic::set_has_target_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillPositionLogic::clear_has_target_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillPositionLogic::clear_target_guid() {
  target_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 SkillPositionLogic::target_guid() const {
  return target_guid_;
}
inline void SkillPositionLogic::set_target_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_target_guid();
  target_guid_ = value;
}

// optional int32 move_speed = 4;
inline bool SkillPositionLogic::has_move_speed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillPositionLogic::set_has_move_speed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillPositionLogic::clear_has_move_speed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillPositionLogic::clear_move_speed() {
  move_speed_ = 0;
  clear_has_move_speed();
  SetDirty();
}
inline ::google::protobuf::int32 SkillPositionLogic::move_speed() const {
  return move_speed_;
}
inline void SkillPositionLogic::set_move_speed(::google::protobuf::int32 value) {
  SetDirty();
  set_has_move_speed();
  move_speed_ = value;
}

// optional .Packet.SkillInfo skill_info = 5;
inline bool SkillPositionLogic::has_skill_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SkillPositionLogic::set_has_skill_info() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SkillPositionLogic::clear_has_skill_info() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SkillPositionLogic::clear_skill_info() {
  if (skill_info_ != NULL) skill_info_->::Packet::SkillInfo::Clear();
  clear_has_skill_info();
  SetDirty();
}
inline const ::Packet::SkillInfo& SkillPositionLogic::skill_info() const {
  return skill_info_ != NULL ? *skill_info_ : *default_instance_->skill_info_;
}
inline ::Packet::SkillInfo* SkillPositionLogic::mutable_skill_info() {
  SetDirty();
  set_has_skill_info();
  if (skill_info_ == NULL) skill_info_ = new ::Packet::SkillInfo;
  return skill_info_;
}
inline ::Packet::SkillInfo* SkillPositionLogic::release_skill_info() {
  SetDirty();
  clear_has_skill_info();
  ::Packet::SkillInfo* temp = skill_info_;
  skill_info_ = NULL;
  return temp;
}
inline void SkillPositionLogic::set_allocated_skill_info(::Packet::SkillInfo* skill_info) {
  SetDirty();
  delete skill_info_;
  skill_info_ = skill_info;
  if (skill_info) {
    set_has_skill_info();
  } else {
    clear_has_skill_info();
  }
}

// optional int32 range = 6;
inline bool SkillPositionLogic::has_range() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SkillPositionLogic::set_has_range() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SkillPositionLogic::clear_has_range() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SkillPositionLogic::clear_range() {
  range_ = 0;
  clear_has_range();
  SetDirty();
}
inline ::google::protobuf::int32 SkillPositionLogic::range() const {
  return range_;
}
inline void SkillPositionLogic::set_range(::google::protobuf::int32 value) {
  SetDirty();
  set_has_range();
  range_ = value;
}

// required fixed64 time_stamp = 7;
inline bool SkillPositionLogic::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SkillPositionLogic::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SkillPositionLogic::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SkillPositionLogic::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 SkillPositionLogic::time_stamp() const {
  return time_stamp_;
}
inline void SkillPositionLogic::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// ActorTransform

// required fixed64 source_guid = 1;
inline bool ActorTransform::has_source_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorTransform::set_has_source_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorTransform::clear_has_source_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorTransform::clear_source_guid() {
  source_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorTransform::source_guid() const {
  return source_guid_;
}
inline void ActorTransform::set_source_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_source_guid();
  source_guid_ = value;
}

// required int32 new_res_id = 2;
inline bool ActorTransform::has_new_res_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorTransform::set_has_new_res_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorTransform::clear_has_new_res_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorTransform::clear_new_res_id() {
  new_res_id_ = 0;
  clear_has_new_res_id();
  SetDirty();
}
inline ::google::protobuf::int32 ActorTransform::new_res_id() const {
  return new_res_id_;
}
inline void ActorTransform::set_new_res_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_new_res_id();
  new_res_id_ = value;
}

// required int32 new_hp = 3;
inline bool ActorTransform::has_new_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorTransform::set_has_new_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorTransform::clear_has_new_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorTransform::clear_new_hp() {
  new_hp_ = 0;
  clear_has_new_hp();
  SetDirty();
}
inline ::google::protobuf::int32 ActorTransform::new_hp() const {
  return new_hp_;
}
inline void ActorTransform::set_new_hp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_new_hp();
  new_hp_ = value;
}

// required int32 new_max_hp = 4;
inline bool ActorTransform::has_new_max_hp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActorTransform::set_has_new_max_hp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActorTransform::clear_has_new_max_hp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActorTransform::clear_new_max_hp() {
  new_max_hp_ = 0;
  clear_has_new_max_hp();
  SetDirty();
}
inline ::google::protobuf::int32 ActorTransform::new_max_hp() const {
  return new_max_hp_;
}
inline void ActorTransform::set_new_max_hp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_new_max_hp();
  new_max_hp_ = value;
}

// required int32 radius = 5;
inline bool ActorTransform::has_radius() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActorTransform::set_has_radius() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActorTransform::clear_has_radius() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActorTransform::clear_radius() {
  radius_ = 0;
  clear_has_radius();
  SetDirty();
}
inline ::google::protobuf::int32 ActorTransform::radius() const {
  return radius_;
}
inline void ActorTransform::set_radius(::google::protobuf::int32 value) {
  SetDirty();
  set_has_radius();
  radius_ = value;
}

// required fixed64 time_stamp = 6;
inline bool ActorTransform::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ActorTransform::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ActorTransform::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ActorTransform::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorTransform::time_stamp() const {
  return time_stamp_;
}
inline void ActorTransform::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// ActorTransformCancel

// required fixed64 source_guid = 1;
inline bool ActorTransformCancel::has_source_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorTransformCancel::set_has_source_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorTransformCancel::clear_has_source_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorTransformCancel::clear_source_guid() {
  source_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorTransformCancel::source_guid() const {
  return source_guid_;
}
inline void ActorTransformCancel::set_source_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_source_guid();
  source_guid_ = value;
}

// required int32 radius = 2;
inline bool ActorTransformCancel::has_radius() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorTransformCancel::set_has_radius() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorTransformCancel::clear_has_radius() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorTransformCancel::clear_radius() {
  radius_ = 0;
  clear_has_radius();
  SetDirty();
}
inline ::google::protobuf::int32 ActorTransformCancel::radius() const {
  return radius_;
}
inline void ActorTransformCancel::set_radius(::google::protobuf::int32 value) {
  SetDirty();
  set_has_radius();
  radius_ = value;
}

// required fixed64 time_stamp = 3;
inline bool ActorTransformCancel::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorTransformCancel::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorTransformCancel::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorTransformCancel::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorTransformCancel::time_stamp() const {
  return time_stamp_;
}
inline void ActorTransformCancel::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// TrapCreate

// required fixed64 guid = 1;
inline bool TrapCreate::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrapCreate::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrapCreate::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrapCreate::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 TrapCreate::guid() const {
  return guid_;
}
inline void TrapCreate::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required .Packet.TrapInfo trap = 2;
inline bool TrapCreate::has_trap() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrapCreate::set_has_trap() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrapCreate::clear_has_trap() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrapCreate::clear_trap() {
  if (trap_ != NULL) trap_->::Packet::TrapInfo::Clear();
  clear_has_trap();
  SetDirty();
}
inline const ::Packet::TrapInfo& TrapCreate::trap() const {
  return trap_ != NULL ? *trap_ : *default_instance_->trap_;
}
inline ::Packet::TrapInfo* TrapCreate::mutable_trap() {
  SetDirty();
  set_has_trap();
  if (trap_ == NULL) trap_ = new ::Packet::TrapInfo;
  return trap_;
}
inline ::Packet::TrapInfo* TrapCreate::release_trap() {
  SetDirty();
  clear_has_trap();
  ::Packet::TrapInfo* temp = trap_;
  trap_ = NULL;
  return temp;
}
inline void TrapCreate::set_allocated_trap(::Packet::TrapInfo* trap) {
  SetDirty();
  delete trap_;
  trap_ = trap;
  if (trap) {
    set_has_trap();
  } else {
    clear_has_trap();
  }
}

// required fixed64 time_stamp = 3;
inline bool TrapCreate::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TrapCreate::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TrapCreate::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TrapCreate::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 TrapCreate::time_stamp() const {
  return time_stamp_;
}
inline void TrapCreate::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// TrapDestroy

// required fixed64 guid = 1;
inline bool TrapDestroy::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrapDestroy::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrapDestroy::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrapDestroy::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 TrapDestroy::guid() const {
  return guid_;
}
inline void TrapDestroy::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required fixed64 time_stamp = 2;
inline bool TrapDestroy::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrapDestroy::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrapDestroy::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrapDestroy::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 TrapDestroy::time_stamp() const {
  return time_stamp_;
}
inline void TrapDestroy::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// ActorDamage

// required fixed64 guid = 1;
inline bool ActorDamage::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorDamage::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorDamage::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorDamage::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorDamage::guid() const {
  return guid_;
}
inline void ActorDamage::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required int32 damage = 2;
inline bool ActorDamage::has_damage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorDamage::set_has_damage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorDamage::clear_has_damage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorDamage::clear_damage() {
  damage_ = 0;
  clear_has_damage();
  SetDirty();
}
inline ::google::protobuf::int32 ActorDamage::damage() const {
  return damage_;
}
inline void ActorDamage::set_damage(::google::protobuf::int32 value) {
  SetDirty();
  set_has_damage();
  damage_ = value;
}

// -------------------------------------------------------------------

// ActorStat

// required fixed64 guid = 1;
inline bool ActorStat::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorStat::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorStat::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorStat::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorStat::guid() const {
  return guid_;
}
inline void ActorStat::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required int32 value = 2;
inline bool ActorStat::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorStat::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorStat::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorStat::clear_value() {
  value_ = 0;
  clear_has_value();
  SetDirty();
}
inline ::google::protobuf::int32 ActorStat::value() const {
  return value_;
}
inline void ActorStat::set_value(::google::protobuf::int32 value) {
  SetDirty();
  set_has_value();
  value_ = value;
}

// optional int32 config_id = 3;
inline bool ActorStat::has_config_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorStat::set_has_config_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorStat::clear_has_config_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorStat::clear_config_id() {
  config_id_ = 0;
  clear_has_config_id();
  SetDirty();
}
inline ::google::protobuf::int32 ActorStat::config_id() const {
  return config_id_;
}
inline void ActorStat::set_config_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_config_id();
  config_id_ = value;
}

// -------------------------------------------------------------------

// Stat

// repeated .Packet.ActorStat damages = 1;
inline int Stat::damages_size() const {
  return damages_.size();
}
inline void Stat::clear_damages() {
  damages_.Clear();
  SetDirty();
}
inline const ::Packet::ActorStat& Stat::damages(int index) const {
  return damages_.Get(index);
}
inline ::Packet::ActorStat* Stat::mutable_damages(int index) {
  SetDirty();
  return damages_.Mutable(index);
}
inline ::Packet::ActorStat* Stat::add_damages() {
  SetDirty();
  return damages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorStat >&
Stat::damages() const {
  return damages_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorStat >*
Stat::mutable_damages() {
  SetDirty();
  return &damages_;
}

// repeated .Packet.ActorStat be_damages = 2;
inline int Stat::be_damages_size() const {
  return be_damages_.size();
}
inline void Stat::clear_be_damages() {
  be_damages_.Clear();
  SetDirty();
}
inline const ::Packet::ActorStat& Stat::be_damages(int index) const {
  return be_damages_.Get(index);
}
inline ::Packet::ActorStat* Stat::mutable_be_damages(int index) {
  SetDirty();
  return be_damages_.Mutable(index);
}
inline ::Packet::ActorStat* Stat::add_be_damages() {
  SetDirty();
  return be_damages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorStat >&
Stat::be_damages() const {
  return be_damages_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorStat >*
Stat::mutable_be_damages() {
  SetDirty();
  return &be_damages_;
}

// repeated .Packet.ActorStat cures = 3;
inline int Stat::cures_size() const {
  return cures_.size();
}
inline void Stat::clear_cures() {
  cures_.Clear();
  SetDirty();
}
inline const ::Packet::ActorStat& Stat::cures(int index) const {
  return cures_.Get(index);
}
inline ::Packet::ActorStat* Stat::mutable_cures(int index) {
  SetDirty();
  return cures_.Mutable(index);
}
inline ::Packet::ActorStat* Stat::add_cures() {
  SetDirty();
  return cures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorStat >&
Stat::cures() const {
  return cures_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorStat >*
Stat::mutable_cures() {
  SetDirty();
  return &cures_;
}

// optional fixed64 attacker_damage = 4;
inline bool Stat::has_attacker_damage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Stat::set_has_attacker_damage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Stat::clear_has_attacker_damage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Stat::clear_attacker_damage() {
  attacker_damage_ = GOOGLE_ULONGLONG(0);
  clear_has_attacker_damage();
  SetDirty();
}
inline ::google::protobuf::uint64 Stat::attacker_damage() const {
  return attacker_damage_;
}
inline void Stat::set_attacker_damage(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_attacker_damage();
  attacker_damage_ = value;
}

// optional fixed64 defender_damage = 5;
inline bool Stat::has_defender_damage() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Stat::set_has_defender_damage() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Stat::clear_has_defender_damage() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Stat::clear_defender_damage() {
  defender_damage_ = GOOGLE_ULONGLONG(0);
  clear_has_defender_damage();
  SetDirty();
}
inline ::google::protobuf::uint64 Stat::defender_damage() const {
  return defender_damage_;
}
inline void Stat::set_defender_damage(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_defender_damage();
  defender_damage_ = value;
}

// optional fixed64 attacker_cure = 6;
inline bool Stat::has_attacker_cure() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Stat::set_has_attacker_cure() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Stat::clear_has_attacker_cure() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Stat::clear_attacker_cure() {
  attacker_cure_ = GOOGLE_ULONGLONG(0);
  clear_has_attacker_cure();
  SetDirty();
}
inline ::google::protobuf::uint64 Stat::attacker_cure() const {
  return attacker_cure_;
}
inline void Stat::set_attacker_cure(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_attacker_cure();
  attacker_cure_ = value;
}

// optional fixed64 defender_cure = 7;
inline bool Stat::has_defender_cure() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Stat::set_has_defender_cure() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Stat::clear_has_defender_cure() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Stat::clear_defender_cure() {
  defender_cure_ = GOOGLE_ULONGLONG(0);
  clear_has_defender_cure();
  SetDirty();
}
inline ::google::protobuf::uint64 Stat::defender_cure() const {
  return defender_cure_;
}
inline void Stat::set_defender_cure(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_defender_cure();
  defender_cure_ = value;
}

// -------------------------------------------------------------------

// StatisticInfo

// optional int32 player_exp = 1;
inline bool StatisticInfo::has_player_exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatisticInfo::set_has_player_exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatisticInfo::clear_has_player_exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatisticInfo::clear_player_exp() {
  player_exp_ = 0;
  clear_has_player_exp();
  SetDirty();
}
inline ::google::protobuf::int32 StatisticInfo::player_exp() const {
  return player_exp_;
}
inline void StatisticInfo::set_player_exp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_player_exp();
  player_exp_ = value;
}

// optional int32 actor_exp = 2;
inline bool StatisticInfo::has_actor_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatisticInfo::set_has_actor_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatisticInfo::clear_has_actor_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatisticInfo::clear_actor_exp() {
  actor_exp_ = 0;
  clear_has_actor_exp();
  SetDirty();
}
inline ::google::protobuf::int32 StatisticInfo::actor_exp() const {
  return actor_exp_;
}
inline void StatisticInfo::set_actor_exp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_actor_exp();
  actor_exp_ = value;
}

// repeated .Config.ItemPackageElement items = 3;
inline int StatisticInfo::items_size() const {
  return items_.size();
}
inline void StatisticInfo::clear_items() {
  items_.Clear();
  SetDirty();
}
inline const ::Config::ItemPackageElement& StatisticInfo::items(int index) const {
  return items_.Get(index);
}
inline ::Config::ItemPackageElement* StatisticInfo::mutable_items(int index) {
  SetDirty();
  return items_.Mutable(index);
}
inline ::Config::ItemPackageElement* StatisticInfo::add_items() {
  SetDirty();
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Config::ItemPackageElement >&
StatisticInfo::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Config::ItemPackageElement >*
StatisticInfo::mutable_items() {
  SetDirty();
  return &items_;
}

// optional fixed64 time_stamp = 4;
inline bool StatisticInfo::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StatisticInfo::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StatisticInfo::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StatisticInfo::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 StatisticInfo::time_stamp() const {
  return time_stamp_;
}
inline void StatisticInfo::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// optional int32 damage = 5;
inline bool StatisticInfo::has_damage() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StatisticInfo::set_has_damage() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StatisticInfo::clear_has_damage() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StatisticInfo::clear_damage() {
  damage_ = 0;
  clear_has_damage();
  SetDirty();
}
inline ::google::protobuf::int32 StatisticInfo::damage() const {
  return damage_;
}
inline void StatisticInfo::set_damage(::google::protobuf::int32 value) {
  SetDirty();
  set_has_damage();
  damage_ = value;
}

// repeated .Packet.ActorDamage actordamage = 6;
inline int StatisticInfo::actordamage_size() const {
  return actordamage_.size();
}
inline void StatisticInfo::clear_actordamage() {
  actordamage_.Clear();
  SetDirty();
}
inline const ::Packet::ActorDamage& StatisticInfo::actordamage(int index) const {
  return actordamage_.Get(index);
}
inline ::Packet::ActorDamage* StatisticInfo::mutable_actordamage(int index) {
  SetDirty();
  return actordamage_.Mutable(index);
}
inline ::Packet::ActorDamage* StatisticInfo::add_actordamage() {
  SetDirty();
  return actordamage_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorDamage >&
StatisticInfo::actordamage() const {
  return actordamage_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorDamage >*
StatisticInfo::mutable_actordamage() {
  SetDirty();
  return &actordamage_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Packet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BattleExpression_2eproto__INCLUDED

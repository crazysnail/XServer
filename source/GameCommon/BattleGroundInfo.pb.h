// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BattleGroundInfo.proto

#ifndef PROTOBUF_BattleGroundInfo_2eproto__INCLUDED
#define PROTOBUF_BattleGroundInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Base.pb.h"
#include "AllPacketEnum.pb.h"
#include "BattleInfo.pb.h"
#include "ActorBasicInfo.pb.h"
#include "PlayerBasicInfo.pb.h"
#include "ItemAndEquip.pb.h"
// @@protoc_insertion_point(includes)

namespace Packet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BattleGroundInfo_2eproto();
void protobuf_AssignDesc_BattleGroundInfo_2eproto();
void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

class PlayerStartHook;
class PlayerEndHook;
class ChangeHookInfo;
class ChallengeBossReq;
class ConstantChallengeBoss;
class CancleChallengeBoss;
class RushRewardNotify;
class EnterBattleGroundReply;
class PlayerReachBattlePos;
class BattleGroundOverNotify;
class BattleStartNotify;
class RefreshBattleGround;
class BattleGroundBrief;
class ExitBattleGround;
class BattleGroundInfo;
class ActorBattleInfo;
class NewActorCreated;
class ActorDismiss;
class SetControlType;
class UpdateFollowState;
class ClientActorMove;
class ClientActorStop;
class ClientActorUseSkill;

// ===================================================================

class PlayerStartHook : public ::google::protobuf::Message {
 public:
  PlayerStartHook();
  virtual ~PlayerStartHook();

  PlayerStartHook(const PlayerStartHook& from);

  inline PlayerStartHook& operator=(const PlayerStartHook& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerStartHook& default_instance();

  void Swap(PlayerStartHook* other);

  // implements Message ----------------------------------------------

  PlayerStartHook* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerStartHook& from);
  void MergeFrom(const PlayerStartHook& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 stage_id = 1;
  inline bool has_stage_id() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 1;
  inline ::google::protobuf::int32 stage_id() const;
  inline void set_stage_id(::google::protobuf::int32 value);

  // required int32 battle_group_id = 2;
  inline bool has_battle_group_id() const;
  inline void clear_battle_group_id();
  static const int kBattleGroupIdFieldNumber = 2;
  inline ::google::protobuf::int32 battle_group_id() const;
  inline void set_battle_group_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.PlayerStartHook)
 private:
  inline void set_has_stage_id();
  inline void clear_has_stage_id();
  inline void set_has_battle_group_id();
  inline void clear_has_battle_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 stage_id_;
  ::google::protobuf::int32 battle_group_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static PlayerStartHook* default_instance_;
};
// -------------------------------------------------------------------

class PlayerEndHook : public ::google::protobuf::Message {
 public:
  PlayerEndHook();
  virtual ~PlayerEndHook();

  PlayerEndHook(const PlayerEndHook& from);

  inline PlayerEndHook& operator=(const PlayerEndHook& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerEndHook& default_instance();

  void Swap(PlayerEndHook* other);

  // implements Message ----------------------------------------------

  PlayerEndHook* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerEndHook& from);
  void MergeFrom(const PlayerEndHook& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.PlayerEndHook)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static PlayerEndHook* default_instance_;
};
// -------------------------------------------------------------------

class ChangeHookInfo : public ::google::protobuf::Message {
 public:
  ChangeHookInfo();
  virtual ~ChangeHookInfo();

  ChangeHookInfo(const ChangeHookInfo& from);

  inline ChangeHookInfo& operator=(const ChangeHookInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeHookInfo& default_instance();

  void Swap(ChangeHookInfo* other);

  // implements Message ----------------------------------------------

  ChangeHookInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeHookInfo& from);
  void MergeFrom(const ChangeHookInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.HookOption hook_option = 1;
  inline bool has_hook_option() const;
  inline void clear_hook_option();
  static const int kHookOptionFieldNumber = 1;
  inline const ::Packet::HookOption& hook_option() const;
  inline ::Packet::HookOption* mutable_hook_option();
  inline ::Packet::HookOption* release_hook_option();
  inline void set_allocated_hook_option(::Packet::HookOption* hook_option);

  // @@protoc_insertion_point(class_scope:Packet.ChangeHookInfo)
 private:
  inline void set_has_hook_option();
  inline void clear_has_hook_option();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::HookOption* hook_option_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static ChangeHookInfo* default_instance_;
};
// -------------------------------------------------------------------

class ChallengeBossReq : public ::google::protobuf::Message {
 public:
  ChallengeBossReq();
  virtual ~ChallengeBossReq();

  ChallengeBossReq(const ChallengeBossReq& from);

  inline ChallengeBossReq& operator=(const ChallengeBossReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChallengeBossReq& default_instance();

  void Swap(ChallengeBossReq* other);

  // implements Message ----------------------------------------------

  ChallengeBossReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChallengeBossReq& from);
  void MergeFrom(const ChallengeBossReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 scene_stage_id = 1;
  inline bool has_scene_stage_id() const;
  inline void clear_scene_stage_id();
  static const int kSceneStageIdFieldNumber = 1;
  inline ::google::protobuf::int32 scene_stage_id() const;
  inline void set_scene_stage_id(::google::protobuf::int32 value);

  // required bool rush = 2;
  inline bool has_rush() const;
  inline void clear_rush();
  static const int kRushFieldNumber = 2;
  inline bool rush() const;
  inline void set_rush(bool value);

  // optional int32 rush_count = 3;
  inline bool has_rush_count() const;
  inline void clear_rush_count();
  static const int kRushCountFieldNumber = 3;
  inline ::google::protobuf::int32 rush_count() const;
  inline void set_rush_count(::google::protobuf::int32 value);

  // optional int32 battle_group_id = 4;
  inline bool has_battle_group_id() const;
  inline void clear_battle_group_id();
  static const int kBattleGroupIdFieldNumber = 4;
  inline ::google::protobuf::int32 battle_group_id() const;
  inline void set_battle_group_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.ChallengeBossReq)
 private:
  inline void set_has_scene_stage_id();
  inline void clear_has_scene_stage_id();
  inline void set_has_rush();
  inline void clear_has_rush();
  inline void set_has_rush_count();
  inline void clear_has_rush_count();
  inline void set_has_battle_group_id();
  inline void clear_has_battle_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 scene_stage_id_;
  bool rush_;
  ::google::protobuf::int32 rush_count_;
  ::google::protobuf::int32 battle_group_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static ChallengeBossReq* default_instance_;
};
// -------------------------------------------------------------------

class ConstantChallengeBoss : public ::google::protobuf::Message {
 public:
  ConstantChallengeBoss();
  virtual ~ConstantChallengeBoss();

  ConstantChallengeBoss(const ConstantChallengeBoss& from);

  inline ConstantChallengeBoss& operator=(const ConstantChallengeBoss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConstantChallengeBoss& default_instance();

  void Swap(ConstantChallengeBoss* other);

  // implements Message ----------------------------------------------

  ConstantChallengeBoss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConstantChallengeBoss& from);
  void MergeFrom(const ConstantChallengeBoss& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline bool status() const;
  inline void set_status(bool value);

  // required int32 stage_id = 2;
  inline bool has_stage_id() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 2;
  inline ::google::protobuf::int32 stage_id() const;
  inline void set_stage_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.ConstantChallengeBoss)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_stage_id();
  inline void clear_has_stage_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool status_;
  ::google::protobuf::int32 stage_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static ConstantChallengeBoss* default_instance_;
};
// -------------------------------------------------------------------

class CancleChallengeBoss : public ::google::protobuf::Message {
 public:
  CancleChallengeBoss();
  virtual ~CancleChallengeBoss();

  CancleChallengeBoss(const CancleChallengeBoss& from);

  inline CancleChallengeBoss& operator=(const CancleChallengeBoss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CancleChallengeBoss& default_instance();

  void Swap(CancleChallengeBoss* other);

  // implements Message ----------------------------------------------

  CancleChallengeBoss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CancleChallengeBoss& from);
  void MergeFrom(const CancleChallengeBoss& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 stage_id = 1;
  inline bool has_stage_id() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 1;
  inline ::google::protobuf::int32 stage_id() const;
  inline void set_stage_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.CancleChallengeBoss)
 private:
  inline void set_has_stage_id();
  inline void clear_has_stage_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 stage_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static CancleChallengeBoss* default_instance_;
};
// -------------------------------------------------------------------

class RushRewardNotify : public ::google::protobuf::Message {
 public:
  RushRewardNotify();
  virtual ~RushRewardNotify();

  RushRewardNotify(const RushRewardNotify& from);

  inline RushRewardNotify& operator=(const RushRewardNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RushRewardNotify& default_instance();

  void Swap(RushRewardNotify* other);

  // implements Message ----------------------------------------------

  RushRewardNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RushRewardNotify& from);
  void MergeFrom(const RushRewardNotify& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.NotifyItemList list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::Packet::NotifyItemList& list(int index) const;
  inline ::Packet::NotifyItemList* mutable_list(int index);
  inline ::Packet::NotifyItemList* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::NotifyItemList >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::NotifyItemList >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:Packet.RushRewardNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::NotifyItemList > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static RushRewardNotify* default_instance_;
};
// -------------------------------------------------------------------

class EnterBattleGroundReply : public ::google::protobuf::Message {
 public:
  EnterBattleGroundReply();
  virtual ~EnterBattleGroundReply();

  EnterBattleGroundReply(const EnterBattleGroundReply& from);

  inline EnterBattleGroundReply& operator=(const EnterBattleGroundReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterBattleGroundReply& default_instance();

  void Swap(EnterBattleGroundReply* other);

  // implements Message ----------------------------------------------

  EnterBattleGroundReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterBattleGroundReply& from);
  void MergeFrom(const EnterBattleGroundReply& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Packet.BattleGroundBrief brief = 1;
  inline bool has_brief() const;
  inline void clear_brief();
  static const int kBriefFieldNumber = 1;
  inline const ::Packet::BattleGroundBrief& brief() const;
  inline ::Packet::BattleGroundBrief* mutable_brief();
  inline ::Packet::BattleGroundBrief* release_brief();
  inline void set_allocated_brief(::Packet::BattleGroundBrief* brief);

  // optional .Packet.BattleGroundInfo info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::Packet::BattleGroundInfo& info() const;
  inline ::Packet::BattleGroundInfo* mutable_info();
  inline ::Packet::BattleGroundInfo* release_info();
  inline void set_allocated_info(::Packet::BattleGroundInfo* info);

  // @@protoc_insertion_point(class_scope:Packet.EnterBattleGroundReply)
 private:
  inline void set_has_brief();
  inline void clear_has_brief();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::BattleGroundBrief* brief_;
  ::Packet::BattleGroundInfo* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static EnterBattleGroundReply* default_instance_;
};
// -------------------------------------------------------------------

class PlayerReachBattlePos : public ::google::protobuf::Message {
 public:
  PlayerReachBattlePos();
  virtual ~PlayerReachBattlePos();

  PlayerReachBattlePos(const PlayerReachBattlePos& from);

  inline PlayerReachBattlePos& operator=(const PlayerReachBattlePos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerReachBattlePos& default_instance();

  void Swap(PlayerReachBattlePos* other);

  // implements Message ----------------------------------------------

  PlayerReachBattlePos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerReachBattlePos& from);
  void MergeFrom(const PlayerReachBattlePos& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 battle_ground_guid = 1;
  inline bool has_battle_ground_guid() const;
  inline void clear_battle_ground_guid();
  static const int kBattleGroundGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 battle_ground_guid() const;
  inline void set_battle_ground_guid(::google::protobuf::uint64 value);

  // repeated fixed64 guids = 2;
  inline int guids_size() const;
  inline void clear_guids();
  static const int kGuidsFieldNumber = 2;
  inline ::google::protobuf::uint64 guids(int index) const;
  inline void set_guids(int index, ::google::protobuf::uint64 value);
  inline void add_guids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guids();

  // repeated .Packet.Position positions = 3;
  inline int positions_size() const;
  inline void clear_positions();
  static const int kPositionsFieldNumber = 3;
  inline const ::Packet::Position& positions(int index) const;
  inline ::Packet::Position* mutable_positions(int index);
  inline ::Packet::Position* add_positions();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::Position >&
      positions() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::Position >*
      mutable_positions();

  // @@protoc_insertion_point(class_scope:Packet.PlayerReachBattlePos)
 private:
  inline void set_has_battle_ground_guid();
  inline void clear_has_battle_ground_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 battle_ground_guid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guids_;
  ::google::protobuf::RepeatedPtrField< ::Packet::Position > positions_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static PlayerReachBattlePos* default_instance_;
};
// -------------------------------------------------------------------

class BattleGroundOverNotify : public ::google::protobuf::Message {
 public:
  BattleGroundOverNotify();
  virtual ~BattleGroundOverNotify();

  BattleGroundOverNotify(const BattleGroundOverNotify& from);

  inline BattleGroundOverNotify& operator=(const BattleGroundOverNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleGroundOverNotify& default_instance();

  void Swap(BattleGroundOverNotify* other);

  // implements Message ----------------------------------------------

  BattleGroundOverNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleGroundOverNotify& from);
  void MergeFrom(const BattleGroundOverNotify& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.BattleGroundBrief brief = 1;
  inline bool has_brief() const;
  inline void clear_brief();
  static const int kBriefFieldNumber = 1;
  inline const ::Packet::BattleGroundBrief& brief() const;
  inline ::Packet::BattleGroundBrief* mutable_brief();
  inline ::Packet::BattleGroundBrief* release_brief();
  inline void set_allocated_brief(::Packet::BattleGroundBrief* brief);

  // required int32 winner_camp = 2;
  inline bool has_winner_camp() const;
  inline void clear_winner_camp();
  static const int kWinnerCampFieldNumber = 2;
  inline ::google::protobuf::int32 winner_camp() const;
  inline void set_winner_camp(::google::protobuf::int32 value);

  // required fixed64 time_stamp = 3;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 3;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // optional fixed64 wait_millsec = 4;
  inline bool has_wait_millsec() const;
  inline void clear_wait_millsec();
  static const int kWaitMillsecFieldNumber = 4;
  inline ::google::protobuf::uint64 wait_millsec() const;
  inline void set_wait_millsec(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.BattleGroundOverNotify)
 private:
  inline void set_has_brief();
  inline void clear_has_brief();
  inline void set_has_winner_camp();
  inline void clear_has_winner_camp();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();
  inline void set_has_wait_millsec();
  inline void clear_has_wait_millsec();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::BattleGroundBrief* brief_;
  ::google::protobuf::uint64 time_stamp_;
  ::google::protobuf::uint64 wait_millsec_;
  ::google::protobuf::int32 winner_camp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static BattleGroundOverNotify* default_instance_;
};
// -------------------------------------------------------------------

class BattleStartNotify : public ::google::protobuf::Message {
 public:
  BattleStartNotify();
  virtual ~BattleStartNotify();

  BattleStartNotify(const BattleStartNotify& from);

  inline BattleStartNotify& operator=(const BattleStartNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleStartNotify& default_instance();

  void Swap(BattleStartNotify* other);

  // implements Message ----------------------------------------------

  BattleStartNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleStartNotify& from);
  void MergeFrom(const BattleStartNotify& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.BattleGroundBrief brief = 1;
  inline bool has_brief() const;
  inline void clear_brief();
  static const int kBriefFieldNumber = 1;
  inline const ::Packet::BattleGroundBrief& brief() const;
  inline ::Packet::BattleGroundBrief* mutable_brief();
  inline ::Packet::BattleGroundBrief* release_brief();
  inline void set_allocated_brief(::Packet::BattleGroundBrief* brief);

  // @@protoc_insertion_point(class_scope:Packet.BattleStartNotify)
 private:
  inline void set_has_brief();
  inline void clear_has_brief();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::BattleGroundBrief* brief_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static BattleStartNotify* default_instance_;
};
// -------------------------------------------------------------------

class RefreshBattleGround : public ::google::protobuf::Message {
 public:
  RefreshBattleGround();
  virtual ~RefreshBattleGround();

  RefreshBattleGround(const RefreshBattleGround& from);

  inline RefreshBattleGround& operator=(const RefreshBattleGround& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshBattleGround& default_instance();

  void Swap(RefreshBattleGround* other);

  // implements Message ----------------------------------------------

  RefreshBattleGround* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshBattleGround& from);
  void MergeFrom(const RefreshBattleGround& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.BattleGroundBrief brief = 1;
  inline bool has_brief() const;
  inline void clear_brief();
  static const int kBriefFieldNumber = 1;
  inline const ::Packet::BattleGroundBrief& brief() const;
  inline ::Packet::BattleGroundBrief* mutable_brief();
  inline ::Packet::BattleGroundBrief* release_brief();
  inline void set_allocated_brief(::Packet::BattleGroundBrief* brief);

  // required .Packet.BattleGroundInfo new_info = 2;
  inline bool has_new_info() const;
  inline void clear_new_info();
  static const int kNewInfoFieldNumber = 2;
  inline const ::Packet::BattleGroundInfo& new_info() const;
  inline ::Packet::BattleGroundInfo* mutable_new_info();
  inline ::Packet::BattleGroundInfo* release_new_info();
  inline void set_allocated_new_info(::Packet::BattleGroundInfo* new_info);

  // required fixed64 time_stamp = 3;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 3;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.RefreshBattleGround)
 private:
  inline void set_has_brief();
  inline void clear_has_brief();
  inline void set_has_new_info();
  inline void clear_has_new_info();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::BattleGroundBrief* brief_;
  ::Packet::BattleGroundInfo* new_info_;
  ::google::protobuf::uint64 time_stamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static RefreshBattleGround* default_instance_;
};
// -------------------------------------------------------------------

class BattleGroundBrief : public ::google::protobuf::Message {
 public:
  BattleGroundBrief();
  virtual ~BattleGroundBrief();

  BattleGroundBrief(const BattleGroundBrief& from);

  inline BattleGroundBrief& operator=(const BattleGroundBrief& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleGroundBrief& default_instance();

  void Swap(BattleGroundBrief* other);

  // implements Message ----------------------------------------------

  BattleGroundBrief* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleGroundBrief& from);
  void MergeFrom(const BattleGroundBrief& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required .Packet.BattleGroundType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::Packet::BattleGroundType type() const;
  inline void set_type(::Packet::BattleGroundType value);

  // required fixed64 elapse_time = 3;
  inline bool has_elapse_time() const;
  inline void clear_elapse_time();
  static const int kElapseTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 elapse_time() const;
  inline void set_elapse_time(::google::protobuf::uint64 value);

  // required int32 scene_id = 4;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 4;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);

  // optional int32 stage_id = 5;
  inline bool has_stage_id() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 5;
  inline ::google::protobuf::int32 stage_id() const;
  inline void set_stage_id(::google::protobuf::int32 value);

  // required int32 battle_group_id = 6;
  inline bool has_battle_group_id() const;
  inline void clear_battle_group_id();
  static const int kBattleGroupIdFieldNumber = 6;
  inline ::google::protobuf::int32 battle_group_id() const;
  inline void set_battle_group_id(::google::protobuf::int32 value);

  // required bool can_manual_control = 7;
  inline bool has_can_manual_control() const;
  inline void clear_can_manual_control();
  static const int kCanManualControlFieldNumber = 7;
  inline bool can_manual_control() const;
  inline void set_can_manual_control(bool value);

  // optional int32 mission_id = 8;
  inline bool has_mission_id() const;
  inline void clear_mission_id();
  static const int kMissionIdFieldNumber = 8;
  inline ::google::protobuf::int32 mission_id() const;
  inline void set_mission_id(::google::protobuf::int32 value);

  // optional fixed64 time_out = 9;
  inline bool has_time_out() const;
  inline void clear_time_out();
  static const int kTimeOutFieldNumber = 9;
  inline ::google::protobuf::uint64 time_out() const;
  inline void set_time_out(::google::protobuf::uint64 value);

  // optional fixed64 fight_time = 10;
  inline bool has_fight_time() const;
  inline void clear_fight_time();
  static const int kFightTimeFieldNumber = 10;
  inline ::google::protobuf::uint64 fight_time() const;
  inline void set_fight_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.BattleGroundBrief)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_elapse_time();
  inline void clear_has_elapse_time();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_stage_id();
  inline void clear_has_stage_id();
  inline void set_has_battle_group_id();
  inline void clear_has_battle_group_id();
  inline void set_has_can_manual_control();
  inline void clear_has_can_manual_control();
  inline void set_has_mission_id();
  inline void clear_has_mission_id();
  inline void set_has_time_out();
  inline void clear_has_time_out();
  inline void set_has_fight_time();
  inline void clear_has_fight_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 elapse_time_;
  int type_;
  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::int32 stage_id_;
  ::google::protobuf::int32 battle_group_id_;
  bool can_manual_control_;
  ::google::protobuf::int32 mission_id_;
  ::google::protobuf::uint64 time_out_;
  ::google::protobuf::uint64 fight_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static BattleGroundBrief* default_instance_;
};
// -------------------------------------------------------------------

class ExitBattleGround : public ::google::protobuf::Message {
 public:
  ExitBattleGround();
  virtual ~ExitBattleGround();

  ExitBattleGround(const ExitBattleGround& from);

  inline ExitBattleGround& operator=(const ExitBattleGround& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitBattleGround& default_instance();

  void Swap(ExitBattleGround* other);

  // implements Message ----------------------------------------------

  ExitBattleGround* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExitBattleGround& from);
  void MergeFrom(const ExitBattleGround& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.ExitBattleGround)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static ExitBattleGround* default_instance_;
};
// -------------------------------------------------------------------

class BattleGroundInfo : public ::google::protobuf::Message {
 public:
  BattleGroundInfo();
  virtual ~BattleGroundInfo();

  BattleGroundInfo(const BattleGroundInfo& from);

  inline BattleGroundInfo& operator=(const BattleGroundInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleGroundInfo& default_instance();

  void Swap(BattleGroundInfo* other);

  // implements Message ----------------------------------------------

  BattleGroundInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleGroundInfo& from);
  void MergeFrom(const BattleGroundInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.BattleGroundBrief brief = 1;
  inline bool has_brief() const;
  inline void clear_brief();
  static const int kBriefFieldNumber = 1;
  inline const ::Packet::BattleGroundBrief& brief() const;
  inline ::Packet::BattleGroundBrief* mutable_brief();
  inline ::Packet::BattleGroundBrief* release_brief();
  inline void set_allocated_brief(::Packet::BattleGroundBrief* brief);

  // repeated .Packet.ActorBattleInfo attackers = 2;
  inline int attackers_size() const;
  inline void clear_attackers();
  static const int kAttackersFieldNumber = 2;
  inline const ::Packet::ActorBattleInfo& attackers(int index) const;
  inline ::Packet::ActorBattleInfo* mutable_attackers(int index);
  inline ::Packet::ActorBattleInfo* add_attackers();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo >&
      attackers() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo >*
      mutable_attackers();

  // repeated .Packet.ActorBattleInfo defenders = 3;
  inline int defenders_size() const;
  inline void clear_defenders();
  static const int kDefendersFieldNumber = 3;
  inline const ::Packet::ActorBattleInfo& defenders(int index) const;
  inline ::Packet::ActorBattleInfo* mutable_defenders(int index);
  inline ::Packet::ActorBattleInfo* add_defenders();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo >&
      defenders() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo >*
      mutable_defenders();

  // @@protoc_insertion_point(class_scope:Packet.BattleGroundInfo)
 private:
  inline void set_has_brief();
  inline void clear_has_brief();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::BattleGroundBrief* brief_;
  ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo > attackers_;
  ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo > defenders_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static BattleGroundInfo* default_instance_;
};
// -------------------------------------------------------------------

class ActorBattleInfo : public ::google::protobuf::Message {
 public:
  ActorBattleInfo();
  virtual ~ActorBattleInfo();

  ActorBattleInfo(const ActorBattleInfo& from);

  inline ActorBattleInfo& operator=(const ActorBattleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorBattleInfo& default_instance();

  void Swap(ActorBattleInfo* other);

  // implements Message ----------------------------------------------

  ActorBattleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorBattleInfo& from);
  void MergeFrom(const ActorBattleInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.ActorBasicInfo base_info = 1;
  inline bool has_base_info() const;
  inline void clear_base_info();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::Packet::ActorBasicInfo& base_info() const;
  inline ::Packet::ActorBasicInfo* mutable_base_info();
  inline ::Packet::ActorBasicInfo* release_base_info();
  inline void set_allocated_base_info(::Packet::ActorBasicInfo* base_info);

  // required .Packet.BattleInfo battle_info = 2;
  inline bool has_battle_info() const;
  inline void clear_battle_info();
  static const int kBattleInfoFieldNumber = 2;
  inline const ::Packet::BattleInfo& battle_info() const;
  inline ::Packet::BattleInfo* mutable_battle_info();
  inline ::Packet::BattleInfo* release_battle_info();
  inline void set_allocated_battle_info(::Packet::BattleInfo* battle_info);

  // required .Packet.Position positon = 3;
  inline bool has_positon() const;
  inline void clear_positon();
  static const int kPositonFieldNumber = 3;
  inline const ::Packet::Position& positon() const;
  inline ::Packet::Position* mutable_positon();
  inline ::Packet::Position* release_positon();
  inline void set_allocated_positon(::Packet::Position* positon);

  // required double direction = 4;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 4;
  inline double direction() const;
  inline void set_direction(double value);

  // required .Packet.ActorStateType state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline ::Packet::ActorStateType state() const;
  inline void set_state(::Packet::ActorStateType value);

  // optional int32 monster_config_id = 6;
  inline bool has_monster_config_id() const;
  inline void clear_monster_config_id();
  static const int kMonsterConfigIdFieldNumber = 6;
  inline ::google::protobuf::int32 monster_config_id() const;
  inline void set_monster_config_id(::google::protobuf::int32 value);

  // required int32 object_radius = 7;
  inline bool has_object_radius() const;
  inline void clear_object_radius();
  static const int kObjectRadiusFieldNumber = 7;
  inline ::google::protobuf::int32 object_radius() const;
  inline void set_object_radius(::google::protobuf::int32 value);

  // required int32 position_index = 8;
  inline bool has_position_index() const;
  inline void clear_position_index();
  static const int kPositionIndexFieldNumber = 8;
  inline ::google::protobuf::int32 position_index() const;
  inline void set_position_index(::google::protobuf::int32 value);

  // repeated .Packet.EquipItem equips = 9;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 9;
  inline const ::Packet::EquipItem& equips(int index) const;
  inline ::Packet::EquipItem* mutable_equips(int index);
  inline ::Packet::EquipItem* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::EquipItem >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::EquipItem >*
      mutable_equips();

  // required int32 side = 10;
  inline bool has_side() const;
  inline void clear_side();
  static const int kSideFieldNumber = 10;
  inline ::google::protobuf::int32 side() const;
  inline void set_side(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorBattleInfo)
 private:
  inline void set_has_base_info();
  inline void clear_has_base_info();
  inline void set_has_battle_info();
  inline void clear_has_battle_info();
  inline void set_has_positon();
  inline void clear_has_positon();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_monster_config_id();
  inline void clear_has_monster_config_id();
  inline void set_has_object_radius();
  inline void clear_has_object_radius();
  inline void set_has_position_index();
  inline void clear_has_position_index();
  inline void set_has_side();
  inline void clear_has_side();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::ActorBasicInfo* base_info_;
  ::Packet::BattleInfo* battle_info_;
  ::Packet::Position* positon_;
  double direction_;
  int state_;
  ::google::protobuf::int32 monster_config_id_;
  ::google::protobuf::int32 object_radius_;
  ::google::protobuf::int32 position_index_;
  ::google::protobuf::RepeatedPtrField< ::Packet::EquipItem > equips_;
  ::google::protobuf::int32 side_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static ActorBattleInfo* default_instance_;
};
// -------------------------------------------------------------------

class NewActorCreated : public ::google::protobuf::Message {
 public:
  NewActorCreated();
  virtual ~NewActorCreated();

  NewActorCreated(const NewActorCreated& from);

  inline NewActorCreated& operator=(const NewActorCreated& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewActorCreated& default_instance();

  void Swap(NewActorCreated* other);

  // implements Message ----------------------------------------------

  NewActorCreated* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewActorCreated& from);
  void MergeFrom(const NewActorCreated& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 creator_guid = 1;
  inline bool has_creator_guid() const;
  inline void clear_creator_guid();
  static const int kCreatorGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 creator_guid() const;
  inline void set_creator_guid(::google::protobuf::uint64 value);

  // optional int32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // repeated .Packet.ActorBattleInfo attackers = 3;
  inline int attackers_size() const;
  inline void clear_attackers();
  static const int kAttackersFieldNumber = 3;
  inline const ::Packet::ActorBattleInfo& attackers(int index) const;
  inline ::Packet::ActorBattleInfo* mutable_attackers(int index);
  inline ::Packet::ActorBattleInfo* add_attackers();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo >&
      attackers() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo >*
      mutable_attackers();

  // repeated .Packet.ActorBattleInfo defenders = 4;
  inline int defenders_size() const;
  inline void clear_defenders();
  static const int kDefendersFieldNumber = 4;
  inline const ::Packet::ActorBattleInfo& defenders(int index) const;
  inline ::Packet::ActorBattleInfo* mutable_defenders(int index);
  inline ::Packet::ActorBattleInfo* add_defenders();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo >&
      defenders() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo >*
      mutable_defenders();

  // required fixed64 time_stamp = 5;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 5;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.NewActorCreated)
 private:
  inline void set_has_creator_guid();
  inline void clear_has_creator_guid();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 creator_guid_;
  ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo > attackers_;
  ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo > defenders_;
  ::google::protobuf::uint64 time_stamp_;
  ::google::protobuf::int32 skill_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static NewActorCreated* default_instance_;
};
// -------------------------------------------------------------------

class ActorDismiss : public ::google::protobuf::Message {
 public:
  ActorDismiss();
  virtual ~ActorDismiss();

  ActorDismiss(const ActorDismiss& from);

  inline ActorDismiss& operator=(const ActorDismiss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorDismiss& default_instance();

  void Swap(ActorDismiss* other);

  // implements Message ----------------------------------------------

  ActorDismiss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorDismiss& from);
  void MergeFrom(const ActorDismiss& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required fixed64 time_stamp = 2;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 2;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorDismiss)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 time_stamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static ActorDismiss* default_instance_;
};
// -------------------------------------------------------------------

class SetControlType : public ::google::protobuf::Message {
 public:
  SetControlType();
  virtual ~SetControlType();

  SetControlType(const SetControlType& from);

  inline SetControlType& operator=(const SetControlType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetControlType& default_instance();

  void Swap(SetControlType* other);

  // implements Message ----------------------------------------------

  SetControlType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetControlType& from);
  void MergeFrom(const SetControlType& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.ActorControlType contral_type = 1;
  inline bool has_contral_type() const;
  inline void clear_contral_type();
  static const int kContralTypeFieldNumber = 1;
  inline ::Packet::ActorControlType contral_type() const;
  inline void set_contral_type(::Packet::ActorControlType value);

  // @@protoc_insertion_point(class_scope:Packet.SetControlType)
 private:
  inline void set_has_contral_type();
  inline void clear_has_contral_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int contral_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static SetControlType* default_instance_;
};
// -------------------------------------------------------------------

class UpdateFollowState : public ::google::protobuf::Message {
 public:
  UpdateFollowState();
  virtual ~UpdateFollowState();

  UpdateFollowState(const UpdateFollowState& from);

  inline UpdateFollowState& operator=(const UpdateFollowState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateFollowState& default_instance();

  void Swap(UpdateFollowState* other);

  // implements Message ----------------------------------------------

  UpdateFollowState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateFollowState& from);
  void MergeFrom(const UpdateFollowState& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool follow = 1;
  inline bool has_follow() const;
  inline void clear_follow();
  static const int kFollowFieldNumber = 1;
  inline bool follow() const;
  inline void set_follow(bool value);

  // @@protoc_insertion_point(class_scope:Packet.UpdateFollowState)
 private:
  inline void set_has_follow();
  inline void clear_has_follow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool follow_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static UpdateFollowState* default_instance_;
};
// -------------------------------------------------------------------

class ClientActorMove : public ::google::protobuf::Message {
 public:
  ClientActorMove();
  virtual ~ClientActorMove();

  ClientActorMove(const ClientActorMove& from);

  inline ClientActorMove& operator=(const ClientActorMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientActorMove& default_instance();

  void Swap(ClientActorMove* other);

  // implements Message ----------------------------------------------

  ClientActorMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientActorMove& from);
  void MergeFrom(const ClientActorMove& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required float direction = 2;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 2;
  inline float direction() const;
  inline void set_direction(float value);

  // required fixed32 move_speed = 3;
  inline bool has_move_speed() const;
  inline void clear_move_speed();
  static const int kMoveSpeedFieldNumber = 3;
  inline ::google::protobuf::uint32 move_speed() const;
  inline void set_move_speed(::google::protobuf::uint32 value);

  // required .Packet.Position old_pos = 4;
  inline bool has_old_pos() const;
  inline void clear_old_pos();
  static const int kOldPosFieldNumber = 4;
  inline const ::Packet::Position& old_pos() const;
  inline ::Packet::Position* mutable_old_pos();
  inline ::Packet::Position* release_old_pos();
  inline void set_allocated_old_pos(::Packet::Position* old_pos);

  // required .Packet.Position new_pos = 5;
  inline bool has_new_pos() const;
  inline void clear_new_pos();
  static const int kNewPosFieldNumber = 5;
  inline const ::Packet::Position& new_pos() const;
  inline ::Packet::Position* mutable_new_pos();
  inline ::Packet::Position* release_new_pos();
  inline void set_allocated_new_pos(::Packet::Position* new_pos);

  // @@protoc_insertion_point(class_scope:Packet.ClientActorMove)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_move_speed();
  inline void clear_has_move_speed();
  inline void set_has_old_pos();
  inline void clear_has_old_pos();
  inline void set_has_new_pos();
  inline void clear_has_new_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  float direction_;
  ::google::protobuf::uint32 move_speed_;
  ::Packet::Position* old_pos_;
  ::Packet::Position* new_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static ClientActorMove* default_instance_;
};
// -------------------------------------------------------------------

class ClientActorStop : public ::google::protobuf::Message {
 public:
  ClientActorStop();
  virtual ~ClientActorStop();

  ClientActorStop(const ClientActorStop& from);

  inline ClientActorStop& operator=(const ClientActorStop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientActorStop& default_instance();

  void Swap(ClientActorStop* other);

  // implements Message ----------------------------------------------

  ClientActorStop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientActorStop& from);
  void MergeFrom(const ClientActorStop& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required float direction = 3;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 3;
  inline float direction() const;
  inline void set_direction(float value);

  // required .Packet.Position stop_pos = 4;
  inline bool has_stop_pos() const;
  inline void clear_stop_pos();
  static const int kStopPosFieldNumber = 4;
  inline const ::Packet::Position& stop_pos() const;
  inline ::Packet::Position* mutable_stop_pos();
  inline ::Packet::Position* release_stop_pos();
  inline void set_allocated_stop_pos(::Packet::Position* stop_pos);

  // @@protoc_insertion_point(class_scope:Packet.ClientActorStop)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_stop_pos();
  inline void clear_has_stop_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::Packet::Position* stop_pos_;
  float direction_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static ClientActorStop* default_instance_;
};
// -------------------------------------------------------------------

class ClientActorUseSkill : public ::google::protobuf::Message {
 public:
  ClientActorUseSkill();
  virtual ~ClientActorUseSkill();

  ClientActorUseSkill(const ClientActorUseSkill& from);

  inline ClientActorUseSkill& operator=(const ClientActorUseSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientActorUseSkill& default_instance();

  void Swap(ClientActorUseSkill* other);

  // implements Message ----------------------------------------------

  ClientActorUseSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientActorUseSkill& from);
  void MergeFrom(const ClientActorUseSkill& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required int32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // repeated fixed64 target_guids = 3;
  inline int target_guids_size() const;
  inline void clear_target_guids();
  static const int kTargetGuidsFieldNumber = 3;
  inline ::google::protobuf::uint64 target_guids(int index) const;
  inline void set_target_guids(int index, ::google::protobuf::uint64 value);
  inline void add_target_guids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      target_guids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_target_guids();

  // optional fixed64 other_guids = 4;
  inline bool has_other_guids() const;
  inline void clear_other_guids();
  static const int kOtherGuidsFieldNumber = 4;
  inline ::google::protobuf::uint64 other_guids() const;
  inline void set_other_guids(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.ClientActorUseSkill)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_other_guids();
  inline void clear_has_other_guids();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > target_guids_;
  ::google::protobuf::uint64 other_guids_;
  ::google::protobuf::int32 skill_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_BattleGroundInfo_2eproto();
  friend void protobuf_AssignDesc_BattleGroundInfo_2eproto();
  friend void protobuf_ShutdownFile_BattleGroundInfo_2eproto();

  void InitAsDefaultInstance();
  static ClientActorUseSkill* default_instance_;
};
// ===================================================================


// ===================================================================

// PlayerStartHook

// required int32 stage_id = 1;
inline bool PlayerStartHook::has_stage_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerStartHook::set_has_stage_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerStartHook::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerStartHook::clear_stage_id() {
  stage_id_ = 0;
  clear_has_stage_id();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerStartHook::stage_id() const {
  return stage_id_;
}
inline void PlayerStartHook::set_stage_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_stage_id();
  stage_id_ = value;
}

// required int32 battle_group_id = 2;
inline bool PlayerStartHook::has_battle_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerStartHook::set_has_battle_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerStartHook::clear_has_battle_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerStartHook::clear_battle_group_id() {
  battle_group_id_ = 0;
  clear_has_battle_group_id();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerStartHook::battle_group_id() const {
  return battle_group_id_;
}
inline void PlayerStartHook::set_battle_group_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_battle_group_id();
  battle_group_id_ = value;
}

// -------------------------------------------------------------------

// PlayerEndHook

// -------------------------------------------------------------------

// ChangeHookInfo

// required .Packet.HookOption hook_option = 1;
inline bool ChangeHookInfo::has_hook_option() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeHookInfo::set_has_hook_option() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeHookInfo::clear_has_hook_option() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeHookInfo::clear_hook_option() {
  if (hook_option_ != NULL) hook_option_->::Packet::HookOption::Clear();
  clear_has_hook_option();
  SetDirty();
}
inline const ::Packet::HookOption& ChangeHookInfo::hook_option() const {
  return hook_option_ != NULL ? *hook_option_ : *default_instance_->hook_option_;
}
inline ::Packet::HookOption* ChangeHookInfo::mutable_hook_option() {
  SetDirty();
  set_has_hook_option();
  if (hook_option_ == NULL) hook_option_ = new ::Packet::HookOption;
  return hook_option_;
}
inline ::Packet::HookOption* ChangeHookInfo::release_hook_option() {
  SetDirty();
  clear_has_hook_option();
  ::Packet::HookOption* temp = hook_option_;
  hook_option_ = NULL;
  return temp;
}
inline void ChangeHookInfo::set_allocated_hook_option(::Packet::HookOption* hook_option) {
  SetDirty();
  delete hook_option_;
  hook_option_ = hook_option;
  if (hook_option) {
    set_has_hook_option();
  } else {
    clear_has_hook_option();
  }
}

// -------------------------------------------------------------------

// ChallengeBossReq

// required int32 scene_stage_id = 1;
inline bool ChallengeBossReq::has_scene_stage_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChallengeBossReq::set_has_scene_stage_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChallengeBossReq::clear_has_scene_stage_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChallengeBossReq::clear_scene_stage_id() {
  scene_stage_id_ = 0;
  clear_has_scene_stage_id();
  SetDirty();
}
inline ::google::protobuf::int32 ChallengeBossReq::scene_stage_id() const {
  return scene_stage_id_;
}
inline void ChallengeBossReq::set_scene_stage_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_scene_stage_id();
  scene_stage_id_ = value;
}

// required bool rush = 2;
inline bool ChallengeBossReq::has_rush() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChallengeBossReq::set_has_rush() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChallengeBossReq::clear_has_rush() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChallengeBossReq::clear_rush() {
  rush_ = false;
  clear_has_rush();
  SetDirty();
}
inline bool ChallengeBossReq::rush() const {
  return rush_;
}
inline void ChallengeBossReq::set_rush(bool value) {
  SetDirty();
  set_has_rush();
  rush_ = value;
}

// optional int32 rush_count = 3;
inline bool ChallengeBossReq::has_rush_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChallengeBossReq::set_has_rush_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChallengeBossReq::clear_has_rush_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChallengeBossReq::clear_rush_count() {
  rush_count_ = 0;
  clear_has_rush_count();
  SetDirty();
}
inline ::google::protobuf::int32 ChallengeBossReq::rush_count() const {
  return rush_count_;
}
inline void ChallengeBossReq::set_rush_count(::google::protobuf::int32 value) {
  SetDirty();
  set_has_rush_count();
  rush_count_ = value;
}

// optional int32 battle_group_id = 4;
inline bool ChallengeBossReq::has_battle_group_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChallengeBossReq::set_has_battle_group_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChallengeBossReq::clear_has_battle_group_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChallengeBossReq::clear_battle_group_id() {
  battle_group_id_ = 0;
  clear_has_battle_group_id();
  SetDirty();
}
inline ::google::protobuf::int32 ChallengeBossReq::battle_group_id() const {
  return battle_group_id_;
}
inline void ChallengeBossReq::set_battle_group_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_battle_group_id();
  battle_group_id_ = value;
}

// -------------------------------------------------------------------

// ConstantChallengeBoss

// required bool status = 1;
inline bool ConstantChallengeBoss::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConstantChallengeBoss::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConstantChallengeBoss::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConstantChallengeBoss::clear_status() {
  status_ = false;
  clear_has_status();
  SetDirty();
}
inline bool ConstantChallengeBoss::status() const {
  return status_;
}
inline void ConstantChallengeBoss::set_status(bool value) {
  SetDirty();
  set_has_status();
  status_ = value;
}

// required int32 stage_id = 2;
inline bool ConstantChallengeBoss::has_stage_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConstantChallengeBoss::set_has_stage_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConstantChallengeBoss::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConstantChallengeBoss::clear_stage_id() {
  stage_id_ = 0;
  clear_has_stage_id();
  SetDirty();
}
inline ::google::protobuf::int32 ConstantChallengeBoss::stage_id() const {
  return stage_id_;
}
inline void ConstantChallengeBoss::set_stage_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_stage_id();
  stage_id_ = value;
}

// -------------------------------------------------------------------

// CancleChallengeBoss

// required int32 stage_id = 1;
inline bool CancleChallengeBoss::has_stage_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CancleChallengeBoss::set_has_stage_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CancleChallengeBoss::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CancleChallengeBoss::clear_stage_id() {
  stage_id_ = 0;
  clear_has_stage_id();
  SetDirty();
}
inline ::google::protobuf::int32 CancleChallengeBoss::stage_id() const {
  return stage_id_;
}
inline void CancleChallengeBoss::set_stage_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_stage_id();
  stage_id_ = value;
}

// -------------------------------------------------------------------

// RushRewardNotify

// repeated .Packet.NotifyItemList list = 1;
inline int RushRewardNotify::list_size() const {
  return list_.size();
}
inline void RushRewardNotify::clear_list() {
  list_.Clear();
  SetDirty();
}
inline const ::Packet::NotifyItemList& RushRewardNotify::list(int index) const {
  return list_.Get(index);
}
inline ::Packet::NotifyItemList* RushRewardNotify::mutable_list(int index) {
  SetDirty();
  return list_.Mutable(index);
}
inline ::Packet::NotifyItemList* RushRewardNotify::add_list() {
  SetDirty();
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::NotifyItemList >&
RushRewardNotify::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::NotifyItemList >*
RushRewardNotify::mutable_list() {
  SetDirty();
  return &list_;
}

// -------------------------------------------------------------------

// EnterBattleGroundReply

// optional .Packet.BattleGroundBrief brief = 1;
inline bool EnterBattleGroundReply::has_brief() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterBattleGroundReply::set_has_brief() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterBattleGroundReply::clear_has_brief() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterBattleGroundReply::clear_brief() {
  if (brief_ != NULL) brief_->::Packet::BattleGroundBrief::Clear();
  clear_has_brief();
  SetDirty();
}
inline const ::Packet::BattleGroundBrief& EnterBattleGroundReply::brief() const {
  return brief_ != NULL ? *brief_ : *default_instance_->brief_;
}
inline ::Packet::BattleGroundBrief* EnterBattleGroundReply::mutable_brief() {
  SetDirty();
  set_has_brief();
  if (brief_ == NULL) brief_ = new ::Packet::BattleGroundBrief;
  return brief_;
}
inline ::Packet::BattleGroundBrief* EnterBattleGroundReply::release_brief() {
  SetDirty();
  clear_has_brief();
  ::Packet::BattleGroundBrief* temp = brief_;
  brief_ = NULL;
  return temp;
}
inline void EnterBattleGroundReply::set_allocated_brief(::Packet::BattleGroundBrief* brief) {
  SetDirty();
  delete brief_;
  brief_ = brief;
  if (brief) {
    set_has_brief();
  } else {
    clear_has_brief();
  }
}

// optional .Packet.BattleGroundInfo info = 2;
inline bool EnterBattleGroundReply::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterBattleGroundReply::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterBattleGroundReply::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterBattleGroundReply::clear_info() {
  if (info_ != NULL) info_->::Packet::BattleGroundInfo::Clear();
  clear_has_info();
  SetDirty();
}
inline const ::Packet::BattleGroundInfo& EnterBattleGroundReply::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Packet::BattleGroundInfo* EnterBattleGroundReply::mutable_info() {
  SetDirty();
  set_has_info();
  if (info_ == NULL) info_ = new ::Packet::BattleGroundInfo;
  return info_;
}
inline ::Packet::BattleGroundInfo* EnterBattleGroundReply::release_info() {
  SetDirty();
  clear_has_info();
  ::Packet::BattleGroundInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void EnterBattleGroundReply::set_allocated_info(::Packet::BattleGroundInfo* info) {
  SetDirty();
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// PlayerReachBattlePos

// required fixed64 battle_ground_guid = 1;
inline bool PlayerReachBattlePos::has_battle_ground_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerReachBattlePos::set_has_battle_ground_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerReachBattlePos::clear_has_battle_ground_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerReachBattlePos::clear_battle_ground_guid() {
  battle_ground_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_battle_ground_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 PlayerReachBattlePos::battle_ground_guid() const {
  return battle_ground_guid_;
}
inline void PlayerReachBattlePos::set_battle_ground_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_battle_ground_guid();
  battle_ground_guid_ = value;
}

// repeated fixed64 guids = 2;
inline int PlayerReachBattlePos::guids_size() const {
  return guids_.size();
}
inline void PlayerReachBattlePos::clear_guids() {
  guids_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 PlayerReachBattlePos::guids(int index) const {
  return guids_.Get(index);
}
inline void PlayerReachBattlePos::set_guids(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  guids_.Set(index, value);
}
inline void PlayerReachBattlePos::add_guids(::google::protobuf::uint64 value) {
  SetDirty();
  guids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PlayerReachBattlePos::guids() const {
  return guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PlayerReachBattlePos::mutable_guids() {
  SetDirty();
  return &guids_;
}

// repeated .Packet.Position positions = 3;
inline int PlayerReachBattlePos::positions_size() const {
  return positions_.size();
}
inline void PlayerReachBattlePos::clear_positions() {
  positions_.Clear();
  SetDirty();
}
inline const ::Packet::Position& PlayerReachBattlePos::positions(int index) const {
  return positions_.Get(index);
}
inline ::Packet::Position* PlayerReachBattlePos::mutable_positions(int index) {
  SetDirty();
  return positions_.Mutable(index);
}
inline ::Packet::Position* PlayerReachBattlePos::add_positions() {
  SetDirty();
  return positions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::Position >&
PlayerReachBattlePos::positions() const {
  return positions_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::Position >*
PlayerReachBattlePos::mutable_positions() {
  SetDirty();
  return &positions_;
}

// -------------------------------------------------------------------

// BattleGroundOverNotify

// required .Packet.BattleGroundBrief brief = 1;
inline bool BattleGroundOverNotify::has_brief() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleGroundOverNotify::set_has_brief() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleGroundOverNotify::clear_has_brief() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleGroundOverNotify::clear_brief() {
  if (brief_ != NULL) brief_->::Packet::BattleGroundBrief::Clear();
  clear_has_brief();
  SetDirty();
}
inline const ::Packet::BattleGroundBrief& BattleGroundOverNotify::brief() const {
  return brief_ != NULL ? *brief_ : *default_instance_->brief_;
}
inline ::Packet::BattleGroundBrief* BattleGroundOverNotify::mutable_brief() {
  SetDirty();
  set_has_brief();
  if (brief_ == NULL) brief_ = new ::Packet::BattleGroundBrief;
  return brief_;
}
inline ::Packet::BattleGroundBrief* BattleGroundOverNotify::release_brief() {
  SetDirty();
  clear_has_brief();
  ::Packet::BattleGroundBrief* temp = brief_;
  brief_ = NULL;
  return temp;
}
inline void BattleGroundOverNotify::set_allocated_brief(::Packet::BattleGroundBrief* brief) {
  SetDirty();
  delete brief_;
  brief_ = brief;
  if (brief) {
    set_has_brief();
  } else {
    clear_has_brief();
  }
}

// required int32 winner_camp = 2;
inline bool BattleGroundOverNotify::has_winner_camp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleGroundOverNotify::set_has_winner_camp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleGroundOverNotify::clear_has_winner_camp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleGroundOverNotify::clear_winner_camp() {
  winner_camp_ = 0;
  clear_has_winner_camp();
  SetDirty();
}
inline ::google::protobuf::int32 BattleGroundOverNotify::winner_camp() const {
  return winner_camp_;
}
inline void BattleGroundOverNotify::set_winner_camp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_winner_camp();
  winner_camp_ = value;
}

// required fixed64 time_stamp = 3;
inline bool BattleGroundOverNotify::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleGroundOverNotify::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleGroundOverNotify::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleGroundOverNotify::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 BattleGroundOverNotify::time_stamp() const {
  return time_stamp_;
}
inline void BattleGroundOverNotify::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// optional fixed64 wait_millsec = 4;
inline bool BattleGroundOverNotify::has_wait_millsec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleGroundOverNotify::set_has_wait_millsec() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleGroundOverNotify::clear_has_wait_millsec() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleGroundOverNotify::clear_wait_millsec() {
  wait_millsec_ = GOOGLE_ULONGLONG(0);
  clear_has_wait_millsec();
  SetDirty();
}
inline ::google::protobuf::uint64 BattleGroundOverNotify::wait_millsec() const {
  return wait_millsec_;
}
inline void BattleGroundOverNotify::set_wait_millsec(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_wait_millsec();
  wait_millsec_ = value;
}

// -------------------------------------------------------------------

// BattleStartNotify

// required .Packet.BattleGroundBrief brief = 1;
inline bool BattleStartNotify::has_brief() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleStartNotify::set_has_brief() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleStartNotify::clear_has_brief() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleStartNotify::clear_brief() {
  if (brief_ != NULL) brief_->::Packet::BattleGroundBrief::Clear();
  clear_has_brief();
  SetDirty();
}
inline const ::Packet::BattleGroundBrief& BattleStartNotify::brief() const {
  return brief_ != NULL ? *brief_ : *default_instance_->brief_;
}
inline ::Packet::BattleGroundBrief* BattleStartNotify::mutable_brief() {
  SetDirty();
  set_has_brief();
  if (brief_ == NULL) brief_ = new ::Packet::BattleGroundBrief;
  return brief_;
}
inline ::Packet::BattleGroundBrief* BattleStartNotify::release_brief() {
  SetDirty();
  clear_has_brief();
  ::Packet::BattleGroundBrief* temp = brief_;
  brief_ = NULL;
  return temp;
}
inline void BattleStartNotify::set_allocated_brief(::Packet::BattleGroundBrief* brief) {
  SetDirty();
  delete brief_;
  brief_ = brief;
  if (brief) {
    set_has_brief();
  } else {
    clear_has_brief();
  }
}

// -------------------------------------------------------------------

// RefreshBattleGround

// required .Packet.BattleGroundBrief brief = 1;
inline bool RefreshBattleGround::has_brief() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefreshBattleGround::set_has_brief() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefreshBattleGround::clear_has_brief() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefreshBattleGround::clear_brief() {
  if (brief_ != NULL) brief_->::Packet::BattleGroundBrief::Clear();
  clear_has_brief();
  SetDirty();
}
inline const ::Packet::BattleGroundBrief& RefreshBattleGround::brief() const {
  return brief_ != NULL ? *brief_ : *default_instance_->brief_;
}
inline ::Packet::BattleGroundBrief* RefreshBattleGround::mutable_brief() {
  SetDirty();
  set_has_brief();
  if (brief_ == NULL) brief_ = new ::Packet::BattleGroundBrief;
  return brief_;
}
inline ::Packet::BattleGroundBrief* RefreshBattleGround::release_brief() {
  SetDirty();
  clear_has_brief();
  ::Packet::BattleGroundBrief* temp = brief_;
  brief_ = NULL;
  return temp;
}
inline void RefreshBattleGround::set_allocated_brief(::Packet::BattleGroundBrief* brief) {
  SetDirty();
  delete brief_;
  brief_ = brief;
  if (brief) {
    set_has_brief();
  } else {
    clear_has_brief();
  }
}

// required .Packet.BattleGroundInfo new_info = 2;
inline bool RefreshBattleGround::has_new_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RefreshBattleGround::set_has_new_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RefreshBattleGround::clear_has_new_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RefreshBattleGround::clear_new_info() {
  if (new_info_ != NULL) new_info_->::Packet::BattleGroundInfo::Clear();
  clear_has_new_info();
  SetDirty();
}
inline const ::Packet::BattleGroundInfo& RefreshBattleGround::new_info() const {
  return new_info_ != NULL ? *new_info_ : *default_instance_->new_info_;
}
inline ::Packet::BattleGroundInfo* RefreshBattleGround::mutable_new_info() {
  SetDirty();
  set_has_new_info();
  if (new_info_ == NULL) new_info_ = new ::Packet::BattleGroundInfo;
  return new_info_;
}
inline ::Packet::BattleGroundInfo* RefreshBattleGround::release_new_info() {
  SetDirty();
  clear_has_new_info();
  ::Packet::BattleGroundInfo* temp = new_info_;
  new_info_ = NULL;
  return temp;
}
inline void RefreshBattleGround::set_allocated_new_info(::Packet::BattleGroundInfo* new_info) {
  SetDirty();
  delete new_info_;
  new_info_ = new_info;
  if (new_info) {
    set_has_new_info();
  } else {
    clear_has_new_info();
  }
}

// required fixed64 time_stamp = 3;
inline bool RefreshBattleGround::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RefreshBattleGround::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RefreshBattleGround::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RefreshBattleGround::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 RefreshBattleGround::time_stamp() const {
  return time_stamp_;
}
inline void RefreshBattleGround::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// BattleGroundBrief

// required fixed64 guid = 1;
inline bool BattleGroundBrief::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleGroundBrief::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleGroundBrief::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleGroundBrief::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 BattleGroundBrief::guid() const {
  return guid_;
}
inline void BattleGroundBrief::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required .Packet.BattleGroundType type = 2;
inline bool BattleGroundBrief::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleGroundBrief::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleGroundBrief::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleGroundBrief::clear_type() {
  type_ = 0;
  clear_has_type();
  SetDirty();
}
inline ::Packet::BattleGroundType BattleGroundBrief::type() const {
  return static_cast< ::Packet::BattleGroundType >(type_);
}
inline void BattleGroundBrief::set_type(::Packet::BattleGroundType value) {
  assert(::Packet::BattleGroundType_IsValid(value));
  SetDirty();
  set_has_type();
  type_ = value;
}

// required fixed64 elapse_time = 3;
inline bool BattleGroundBrief::has_elapse_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleGroundBrief::set_has_elapse_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleGroundBrief::clear_has_elapse_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleGroundBrief::clear_elapse_time() {
  elapse_time_ = GOOGLE_ULONGLONG(0);
  clear_has_elapse_time();
  SetDirty();
}
inline ::google::protobuf::uint64 BattleGroundBrief::elapse_time() const {
  return elapse_time_;
}
inline void BattleGroundBrief::set_elapse_time(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_elapse_time();
  elapse_time_ = value;
}

// required int32 scene_id = 4;
inline bool BattleGroundBrief::has_scene_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleGroundBrief::set_has_scene_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleGroundBrief::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleGroundBrief::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
  SetDirty();
}
inline ::google::protobuf::int32 BattleGroundBrief::scene_id() const {
  return scene_id_;
}
inline void BattleGroundBrief::set_scene_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_scene_id();
  scene_id_ = value;
}

// optional int32 stage_id = 5;
inline bool BattleGroundBrief::has_stage_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BattleGroundBrief::set_has_stage_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BattleGroundBrief::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BattleGroundBrief::clear_stage_id() {
  stage_id_ = 0;
  clear_has_stage_id();
  SetDirty();
}
inline ::google::protobuf::int32 BattleGroundBrief::stage_id() const {
  return stage_id_;
}
inline void BattleGroundBrief::set_stage_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_stage_id();
  stage_id_ = value;
}

// required int32 battle_group_id = 6;
inline bool BattleGroundBrief::has_battle_group_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BattleGroundBrief::set_has_battle_group_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BattleGroundBrief::clear_has_battle_group_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BattleGroundBrief::clear_battle_group_id() {
  battle_group_id_ = 0;
  clear_has_battle_group_id();
  SetDirty();
}
inline ::google::protobuf::int32 BattleGroundBrief::battle_group_id() const {
  return battle_group_id_;
}
inline void BattleGroundBrief::set_battle_group_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_battle_group_id();
  battle_group_id_ = value;
}

// required bool can_manual_control = 7;
inline bool BattleGroundBrief::has_can_manual_control() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BattleGroundBrief::set_has_can_manual_control() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BattleGroundBrief::clear_has_can_manual_control() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BattleGroundBrief::clear_can_manual_control() {
  can_manual_control_ = false;
  clear_has_can_manual_control();
  SetDirty();
}
inline bool BattleGroundBrief::can_manual_control() const {
  return can_manual_control_;
}
inline void BattleGroundBrief::set_can_manual_control(bool value) {
  SetDirty();
  set_has_can_manual_control();
  can_manual_control_ = value;
}

// optional int32 mission_id = 8;
inline bool BattleGroundBrief::has_mission_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BattleGroundBrief::set_has_mission_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BattleGroundBrief::clear_has_mission_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BattleGroundBrief::clear_mission_id() {
  mission_id_ = 0;
  clear_has_mission_id();
  SetDirty();
}
inline ::google::protobuf::int32 BattleGroundBrief::mission_id() const {
  return mission_id_;
}
inline void BattleGroundBrief::set_mission_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_mission_id();
  mission_id_ = value;
}

// optional fixed64 time_out = 9;
inline bool BattleGroundBrief::has_time_out() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BattleGroundBrief::set_has_time_out() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BattleGroundBrief::clear_has_time_out() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BattleGroundBrief::clear_time_out() {
  time_out_ = GOOGLE_ULONGLONG(0);
  clear_has_time_out();
  SetDirty();
}
inline ::google::protobuf::uint64 BattleGroundBrief::time_out() const {
  return time_out_;
}
inline void BattleGroundBrief::set_time_out(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_out();
  time_out_ = value;
}

// optional fixed64 fight_time = 10;
inline bool BattleGroundBrief::has_fight_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BattleGroundBrief::set_has_fight_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BattleGroundBrief::clear_has_fight_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BattleGroundBrief::clear_fight_time() {
  fight_time_ = GOOGLE_ULONGLONG(0);
  clear_has_fight_time();
  SetDirty();
}
inline ::google::protobuf::uint64 BattleGroundBrief::fight_time() const {
  return fight_time_;
}
inline void BattleGroundBrief::set_fight_time(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_fight_time();
  fight_time_ = value;
}

// -------------------------------------------------------------------

// ExitBattleGround

// -------------------------------------------------------------------

// BattleGroundInfo

// required .Packet.BattleGroundBrief brief = 1;
inline bool BattleGroundInfo::has_brief() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleGroundInfo::set_has_brief() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleGroundInfo::clear_has_brief() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleGroundInfo::clear_brief() {
  if (brief_ != NULL) brief_->::Packet::BattleGroundBrief::Clear();
  clear_has_brief();
  SetDirty();
}
inline const ::Packet::BattleGroundBrief& BattleGroundInfo::brief() const {
  return brief_ != NULL ? *brief_ : *default_instance_->brief_;
}
inline ::Packet::BattleGroundBrief* BattleGroundInfo::mutable_brief() {
  SetDirty();
  set_has_brief();
  if (brief_ == NULL) brief_ = new ::Packet::BattleGroundBrief;
  return brief_;
}
inline ::Packet::BattleGroundBrief* BattleGroundInfo::release_brief() {
  SetDirty();
  clear_has_brief();
  ::Packet::BattleGroundBrief* temp = brief_;
  brief_ = NULL;
  return temp;
}
inline void BattleGroundInfo::set_allocated_brief(::Packet::BattleGroundBrief* brief) {
  SetDirty();
  delete brief_;
  brief_ = brief;
  if (brief) {
    set_has_brief();
  } else {
    clear_has_brief();
  }
}

// repeated .Packet.ActorBattleInfo attackers = 2;
inline int BattleGroundInfo::attackers_size() const {
  return attackers_.size();
}
inline void BattleGroundInfo::clear_attackers() {
  attackers_.Clear();
  SetDirty();
}
inline const ::Packet::ActorBattleInfo& BattleGroundInfo::attackers(int index) const {
  return attackers_.Get(index);
}
inline ::Packet::ActorBattleInfo* BattleGroundInfo::mutable_attackers(int index) {
  SetDirty();
  return attackers_.Mutable(index);
}
inline ::Packet::ActorBattleInfo* BattleGroundInfo::add_attackers() {
  SetDirty();
  return attackers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo >&
BattleGroundInfo::attackers() const {
  return attackers_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo >*
BattleGroundInfo::mutable_attackers() {
  SetDirty();
  return &attackers_;
}

// repeated .Packet.ActorBattleInfo defenders = 3;
inline int BattleGroundInfo::defenders_size() const {
  return defenders_.size();
}
inline void BattleGroundInfo::clear_defenders() {
  defenders_.Clear();
  SetDirty();
}
inline const ::Packet::ActorBattleInfo& BattleGroundInfo::defenders(int index) const {
  return defenders_.Get(index);
}
inline ::Packet::ActorBattleInfo* BattleGroundInfo::mutable_defenders(int index) {
  SetDirty();
  return defenders_.Mutable(index);
}
inline ::Packet::ActorBattleInfo* BattleGroundInfo::add_defenders() {
  SetDirty();
  return defenders_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo >&
BattleGroundInfo::defenders() const {
  return defenders_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo >*
BattleGroundInfo::mutable_defenders() {
  SetDirty();
  return &defenders_;
}

// -------------------------------------------------------------------

// ActorBattleInfo

// required .Packet.ActorBasicInfo base_info = 1;
inline bool ActorBattleInfo::has_base_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorBattleInfo::set_has_base_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorBattleInfo::clear_has_base_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorBattleInfo::clear_base_info() {
  if (base_info_ != NULL) base_info_->::Packet::ActorBasicInfo::Clear();
  clear_has_base_info();
  SetDirty();
}
inline const ::Packet::ActorBasicInfo& ActorBattleInfo::base_info() const {
  return base_info_ != NULL ? *base_info_ : *default_instance_->base_info_;
}
inline ::Packet::ActorBasicInfo* ActorBattleInfo::mutable_base_info() {
  SetDirty();
  set_has_base_info();
  if (base_info_ == NULL) base_info_ = new ::Packet::ActorBasicInfo;
  return base_info_;
}
inline ::Packet::ActorBasicInfo* ActorBattleInfo::release_base_info() {
  SetDirty();
  clear_has_base_info();
  ::Packet::ActorBasicInfo* temp = base_info_;
  base_info_ = NULL;
  return temp;
}
inline void ActorBattleInfo::set_allocated_base_info(::Packet::ActorBasicInfo* base_info) {
  SetDirty();
  delete base_info_;
  base_info_ = base_info;
  if (base_info) {
    set_has_base_info();
  } else {
    clear_has_base_info();
  }
}

// required .Packet.BattleInfo battle_info = 2;
inline bool ActorBattleInfo::has_battle_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorBattleInfo::set_has_battle_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorBattleInfo::clear_has_battle_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorBattleInfo::clear_battle_info() {
  if (battle_info_ != NULL) battle_info_->::Packet::BattleInfo::Clear();
  clear_has_battle_info();
  SetDirty();
}
inline const ::Packet::BattleInfo& ActorBattleInfo::battle_info() const {
  return battle_info_ != NULL ? *battle_info_ : *default_instance_->battle_info_;
}
inline ::Packet::BattleInfo* ActorBattleInfo::mutable_battle_info() {
  SetDirty();
  set_has_battle_info();
  if (battle_info_ == NULL) battle_info_ = new ::Packet::BattleInfo;
  return battle_info_;
}
inline ::Packet::BattleInfo* ActorBattleInfo::release_battle_info() {
  SetDirty();
  clear_has_battle_info();
  ::Packet::BattleInfo* temp = battle_info_;
  battle_info_ = NULL;
  return temp;
}
inline void ActorBattleInfo::set_allocated_battle_info(::Packet::BattleInfo* battle_info) {
  SetDirty();
  delete battle_info_;
  battle_info_ = battle_info;
  if (battle_info) {
    set_has_battle_info();
  } else {
    clear_has_battle_info();
  }
}

// required .Packet.Position positon = 3;
inline bool ActorBattleInfo::has_positon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorBattleInfo::set_has_positon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorBattleInfo::clear_has_positon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorBattleInfo::clear_positon() {
  if (positon_ != NULL) positon_->::Packet::Position::Clear();
  clear_has_positon();
  SetDirty();
}
inline const ::Packet::Position& ActorBattleInfo::positon() const {
  return positon_ != NULL ? *positon_ : *default_instance_->positon_;
}
inline ::Packet::Position* ActorBattleInfo::mutable_positon() {
  SetDirty();
  set_has_positon();
  if (positon_ == NULL) positon_ = new ::Packet::Position;
  return positon_;
}
inline ::Packet::Position* ActorBattleInfo::release_positon() {
  SetDirty();
  clear_has_positon();
  ::Packet::Position* temp = positon_;
  positon_ = NULL;
  return temp;
}
inline void ActorBattleInfo::set_allocated_positon(::Packet::Position* positon) {
  SetDirty();
  delete positon_;
  positon_ = positon;
  if (positon) {
    set_has_positon();
  } else {
    clear_has_positon();
  }
}

// required double direction = 4;
inline bool ActorBattleInfo::has_direction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActorBattleInfo::set_has_direction() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActorBattleInfo::clear_has_direction() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActorBattleInfo::clear_direction() {
  direction_ = 0;
  clear_has_direction();
  SetDirty();
}
inline double ActorBattleInfo::direction() const {
  return direction_;
}
inline void ActorBattleInfo::set_direction(double value) {
  SetDirty();
  set_has_direction();
  direction_ = value;
}

// required .Packet.ActorStateType state = 5;
inline bool ActorBattleInfo::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActorBattleInfo::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActorBattleInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActorBattleInfo::clear_state() {
  state_ = 1;
  clear_has_state();
  SetDirty();
}
inline ::Packet::ActorStateType ActorBattleInfo::state() const {
  return static_cast< ::Packet::ActorStateType >(state_);
}
inline void ActorBattleInfo::set_state(::Packet::ActorStateType value) {
  assert(::Packet::ActorStateType_IsValid(value));
  SetDirty();
  set_has_state();
  state_ = value;
}

// optional int32 monster_config_id = 6;
inline bool ActorBattleInfo::has_monster_config_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ActorBattleInfo::set_has_monster_config_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ActorBattleInfo::clear_has_monster_config_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ActorBattleInfo::clear_monster_config_id() {
  monster_config_id_ = 0;
  clear_has_monster_config_id();
  SetDirty();
}
inline ::google::protobuf::int32 ActorBattleInfo::monster_config_id() const {
  return monster_config_id_;
}
inline void ActorBattleInfo::set_monster_config_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_monster_config_id();
  monster_config_id_ = value;
}

// required int32 object_radius = 7;
inline bool ActorBattleInfo::has_object_radius() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ActorBattleInfo::set_has_object_radius() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ActorBattleInfo::clear_has_object_radius() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ActorBattleInfo::clear_object_radius() {
  object_radius_ = 0;
  clear_has_object_radius();
  SetDirty();
}
inline ::google::protobuf::int32 ActorBattleInfo::object_radius() const {
  return object_radius_;
}
inline void ActorBattleInfo::set_object_radius(::google::protobuf::int32 value) {
  SetDirty();
  set_has_object_radius();
  object_radius_ = value;
}

// required int32 position_index = 8;
inline bool ActorBattleInfo::has_position_index() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ActorBattleInfo::set_has_position_index() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ActorBattleInfo::clear_has_position_index() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ActorBattleInfo::clear_position_index() {
  position_index_ = 0;
  clear_has_position_index();
  SetDirty();
}
inline ::google::protobuf::int32 ActorBattleInfo::position_index() const {
  return position_index_;
}
inline void ActorBattleInfo::set_position_index(::google::protobuf::int32 value) {
  SetDirty();
  set_has_position_index();
  position_index_ = value;
}

// repeated .Packet.EquipItem equips = 9;
inline int ActorBattleInfo::equips_size() const {
  return equips_.size();
}
inline void ActorBattleInfo::clear_equips() {
  equips_.Clear();
  SetDirty();
}
inline const ::Packet::EquipItem& ActorBattleInfo::equips(int index) const {
  return equips_.Get(index);
}
inline ::Packet::EquipItem* ActorBattleInfo::mutable_equips(int index) {
  SetDirty();
  return equips_.Mutable(index);
}
inline ::Packet::EquipItem* ActorBattleInfo::add_equips() {
  SetDirty();
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::EquipItem >&
ActorBattleInfo::equips() const {
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::EquipItem >*
ActorBattleInfo::mutable_equips() {
  SetDirty();
  return &equips_;
}

// required int32 side = 10;
inline bool ActorBattleInfo::has_side() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ActorBattleInfo::set_has_side() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ActorBattleInfo::clear_has_side() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ActorBattleInfo::clear_side() {
  side_ = 0;
  clear_has_side();
  SetDirty();
}
inline ::google::protobuf::int32 ActorBattleInfo::side() const {
  return side_;
}
inline void ActorBattleInfo::set_side(::google::protobuf::int32 value) {
  SetDirty();
  set_has_side();
  side_ = value;
}

// -------------------------------------------------------------------

// NewActorCreated

// optional fixed64 creator_guid = 1;
inline bool NewActorCreated::has_creator_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewActorCreated::set_has_creator_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewActorCreated::clear_has_creator_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewActorCreated::clear_creator_guid() {
  creator_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_creator_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 NewActorCreated::creator_guid() const {
  return creator_guid_;
}
inline void NewActorCreated::set_creator_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_creator_guid();
  creator_guid_ = value;
}

// optional int32 skill_id = 2;
inline bool NewActorCreated::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewActorCreated::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewActorCreated::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewActorCreated::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
  SetDirty();
}
inline ::google::protobuf::int32 NewActorCreated::skill_id() const {
  return skill_id_;
}
inline void NewActorCreated::set_skill_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_skill_id();
  skill_id_ = value;
}

// repeated .Packet.ActorBattleInfo attackers = 3;
inline int NewActorCreated::attackers_size() const {
  return attackers_.size();
}
inline void NewActorCreated::clear_attackers() {
  attackers_.Clear();
  SetDirty();
}
inline const ::Packet::ActorBattleInfo& NewActorCreated::attackers(int index) const {
  return attackers_.Get(index);
}
inline ::Packet::ActorBattleInfo* NewActorCreated::mutable_attackers(int index) {
  SetDirty();
  return attackers_.Mutable(index);
}
inline ::Packet::ActorBattleInfo* NewActorCreated::add_attackers() {
  SetDirty();
  return attackers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo >&
NewActorCreated::attackers() const {
  return attackers_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo >*
NewActorCreated::mutable_attackers() {
  SetDirty();
  return &attackers_;
}

// repeated .Packet.ActorBattleInfo defenders = 4;
inline int NewActorCreated::defenders_size() const {
  return defenders_.size();
}
inline void NewActorCreated::clear_defenders() {
  defenders_.Clear();
  SetDirty();
}
inline const ::Packet::ActorBattleInfo& NewActorCreated::defenders(int index) const {
  return defenders_.Get(index);
}
inline ::Packet::ActorBattleInfo* NewActorCreated::mutable_defenders(int index) {
  SetDirty();
  return defenders_.Mutable(index);
}
inline ::Packet::ActorBattleInfo* NewActorCreated::add_defenders() {
  SetDirty();
  return defenders_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo >&
NewActorCreated::defenders() const {
  return defenders_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorBattleInfo >*
NewActorCreated::mutable_defenders() {
  SetDirty();
  return &defenders_;
}

// required fixed64 time_stamp = 5;
inline bool NewActorCreated::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NewActorCreated::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NewActorCreated::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NewActorCreated::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 NewActorCreated::time_stamp() const {
  return time_stamp_;
}
inline void NewActorCreated::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// ActorDismiss

// required fixed64 guid = 1;
inline bool ActorDismiss::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorDismiss::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorDismiss::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorDismiss::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorDismiss::guid() const {
  return guid_;
}
inline void ActorDismiss::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required fixed64 time_stamp = 2;
inline bool ActorDismiss::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorDismiss::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorDismiss::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorDismiss::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorDismiss::time_stamp() const {
  return time_stamp_;
}
inline void ActorDismiss::set_time_stamp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_time_stamp();
  time_stamp_ = value;
}

// -------------------------------------------------------------------

// SetControlType

// required .Packet.ActorControlType contral_type = 1;
inline bool SetControlType::has_contral_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetControlType::set_has_contral_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetControlType::clear_has_contral_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetControlType::clear_contral_type() {
  contral_type_ = 0;
  clear_has_contral_type();
  SetDirty();
}
inline ::Packet::ActorControlType SetControlType::contral_type() const {
  return static_cast< ::Packet::ActorControlType >(contral_type_);
}
inline void SetControlType::set_contral_type(::Packet::ActorControlType value) {
  assert(::Packet::ActorControlType_IsValid(value));
  SetDirty();
  set_has_contral_type();
  contral_type_ = value;
}

// -------------------------------------------------------------------

// UpdateFollowState

// required bool follow = 1;
inline bool UpdateFollowState::has_follow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateFollowState::set_has_follow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateFollowState::clear_has_follow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateFollowState::clear_follow() {
  follow_ = false;
  clear_has_follow();
  SetDirty();
}
inline bool UpdateFollowState::follow() const {
  return follow_;
}
inline void UpdateFollowState::set_follow(bool value) {
  SetDirty();
  set_has_follow();
  follow_ = value;
}

// -------------------------------------------------------------------

// ClientActorMove

// required fixed64 guid = 1;
inline bool ClientActorMove::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientActorMove::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientActorMove::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientActorMove::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ClientActorMove::guid() const {
  return guid_;
}
inline void ClientActorMove::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required float direction = 2;
inline bool ClientActorMove::has_direction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientActorMove::set_has_direction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientActorMove::clear_has_direction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientActorMove::clear_direction() {
  direction_ = 0;
  clear_has_direction();
  SetDirty();
}
inline float ClientActorMove::direction() const {
  return direction_;
}
inline void ClientActorMove::set_direction(float value) {
  SetDirty();
  set_has_direction();
  direction_ = value;
}

// required fixed32 move_speed = 3;
inline bool ClientActorMove::has_move_speed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientActorMove::set_has_move_speed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientActorMove::clear_has_move_speed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientActorMove::clear_move_speed() {
  move_speed_ = 0u;
  clear_has_move_speed();
  SetDirty();
}
inline ::google::protobuf::uint32 ClientActorMove::move_speed() const {
  return move_speed_;
}
inline void ClientActorMove::set_move_speed(::google::protobuf::uint32 value) {
  SetDirty();
  set_has_move_speed();
  move_speed_ = value;
}

// required .Packet.Position old_pos = 4;
inline bool ClientActorMove::has_old_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientActorMove::set_has_old_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientActorMove::clear_has_old_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientActorMove::clear_old_pos() {
  if (old_pos_ != NULL) old_pos_->::Packet::Position::Clear();
  clear_has_old_pos();
  SetDirty();
}
inline const ::Packet::Position& ClientActorMove::old_pos() const {
  return old_pos_ != NULL ? *old_pos_ : *default_instance_->old_pos_;
}
inline ::Packet::Position* ClientActorMove::mutable_old_pos() {
  SetDirty();
  set_has_old_pos();
  if (old_pos_ == NULL) old_pos_ = new ::Packet::Position;
  return old_pos_;
}
inline ::Packet::Position* ClientActorMove::release_old_pos() {
  SetDirty();
  clear_has_old_pos();
  ::Packet::Position* temp = old_pos_;
  old_pos_ = NULL;
  return temp;
}
inline void ClientActorMove::set_allocated_old_pos(::Packet::Position* old_pos) {
  SetDirty();
  delete old_pos_;
  old_pos_ = old_pos;
  if (old_pos) {
    set_has_old_pos();
  } else {
    clear_has_old_pos();
  }
}

// required .Packet.Position new_pos = 5;
inline bool ClientActorMove::has_new_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientActorMove::set_has_new_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientActorMove::clear_has_new_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientActorMove::clear_new_pos() {
  if (new_pos_ != NULL) new_pos_->::Packet::Position::Clear();
  clear_has_new_pos();
  SetDirty();
}
inline const ::Packet::Position& ClientActorMove::new_pos() const {
  return new_pos_ != NULL ? *new_pos_ : *default_instance_->new_pos_;
}
inline ::Packet::Position* ClientActorMove::mutable_new_pos() {
  SetDirty();
  set_has_new_pos();
  if (new_pos_ == NULL) new_pos_ = new ::Packet::Position;
  return new_pos_;
}
inline ::Packet::Position* ClientActorMove::release_new_pos() {
  SetDirty();
  clear_has_new_pos();
  ::Packet::Position* temp = new_pos_;
  new_pos_ = NULL;
  return temp;
}
inline void ClientActorMove::set_allocated_new_pos(::Packet::Position* new_pos) {
  SetDirty();
  delete new_pos_;
  new_pos_ = new_pos;
  if (new_pos) {
    set_has_new_pos();
  } else {
    clear_has_new_pos();
  }
}

// -------------------------------------------------------------------

// ClientActorStop

// optional fixed64 guid = 1;
inline bool ClientActorStop::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientActorStop::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientActorStop::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientActorStop::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ClientActorStop::guid() const {
  return guid_;
}
inline void ClientActorStop::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required float direction = 3;
inline bool ClientActorStop::has_direction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientActorStop::set_has_direction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientActorStop::clear_has_direction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientActorStop::clear_direction() {
  direction_ = 0;
  clear_has_direction();
  SetDirty();
}
inline float ClientActorStop::direction() const {
  return direction_;
}
inline void ClientActorStop::set_direction(float value) {
  SetDirty();
  set_has_direction();
  direction_ = value;
}

// required .Packet.Position stop_pos = 4;
inline bool ClientActorStop::has_stop_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientActorStop::set_has_stop_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientActorStop::clear_has_stop_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientActorStop::clear_stop_pos() {
  if (stop_pos_ != NULL) stop_pos_->::Packet::Position::Clear();
  clear_has_stop_pos();
  SetDirty();
}
inline const ::Packet::Position& ClientActorStop::stop_pos() const {
  return stop_pos_ != NULL ? *stop_pos_ : *default_instance_->stop_pos_;
}
inline ::Packet::Position* ClientActorStop::mutable_stop_pos() {
  SetDirty();
  set_has_stop_pos();
  if (stop_pos_ == NULL) stop_pos_ = new ::Packet::Position;
  return stop_pos_;
}
inline ::Packet::Position* ClientActorStop::release_stop_pos() {
  SetDirty();
  clear_has_stop_pos();
  ::Packet::Position* temp = stop_pos_;
  stop_pos_ = NULL;
  return temp;
}
inline void ClientActorStop::set_allocated_stop_pos(::Packet::Position* stop_pos) {
  SetDirty();
  delete stop_pos_;
  stop_pos_ = stop_pos;
  if (stop_pos) {
    set_has_stop_pos();
  } else {
    clear_has_stop_pos();
  }
}

// -------------------------------------------------------------------

// ClientActorUseSkill

// required fixed64 guid = 1;
inline bool ClientActorUseSkill::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientActorUseSkill::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientActorUseSkill::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientActorUseSkill::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ClientActorUseSkill::guid() const {
  return guid_;
}
inline void ClientActorUseSkill::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required int32 skill_id = 2;
inline bool ClientActorUseSkill::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientActorUseSkill::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientActorUseSkill::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientActorUseSkill::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
  SetDirty();
}
inline ::google::protobuf::int32 ClientActorUseSkill::skill_id() const {
  return skill_id_;
}
inline void ClientActorUseSkill::set_skill_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_skill_id();
  skill_id_ = value;
}

// repeated fixed64 target_guids = 3;
inline int ClientActorUseSkill::target_guids_size() const {
  return target_guids_.size();
}
inline void ClientActorUseSkill::clear_target_guids() {
  target_guids_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 ClientActorUseSkill::target_guids(int index) const {
  return target_guids_.Get(index);
}
inline void ClientActorUseSkill::set_target_guids(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  target_guids_.Set(index, value);
}
inline void ClientActorUseSkill::add_target_guids(::google::protobuf::uint64 value) {
  SetDirty();
  target_guids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ClientActorUseSkill::target_guids() const {
  return target_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ClientActorUseSkill::mutable_target_guids() {
  SetDirty();
  return &target_guids_;
}

// optional fixed64 other_guids = 4;
inline bool ClientActorUseSkill::has_other_guids() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientActorUseSkill::set_has_other_guids() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientActorUseSkill::clear_has_other_guids() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientActorUseSkill::clear_other_guids() {
  other_guids_ = GOOGLE_ULONGLONG(0);
  clear_has_other_guids();
  SetDirty();
}
inline ::google::protobuf::uint64 ClientActorUseSkill::other_guids() const {
  return other_guids_;
}
inline void ClientActorUseSkill::set_other_guids(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_other_guids();
  other_guids_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Packet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BattleGroundInfo_2eproto__INCLUDED

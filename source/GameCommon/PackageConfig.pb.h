// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PackageConfig.proto

#ifndef PROTOBUF_PackageConfig_2eproto__INCLUDED
#define PROTOBUF_PackageConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "AllConfigEnum.pb.h"
#include "AllPacketEnum.pb.h"
#include "ActorBasicInfo.pb.h"
#include "ProtoBufOption.pb.h"
// @@protoc_insertion_point(includes)

namespace Config {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PackageConfig_2eproto();
void protobuf_AssignDesc_PackageConfig_2eproto();
void protobuf_ShutdownFile_PackageConfig_2eproto();

class ItemPackageElement;
class ItemDropGroup;
class ItemPackageConfig;

// ===================================================================

class ItemPackageElement : public ::google::protobuf::Message {
 public:
  ItemPackageElement();
  virtual ~ItemPackageElement();

  ItemPackageElement(const ItemPackageElement& from);

  inline ItemPackageElement& operator=(const ItemPackageElement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemPackageElement& default_instance();

  void Swap(ItemPackageElement* other);

  // implements Message ----------------------------------------------

  ItemPackageElement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemPackageElement& from);
  void MergeFrom(const ItemPackageElement& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int32 item_id() const;
  inline void set_item_id(::google::protobuf::int32 value);

  // required int32 item_amount = 2;
  inline bool has_item_amount() const;
  inline void clear_item_amount();
  static const int kItemAmountFieldNumber = 2;
  inline ::google::protobuf::int32 item_amount() const;
  inline void set_item_amount(::google::protobuf::int32 value);

  // required int32 item_weight = 3;
  inline bool has_item_weight() const;
  inline void clear_item_weight();
  static const int kItemWeightFieldNumber = 3;
  inline ::google::protobuf::int32 item_weight() const;
  inline void set_item_weight(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Config.ItemPackageElement)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_amount();
  inline void clear_has_item_amount();
  inline void set_has_item_weight();
  inline void clear_has_item_weight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 item_amount_;
  ::google::protobuf::int32 item_weight_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_PackageConfig_2eproto();
  friend void protobuf_AssignDesc_PackageConfig_2eproto();
  friend void protobuf_ShutdownFile_PackageConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemPackageElement* default_instance_;
};
// -------------------------------------------------------------------

class ItemDropGroup : public ::google::protobuf::Message {
 public:
  ItemDropGroup();
  virtual ~ItemDropGroup();

  ItemDropGroup(const ItemDropGroup& from);

  inline ItemDropGroup& operator=(const ItemDropGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemDropGroup& default_instance();

  void Swap(ItemDropGroup* other);

  // implements Message ----------------------------------------------

  ItemDropGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemDropGroup& from);
  void MergeFrom(const ItemDropGroup& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 group = 1;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 1;
  inline ::google::protobuf::int32 group() const;
  inline void set_group(::google::protobuf::int32 value);

  // required .Config.ItemPackageElement item = 2;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::Config::ItemPackageElement& item() const;
  inline ::Config::ItemPackageElement* mutable_item();
  inline ::Config::ItemPackageElement* release_item();
  inline void set_allocated_item(::Config::ItemPackageElement* item);

  // @@protoc_insertion_point(class_scope:Config.ItemDropGroup)
 private:
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Config::ItemPackageElement* item_;
  ::google::protobuf::int32 group_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PackageConfig_2eproto();
  friend void protobuf_AssignDesc_PackageConfig_2eproto();
  friend void protobuf_ShutdownFile_PackageConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemDropGroup* default_instance_;
};
// -------------------------------------------------------------------

class ItemPackageConfig : public ::google::protobuf::Message {
 public:
  ItemPackageConfig();
  virtual ~ItemPackageConfig();

  ItemPackageConfig(const ItemPackageConfig& from);

  inline ItemPackageConfig& operator=(const ItemPackageConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemPackageConfig& default_instance();

  void Swap(ItemPackageConfig* other);

  // implements Message ----------------------------------------------

  ItemPackageConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemPackageConfig& from);
  void MergeFrom(const ItemPackageConfig& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required .Config.ItemPackageType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::Config::ItemPackageType type() const;
  inline void set_type(::Config::ItemPackageType value);

  // required int32 player_exp = 3;
  inline bool has_player_exp() const;
  inline void clear_player_exp();
  static const int kPlayerExpFieldNumber = 3;
  inline ::google::protobuf::int32 player_exp() const;
  inline void set_player_exp(::google::protobuf::int32 value);

  // required int32 actor_exp = 4;
  inline bool has_actor_exp() const;
  inline void clear_actor_exp();
  static const int kActorExpFieldNumber = 4;
  inline ::google::protobuf::int32 actor_exp() const;
  inline void set_actor_exp(::google::protobuf::int32 value);

  // required int32 gold = 5;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 5;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // required int32 gem = 6;
  inline bool has_gem() const;
  inline void clear_gem();
  static const int kGemFieldNumber = 6;
  inline ::google::protobuf::int32 gem() const;
  inline void set_gem(::google::protobuf::int32 value);

  // repeated .Config.ItemPackageElement items = 7;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 7;
  inline const ::Config::ItemPackageElement& items(int index) const;
  inline ::Config::ItemPackageElement* mutable_items(int index);
  inline ::Config::ItemPackageElement* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Config::ItemPackageElement >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Config::ItemPackageElement >*
      mutable_items();

  // required .Packet.ActorFigthFormation formation = 8;
  inline bool has_formation() const;
  inline void clear_formation();
  static const int kFormationFieldNumber = 8;
  inline ::Packet::ActorFigthFormation formation() const;
  inline void set_formation(::Packet::ActorFigthFormation value);

  // repeated int32 drop_group = 9;
  inline int drop_group_size() const;
  inline void clear_drop_group();
  static const int kDropGroupFieldNumber = 9;
  inline ::google::protobuf::int32 drop_group(int index) const;
  inline void set_drop_group(int index, ::google::protobuf::int32 value);
  inline void add_drop_group(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      drop_group() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_drop_group();

  // repeated int32 weight = 10;
  inline int weight_size() const;
  inline void clear_weight();
  static const int kWeightFieldNumber = 10;
  inline ::google::protobuf::int32 weight(int index) const;
  inline void set_weight(int index, ::google::protobuf::int32 value);
  inline void add_weight(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      weight() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_weight();

  // required int32 draw_limit = 11;
  inline bool has_draw_limit() const;
  inline void clear_draw_limit();
  static const int kDrawLimitFieldNumber = 11;
  inline ::google::protobuf::int32 draw_limit() const;
  inline void set_draw_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Config.ItemPackageConfig)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_player_exp();
  inline void clear_has_player_exp();
  inline void set_has_actor_exp();
  inline void clear_has_actor_exp();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_gem();
  inline void clear_has_gem();
  inline void set_has_formation();
  inline void clear_has_formation();
  inline void set_has_draw_limit();
  inline void clear_has_draw_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  int type_;
  ::google::protobuf::int32 player_exp_;
  ::google::protobuf::int32 actor_exp_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 gem_;
  ::google::protobuf::RepeatedPtrField< ::Config::ItemPackageElement > items_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > drop_group_;
  int formation_;
  ::google::protobuf::int32 draw_limit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > weight_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_PackageConfig_2eproto();
  friend void protobuf_AssignDesc_PackageConfig_2eproto();
  friend void protobuf_ShutdownFile_PackageConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemPackageConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// ItemPackageElement

// required int32 item_id = 1;
inline bool ItemPackageElement::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemPackageElement::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemPackageElement::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemPackageElement::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
  SetDirty();
}
inline ::google::protobuf::int32 ItemPackageElement::item_id() const {
  return item_id_;
}
inline void ItemPackageElement::set_item_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_item_id();
  item_id_ = value;
}

// required int32 item_amount = 2;
inline bool ItemPackageElement::has_item_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemPackageElement::set_has_item_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemPackageElement::clear_has_item_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemPackageElement::clear_item_amount() {
  item_amount_ = 0;
  clear_has_item_amount();
  SetDirty();
}
inline ::google::protobuf::int32 ItemPackageElement::item_amount() const {
  return item_amount_;
}
inline void ItemPackageElement::set_item_amount(::google::protobuf::int32 value) {
  SetDirty();
  set_has_item_amount();
  item_amount_ = value;
}

// required int32 item_weight = 3;
inline bool ItemPackageElement::has_item_weight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemPackageElement::set_has_item_weight() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemPackageElement::clear_has_item_weight() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemPackageElement::clear_item_weight() {
  item_weight_ = 0;
  clear_has_item_weight();
  SetDirty();
}
inline ::google::protobuf::int32 ItemPackageElement::item_weight() const {
  return item_weight_;
}
inline void ItemPackageElement::set_item_weight(::google::protobuf::int32 value) {
  SetDirty();
  set_has_item_weight();
  item_weight_ = value;
}

// -------------------------------------------------------------------

// ItemDropGroup

// required int32 group = 1;
inline bool ItemDropGroup::has_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemDropGroup::set_has_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemDropGroup::clear_has_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemDropGroup::clear_group() {
  group_ = 0;
  clear_has_group();
  SetDirty();
}
inline ::google::protobuf::int32 ItemDropGroup::group() const {
  return group_;
}
inline void ItemDropGroup::set_group(::google::protobuf::int32 value) {
  SetDirty();
  set_has_group();
  group_ = value;
}

// required .Config.ItemPackageElement item = 2;
inline bool ItemDropGroup::has_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemDropGroup::set_has_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemDropGroup::clear_has_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemDropGroup::clear_item() {
  if (item_ != NULL) item_->::Config::ItemPackageElement::Clear();
  clear_has_item();
  SetDirty();
}
inline const ::Config::ItemPackageElement& ItemDropGroup::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::Config::ItemPackageElement* ItemDropGroup::mutable_item() {
  SetDirty();
  set_has_item();
  if (item_ == NULL) item_ = new ::Config::ItemPackageElement;
  return item_;
}
inline ::Config::ItemPackageElement* ItemDropGroup::release_item() {
  SetDirty();
  clear_has_item();
  ::Config::ItemPackageElement* temp = item_;
  item_ = NULL;
  return temp;
}
inline void ItemDropGroup::set_allocated_item(::Config::ItemPackageElement* item) {
  SetDirty();
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}

// -------------------------------------------------------------------

// ItemPackageConfig

// required int32 id = 1;
inline bool ItemPackageConfig::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemPackageConfig::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemPackageConfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemPackageConfig::clear_id() {
  id_ = 0;
  clear_has_id();
  SetDirty();
}
inline ::google::protobuf::int32 ItemPackageConfig::id() const {
  return id_;
}
inline void ItemPackageConfig::set_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_id();
  id_ = value;
}

// required .Config.ItemPackageType type = 2;
inline bool ItemPackageConfig::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemPackageConfig::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemPackageConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemPackageConfig::clear_type() {
  type_ = 1;
  clear_has_type();
  SetDirty();
}
inline ::Config::ItemPackageType ItemPackageConfig::type() const {
  return static_cast< ::Config::ItemPackageType >(type_);
}
inline void ItemPackageConfig::set_type(::Config::ItemPackageType value) {
  assert(::Config::ItemPackageType_IsValid(value));
  SetDirty();
  set_has_type();
  type_ = value;
}

// required int32 player_exp = 3;
inline bool ItemPackageConfig::has_player_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemPackageConfig::set_has_player_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemPackageConfig::clear_has_player_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemPackageConfig::clear_player_exp() {
  player_exp_ = 0;
  clear_has_player_exp();
  SetDirty();
}
inline ::google::protobuf::int32 ItemPackageConfig::player_exp() const {
  return player_exp_;
}
inline void ItemPackageConfig::set_player_exp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_player_exp();
  player_exp_ = value;
}

// required int32 actor_exp = 4;
inline bool ItemPackageConfig::has_actor_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemPackageConfig::set_has_actor_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemPackageConfig::clear_has_actor_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemPackageConfig::clear_actor_exp() {
  actor_exp_ = 0;
  clear_has_actor_exp();
  SetDirty();
}
inline ::google::protobuf::int32 ItemPackageConfig::actor_exp() const {
  return actor_exp_;
}
inline void ItemPackageConfig::set_actor_exp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_actor_exp();
  actor_exp_ = value;
}

// required int32 gold = 5;
inline bool ItemPackageConfig::has_gold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemPackageConfig::set_has_gold() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemPackageConfig::clear_has_gold() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemPackageConfig::clear_gold() {
  gold_ = 0;
  clear_has_gold();
  SetDirty();
}
inline ::google::protobuf::int32 ItemPackageConfig::gold() const {
  return gold_;
}
inline void ItemPackageConfig::set_gold(::google::protobuf::int32 value) {
  SetDirty();
  set_has_gold();
  gold_ = value;
}

// required int32 gem = 6;
inline bool ItemPackageConfig::has_gem() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemPackageConfig::set_has_gem() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemPackageConfig::clear_has_gem() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemPackageConfig::clear_gem() {
  gem_ = 0;
  clear_has_gem();
  SetDirty();
}
inline ::google::protobuf::int32 ItemPackageConfig::gem() const {
  return gem_;
}
inline void ItemPackageConfig::set_gem(::google::protobuf::int32 value) {
  SetDirty();
  set_has_gem();
  gem_ = value;
}

// repeated .Config.ItemPackageElement items = 7;
inline int ItemPackageConfig::items_size() const {
  return items_.size();
}
inline void ItemPackageConfig::clear_items() {
  items_.Clear();
  SetDirty();
}
inline const ::Config::ItemPackageElement& ItemPackageConfig::items(int index) const {
  return items_.Get(index);
}
inline ::Config::ItemPackageElement* ItemPackageConfig::mutable_items(int index) {
  SetDirty();
  return items_.Mutable(index);
}
inline ::Config::ItemPackageElement* ItemPackageConfig::add_items() {
  SetDirty();
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Config::ItemPackageElement >&
ItemPackageConfig::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Config::ItemPackageElement >*
ItemPackageConfig::mutable_items() {
  SetDirty();
  return &items_;
}

// required .Packet.ActorFigthFormation formation = 8;
inline bool ItemPackageConfig::has_formation() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ItemPackageConfig::set_has_formation() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ItemPackageConfig::clear_has_formation() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ItemPackageConfig::clear_formation() {
  formation_ = 0;
  clear_has_formation();
  SetDirty();
}
inline ::Packet::ActorFigthFormation ItemPackageConfig::formation() const {
  return static_cast< ::Packet::ActorFigthFormation >(formation_);
}
inline void ItemPackageConfig::set_formation(::Packet::ActorFigthFormation value) {
  assert(::Packet::ActorFigthFormation_IsValid(value));
  SetDirty();
  set_has_formation();
  formation_ = value;
}

// repeated int32 drop_group = 9;
inline int ItemPackageConfig::drop_group_size() const {
  return drop_group_.size();
}
inline void ItemPackageConfig::clear_drop_group() {
  drop_group_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 ItemPackageConfig::drop_group(int index) const {
  return drop_group_.Get(index);
}
inline void ItemPackageConfig::set_drop_group(int index, ::google::protobuf::int32 value) {
  SetDirty();
  drop_group_.Set(index, value);
}
inline void ItemPackageConfig::add_drop_group(::google::protobuf::int32 value) {
  SetDirty();
  drop_group_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ItemPackageConfig::drop_group() const {
  return drop_group_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ItemPackageConfig::mutable_drop_group() {
  SetDirty();
  return &drop_group_;
}

// repeated int32 weight = 10;
inline int ItemPackageConfig::weight_size() const {
  return weight_.size();
}
inline void ItemPackageConfig::clear_weight() {
  weight_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 ItemPackageConfig::weight(int index) const {
  return weight_.Get(index);
}
inline void ItemPackageConfig::set_weight(int index, ::google::protobuf::int32 value) {
  SetDirty();
  weight_.Set(index, value);
}
inline void ItemPackageConfig::add_weight(::google::protobuf::int32 value) {
  SetDirty();
  weight_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ItemPackageConfig::weight() const {
  return weight_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ItemPackageConfig::mutable_weight() {
  SetDirty();
  return &weight_;
}

// required int32 draw_limit = 11;
inline bool ItemPackageConfig::has_draw_limit() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ItemPackageConfig::set_has_draw_limit() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ItemPackageConfig::clear_has_draw_limit() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ItemPackageConfig::clear_draw_limit() {
  draw_limit_ = 0;
  clear_has_draw_limit();
  SetDirty();
}
inline ::google::protobuf::int32 ItemPackageConfig::draw_limit() const {
  return draw_limit_;
}
inline void ItemPackageConfig::set_draw_limit(::google::protobuf::int32 value) {
  SetDirty();
  set_has_draw_limit();
  draw_limit_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PackageConfig_2eproto__INCLUDED

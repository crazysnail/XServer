// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActorBasicInfo.proto
#include "ActorBasicInfo.pb.h"
#include "ActorBasicInfo.proto.fflua.h"
namespace Packet {
bool ActorList_fflua_reg(lua_State* state)
{
//for decltype
	ActorList* message(nullptr);
	message;
	ff::fflua_register_t<ActorList, ctor()>(state, "ActorList", "google::protobuf::Message");
	return true;
}
bool ActorFullInfo_fflua_reg(lua_State* state)
{
//for decltype
	ActorFullInfo* message(nullptr);
	message;
	ff::fflua_register_t<ActorFullInfo, ctor()>(state, "ActorFullInfo", "google::protobuf::Message")
		// required .Packet.ActorBasicInfo actor = 1;
		.def(&ActorFullInfo::actor, "actor")
		.def(&ActorFullInfo::mutable_actor, "mutable_actor")
		// repeated .Packet.EquipItem equips = 2;
		.def(&ActorFullInfo::equips_size, "equips_size")
		.def<decltype(message->equips(0)) (ActorFullInfo::*)(int) const>(&ActorFullInfo::equips, "equips")
		.def<decltype(message->mutable_equips(0)) (ActorFullInfo::*)(int)>(&ActorFullInfo::mutable_equips, "mutable_equips")
		.def(&ActorFullInfo::add_equips, "add_equips")
		// repeated .Packet.ActorSkill skills = 3;
		.def(&ActorFullInfo::skills_size, "skills_size")
		.def<decltype(message->skills(0)) (ActorFullInfo::*)(int) const>(&ActorFullInfo::skills, "skills")
		.def<decltype(message->mutable_skills(0)) (ActorFullInfo::*)(int)>(&ActorFullInfo::mutable_skills, "mutable_skills")
		.def(&ActorFullInfo::add_skills, "add_skills")
		.def(&ActorFullInfo::ByteSize, "ByteSize")
		.def(&ActorFullInfo::SetInitialized, "SetInitialized")
		;
	return true;
}
bool ActorListReply_fflua_reg(lua_State* state)
{
//for decltype
	ActorListReply* message(nullptr);
	message;
	ff::fflua_register_t<ActorListReply, ctor()>(state, "ActorListReply", "google::protobuf::Message")
		// repeated .Packet.ActorFullInfo actors = 1;
		.def(&ActorListReply::actors_size, "actors_size")
		.def<decltype(message->actors(0)) (ActorListReply::*)(int) const>(&ActorListReply::actors, "actors")
		.def<decltype(message->mutable_actors(0)) (ActorListReply::*)(int)>(&ActorListReply::mutable_actors, "mutable_actors")
		.def(&ActorListReply::add_actors, "add_actors")
		.def(&ActorListReply::ByteSize, "ByteSize")
		.def(&ActorListReply::SetInitialized, "SetInitialized")
		;
	return true;
}
bool NewActorNotify_fflua_reg(lua_State* state)
{
//for decltype
	NewActorNotify* message(nullptr);
	message;
	ff::fflua_register_t<NewActorNotify, ctor()>(state, "NewActorNotify", "google::protobuf::Message")
		// repeated .Packet.ActorFullInfo actor_lsit = 1;
		.def(&NewActorNotify::actor_lsit_size, "actor_lsit_size")
		.def<decltype(message->actor_lsit(0)) (NewActorNotify::*)(int) const>(&NewActorNotify::actor_lsit, "actor_lsit")
		.def<decltype(message->mutable_actor_lsit(0)) (NewActorNotify::*)(int)>(&NewActorNotify::mutable_actor_lsit, "mutable_actor_lsit")
		.def(&NewActorNotify::add_actor_lsit, "add_actor_lsit")
		// required string source = 2;
		.def(&NewActorNotify::source, "source")
		.def<void (NewActorNotify::*)(const std::string&)>(&NewActorNotify::set_source, "set_source")
		.def(&NewActorNotify::ByteSize, "ByteSize")
		.def(&NewActorNotify::SetInitialized, "SetInitialized")
		;
	return true;
}
bool ActorBasicInfo_fflua_reg(lua_State* state)
{
//for decltype
	ActorBasicInfo* message(nullptr);
	message;
	ff::fflua_register_t<ActorBasicInfo, ctor()>(state, "ActorBasicInfo", "google::protobuf::Message")
		// required fixed64 guid = 1;
		.def(&ActorBasicInfo::guid, "guid")
		.def(&ActorBasicInfo::set_guid, "set_guid")
		// required fixed64 player_guid = 2;
		.def(&ActorBasicInfo::player_guid, "player_guid")
		.def(&ActorBasicInfo::set_player_guid, "set_player_guid")
		// required .Packet.Race race = 3;
		.def(&ActorBasicInfo::race, "race")
		.def(&ActorBasicInfo::set_race, "set_race")
		// required .Packet.Professions profession = 4;
		.def(&ActorBasicInfo::profession, "profession")
		.def(&ActorBasicInfo::set_profession, "set_profession")
		// required .Packet.Talent talent = 5;
		.def(&ActorBasicInfo::talent, "talent")
		.def(&ActorBasicInfo::set_talent, "set_talent")
		// required .Packet.Gender gender = 6;
		.def(&ActorBasicInfo::gender, "gender")
		.def(&ActorBasicInfo::set_gender, "set_gender")
		// required int32 level = 7;
		.def(&ActorBasicInfo::level, "level")
		.def(&ActorBasicInfo::set_level, "set_level")
		// required .Packet.BattleInfo battle_info = 8;
		.def(&ActorBasicInfo::battle_info, "battle_info")
		.def(&ActorBasicInfo::mutable_battle_info, "mutable_battle_info")
		// required .Packet.ActorType type = 9;
		.def(&ActorBasicInfo::type, "type")
		.def(&ActorBasicInfo::set_type, "set_type")
		// required int32 exp = 10;
		.def(&ActorBasicInfo::exp, "exp")
		.def(&ActorBasicInfo::set_exp, "set_exp")
		// required .Packet.ActorStar star = 11;
		.def(&ActorBasicInfo::star, "star")
		.def(&ActorBasicInfo::set_star, "set_star")
		// required .Packet.ActorColor color = 12;
		.def(&ActorBasicInfo::color, "color")
		.def(&ActorBasicInfo::set_color, "set_color")
		// required int32 level_2 = 13;
		.def(&ActorBasicInfo::level_2, "level_2")
		.def(&ActorBasicInfo::set_level_2, "set_level_2")
		// required int32 exp_2 = 14;
		.def(&ActorBasicInfo::exp_2, "exp_2")
		.def(&ActorBasicInfo::set_exp_2, "set_exp_2")
		// required string name = 15;
		.def(&ActorBasicInfo::name, "name")
		.def<void (ActorBasicInfo::*)(const std::string&)>(&ActorBasicInfo::set_name, "set_name")
		// required int32 client_res_id = 16;
		.def(&ActorBasicInfo::client_res_id, "client_res_id")
		.def(&ActorBasicInfo::set_client_res_id, "set_client_res_id")
		// required .Packet.ActorBattleType battle_type = 17;
		.def(&ActorBasicInfo::battle_type, "battle_type")
		.def(&ActorBasicInfo::set_battle_type, "set_battle_type")
		// required int32 actor_config_id = 18;
		.def(&ActorBasicInfo::actor_config_id, "actor_config_id")
		.def(&ActorBasicInfo::set_actor_config_id, "set_actor_config_id")
		// required int32 score = 20;
		.def(&ActorBasicInfo::score, "score")
		.def(&ActorBasicInfo::set_score, "set_score")
		// repeated int32 last_hp = 21;
		.def(&ActorBasicInfo::last_hp_size, "last_hp_size")
		.def<decltype(message->last_hp(0)) (ActorBasicInfo::*)(int) const>(&ActorBasicInfo::last_hp, "last_hp")
		.def<void(ActorBasicInfo::*)(int, const decltype(message->last_hp(0)))>(&ActorBasicInfo::set_last_hp, "set_last_hp")
		.def(&ActorBasicInfo::add_last_hp, "add_last_hp")
		// required int32 hair = 22;
		.def(&ActorBasicInfo::hair, "hair")
		.def(&ActorBasicInfo::set_hair, "set_hair")
		// required int32 gem_master_lv = 23;
		.def(&ActorBasicInfo::gem_master_lv, "gem_master_lv")
		.def(&ActorBasicInfo::set_gem_master_lv, "set_gem_master_lv")
		.def(&ActorBasicInfo::ByteSize, "ByteSize")
		.def(&ActorBasicInfo::SetInitialized, "SetInitialized")
		;
	return true;
}
bool ActorFormationPull_fflua_reg(lua_State* state)
{
//for decltype
	ActorFormationPull* message(nullptr);
	message;
	ff::fflua_register_t<ActorFormationPull, ctor()>(state, "ActorFormationPull", "google::protobuf::Message");
	return true;
}
bool ActorFormation_fflua_reg(lua_State* state)
{
//for decltype
	ActorFormation* message(nullptr);
	message;
	ff::fflua_register_t<ActorFormation, ctor()>(state, "ActorFormation", "google::protobuf::Message")
		// required fixed64 player_guid = 1;
		.def(&ActorFormation::player_guid, "player_guid")
		.def(&ActorFormation::set_player_guid, "set_player_guid")
		// required .Packet.ActorFigthFormation type = 2;
		.def(&ActorFormation::type, "type")
		.def(&ActorFormation::set_type, "set_type")
		// repeated fixed64 actor_guids = 3;
		.def(&ActorFormation::actor_guids_size, "actor_guids_size")
		.def<decltype(message->actor_guids(0)) (ActorFormation::*)(int) const>(&ActorFormation::actor_guids, "actor_guids")
		.def<void(ActorFormation::*)(int, const decltype(message->actor_guids(0)))>(&ActorFormation::set_actor_guids, "set_actor_guids")
		.def(&ActorFormation::add_actor_guids, "add_actor_guids")
		.def(&ActorFormation::ByteSize, "ByteSize")
		.def(&ActorFormation::SetInitialized, "SetInitialized")
		;
	return true;
}
bool ActorFormationAll_fflua_reg(lua_State* state)
{
//for decltype
	ActorFormationAll* message(nullptr);
	message;
	ff::fflua_register_t<ActorFormationAll, ctor()>(state, "ActorFormationAll", "google::protobuf::Message")
		// repeated .Packet.ActorFormation all_formations = 1;
		.def(&ActorFormationAll::all_formations_size, "all_formations_size")
		.def<decltype(message->all_formations(0)) (ActorFormationAll::*)(int) const>(&ActorFormationAll::all_formations, "all_formations")
		.def<decltype(message->mutable_all_formations(0)) (ActorFormationAll::*)(int)>(&ActorFormationAll::mutable_all_formations, "mutable_all_formations")
		.def(&ActorFormationAll::add_all_formations, "add_all_formations")
		.def(&ActorFormationAll::ByteSize, "ByteSize")
		.def(&ActorFormationAll::SetInitialized, "SetInitialized")
		;
	return true;
}
bool SetActorFightReq_fflua_reg(lua_State* state)
{
//for decltype
	SetActorFightReq* message(nullptr);
	message;
	ff::fflua_register_t<SetActorFightReq, ctor()>(state, "SetActorFightReq", "google::protobuf::Message")
		// required .Packet.ActorFigthFormation type = 1;
		.def(&SetActorFightReq::type, "type")
		.def(&SetActorFightReq::set_type, "set_type")
		// repeated fixed64 guids = 2;
		.def(&SetActorFightReq::guids_size, "guids_size")
		.def<decltype(message->guids(0)) (SetActorFightReq::*)(int) const>(&SetActorFightReq::guids, "guids")
		.def<void(SetActorFightReq::*)(int, const decltype(message->guids(0)))>(&SetActorFightReq::set_guids, "set_guids")
		.def(&SetActorFightReq::add_guids, "add_guids")
		.def(&SetActorFightReq::ByteSize, "ByteSize")
		.def(&SetActorFightReq::SetInitialized, "SetInitialized")
		;
	return true;
}
bool ActorLevelAndExpUpdate_fflua_reg(lua_State* state)
{
//for decltype
	ActorLevelAndExpUpdate* message(nullptr);
	message;
	ff::fflua_register_t<ActorLevelAndExpUpdate, ctor()>(state, "ActorLevelAndExpUpdate", "google::protobuf::Message")
		// required fixed64 guid = 1;
		.def(&ActorLevelAndExpUpdate::guid, "guid")
		.def(&ActorLevelAndExpUpdate::set_guid, "set_guid")
		// required int32 new_level = 2;
		.def(&ActorLevelAndExpUpdate::new_level, "new_level")
		.def(&ActorLevelAndExpUpdate::set_new_level, "set_new_level")
		// required int32 new_exp = 3;
		.def(&ActorLevelAndExpUpdate::new_exp, "new_exp")
		.def(&ActorLevelAndExpUpdate::set_new_exp, "set_new_exp")
		.def(&ActorLevelAndExpUpdate::ByteSize, "ByteSize")
		.def(&ActorLevelAndExpUpdate::SetInitialized, "SetInitialized")
		;
	return true;
}
bool ActorBattleInfoNotify_fflua_reg(lua_State* state)
{
//for decltype
	ActorBattleInfoNotify* message(nullptr);
	message;
	ff::fflua_register_t<ActorBattleInfoNotify, ctor()>(state, "ActorBattleInfoNotify", "google::protobuf::Message")
		// required fixed64 guid = 1;
		.def(&ActorBattleInfoNotify::guid, "guid")
		.def(&ActorBattleInfoNotify::set_guid, "set_guid")
		// required .Packet.BattleInfo battle_info = 2;
		.def(&ActorBattleInfoNotify::battle_info, "battle_info")
		.def(&ActorBattleInfoNotify::mutable_battle_info, "mutable_battle_info")
		// required int32 score = 3;
		.def(&ActorBattleInfoNotify::score, "score")
		.def(&ActorBattleInfoNotify::set_score, "set_score")
		.def(&ActorBattleInfoNotify::ByteSize, "ByteSize")
		.def(&ActorBattleInfoNotify::SetInitialized, "SetInitialized")
		;
	return true;
}
bool ActorSkillRefresh_fflua_reg(lua_State* state)
{
//for decltype
	ActorSkillRefresh* message(nullptr);
	message;
	ff::fflua_register_t<ActorSkillRefresh, ctor()>(state, "ActorSkillRefresh", "google::protobuf::Message")
		// required fixed64 actor_guid = 1;
		.def(&ActorSkillRefresh::actor_guid, "actor_guid")
		.def(&ActorSkillRefresh::set_actor_guid, "set_actor_guid")
		// repeated .Packet.ActorSkill skills = 2;
		.def(&ActorSkillRefresh::skills_size, "skills_size")
		.def<decltype(message->skills(0)) (ActorSkillRefresh::*)(int) const>(&ActorSkillRefresh::skills, "skills")
		.def<decltype(message->mutable_skills(0)) (ActorSkillRefresh::*)(int)>(&ActorSkillRefresh::mutable_skills, "mutable_skills")
		.def(&ActorSkillRefresh::add_skills, "add_skills")
		.def(&ActorSkillRefresh::ByteSize, "ByteSize")
		.def(&ActorSkillRefresh::SetInitialized, "SetInitialized")
		;
	return true;
}
bool ReNameRequest_fflua_reg(lua_State* state)
{
//for decltype
	ReNameRequest* message(nullptr);
	message;
	ff::fflua_register_t<ReNameRequest, ctor()>(state, "ReNameRequest", "google::protobuf::Message")
		// required string name = 1;
		.def(&ReNameRequest::name, "name")
		.def<void (ReNameRequest::*)(const std::string&)>(&ReNameRequest::set_name, "set_name")
		.def(&ReNameRequest::ByteSize, "ByteSize")
		.def(&ReNameRequest::SetInitialized, "SetInitialized")
		;
	return true;
}
bool ActorSkill_fflua_reg(lua_State* state)
{
//for decltype
	ActorSkill* message(nullptr);
	message;
	ff::fflua_register_t<ActorSkill, ctor()>(state, "ActorSkill", "google::protobuf::Message")
		// required fixed64 guid = 1;
		.def(&ActorSkill::guid, "guid")
		.def(&ActorSkill::set_guid, "set_guid")
		// required fixed64 actor_guid = 2;
		.def(&ActorSkill::actor_guid, "actor_guid")
		.def(&ActorSkill::set_actor_guid, "set_actor_guid")
		// required int32 skill_id = 3;
		.def(&ActorSkill::skill_id, "skill_id")
		.def(&ActorSkill::set_skill_id, "set_skill_id")
		// required int32 skill_level = 4;
		.def(&ActorSkill::skill_level, "skill_level")
		.def(&ActorSkill::set_skill_level, "set_skill_level")
		.def(&ActorSkill::ByteSize, "ByteSize")
		.def(&ActorSkill::SetInitialized, "SetInitialized")
		;
	return true;
}
bool ActorBasicInfo_fflua_regist_all(lua_State* state)
{
	ActorList_fflua_reg(state);
	ActorFullInfo_fflua_reg(state);
	ActorListReply_fflua_reg(state);
	NewActorNotify_fflua_reg(state);
	ActorBasicInfo_fflua_reg(state);
	ActorFormationPull_fflua_reg(state);
	ActorFormation_fflua_reg(state);
	ActorFormationAll_fflua_reg(state);
	SetActorFightReq_fflua_reg(state);
	ActorLevelAndExpUpdate_fflua_reg(state);
	ActorBattleInfoNotify_fflua_reg(state);
	ActorSkillRefresh_fflua_reg(state);
	ReNameRequest_fflua_reg(state);
	ActorSkill_fflua_reg(state);
	return true;
}
}

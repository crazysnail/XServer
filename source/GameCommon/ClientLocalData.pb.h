// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientLocalData.proto

#ifndef PROTOBUF_ClientLocalData_2eproto__INCLUDED
#define PROTOBUF_ClientLocalData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "FriendMail.pb.h"
// @@protoc_insertion_point(includes)

namespace Packet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ClientLocalData_2eproto();
void protobuf_AssignDesc_ClientLocalData_2eproto();
void protobuf_ShutdownFile_ClientLocalData_2eproto();

class FriendMessages;
class FriendsMessages;
class SystemMessages;
class MessageRecords;

// ===================================================================

class FriendMessages : public ::google::protobuf::Message {
 public:
  FriendMessages();
  virtual ~FriendMessages();

  FriendMessages(const FriendMessages& from);

  inline FriendMessages& operator=(const FriendMessages& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendMessages& default_instance();

  void Swap(FriendMessages* other);

  // implements Message ----------------------------------------------

  FriendMessages* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendMessages& from);
  void MergeFrom(const FriendMessages& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // repeated .Packet.FriendMessageInfo messages = 2;
  inline int messages_size() const;
  inline void clear_messages();
  static const int kMessagesFieldNumber = 2;
  inline const ::Packet::FriendMessageInfo& messages(int index) const;
  inline ::Packet::FriendMessageInfo* mutable_messages(int index);
  inline ::Packet::FriendMessageInfo* add_messages();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::FriendMessageInfo >&
      messages() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::FriendMessageInfo >*
      mutable_messages();

  // @@protoc_insertion_point(class_scope:Packet.FriendMessages)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::RepeatedPtrField< ::Packet::FriendMessageInfo > messages_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientLocalData_2eproto();
  friend void protobuf_AssignDesc_ClientLocalData_2eproto();
  friend void protobuf_ShutdownFile_ClientLocalData_2eproto();

  void InitAsDefaultInstance();
  static FriendMessages* default_instance_;
};
// -------------------------------------------------------------------

class FriendsMessages : public ::google::protobuf::Message {
 public:
  FriendsMessages();
  virtual ~FriendsMessages();

  FriendsMessages(const FriendsMessages& from);

  inline FriendsMessages& operator=(const FriendsMessages& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendsMessages& default_instance();

  void Swap(FriendsMessages* other);

  // implements Message ----------------------------------------------

  FriendsMessages* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendsMessages& from);
  void MergeFrom(const FriendsMessages& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.FriendMessages info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::Packet::FriendMessages& info(int index) const;
  inline ::Packet::FriendMessages* mutable_info(int index);
  inline ::Packet::FriendMessages* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::FriendMessages >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::FriendMessages >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:Packet.FriendsMessages)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::FriendMessages > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ClientLocalData_2eproto();
  friend void protobuf_AssignDesc_ClientLocalData_2eproto();
  friend void protobuf_ShutdownFile_ClientLocalData_2eproto();

  void InitAsDefaultInstance();
  static FriendsMessages* default_instance_;
};
// -------------------------------------------------------------------

class SystemMessages : public ::google::protobuf::Message {
 public:
  SystemMessages();
  virtual ~SystemMessages();

  SystemMessages(const SystemMessages& from);

  inline SystemMessages& operator=(const SystemMessages& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemMessages& default_instance();

  void Swap(SystemMessages* other);

  // implements Message ----------------------------------------------

  SystemMessages* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SystemMessages& from);
  void MergeFrom(const SystemMessages& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.FriendMessageInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::Packet::FriendMessageInfo& info(int index) const;
  inline ::Packet::FriendMessageInfo* mutable_info(int index);
  inline ::Packet::FriendMessageInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::FriendMessageInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::FriendMessageInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:Packet.SystemMessages)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::FriendMessageInfo > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ClientLocalData_2eproto();
  friend void protobuf_AssignDesc_ClientLocalData_2eproto();
  friend void protobuf_ShutdownFile_ClientLocalData_2eproto();

  void InitAsDefaultInstance();
  static SystemMessages* default_instance_;
};
// -------------------------------------------------------------------

class MessageRecords : public ::google::protobuf::Message {
 public:
  MessageRecords();
  virtual ~MessageRecords();

  MessageRecords(const MessageRecords& from);

  inline MessageRecords& operator=(const MessageRecords& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageRecords& default_instance();

  void Swap(MessageRecords* other);

  // implements Message ----------------------------------------------

  MessageRecords* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageRecords& from);
  void MergeFrom(const MessageRecords& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.SystemMessages system = 1;
  inline bool has_system() const;
  inline void clear_system();
  static const int kSystemFieldNumber = 1;
  inline const ::Packet::SystemMessages& system() const;
  inline ::Packet::SystemMessages* mutable_system();
  inline ::Packet::SystemMessages* release_system();
  inline void set_allocated_system(::Packet::SystemMessages* system);

  // required .Packet.FriendsMessages friends = 2;
  inline bool has_friends() const;
  inline void clear_friends();
  static const int kFriendsFieldNumber = 2;
  inline const ::Packet::FriendsMessages& friends() const;
  inline ::Packet::FriendsMessages* mutable_friends();
  inline ::Packet::FriendsMessages* release_friends();
  inline void set_allocated_friends(::Packet::FriendsMessages* friends);

  // @@protoc_insertion_point(class_scope:Packet.MessageRecords)
 private:
  inline void set_has_system();
  inline void clear_has_system();
  inline void set_has_friends();
  inline void clear_has_friends();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::SystemMessages* system_;
  ::Packet::FriendsMessages* friends_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ClientLocalData_2eproto();
  friend void protobuf_AssignDesc_ClientLocalData_2eproto();
  friend void protobuf_ShutdownFile_ClientLocalData_2eproto();

  void InitAsDefaultInstance();
  static MessageRecords* default_instance_;
};
// ===================================================================


// ===================================================================

// FriendMessages

// required fixed64 guid = 1;
inline bool FriendMessages::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendMessages::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendMessages::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendMessages::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 FriendMessages::guid() const {
  return guid_;
}
inline void FriendMessages::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// repeated .Packet.FriendMessageInfo messages = 2;
inline int FriendMessages::messages_size() const {
  return messages_.size();
}
inline void FriendMessages::clear_messages() {
  messages_.Clear();
  SetDirty();
}
inline const ::Packet::FriendMessageInfo& FriendMessages::messages(int index) const {
  return messages_.Get(index);
}
inline ::Packet::FriendMessageInfo* FriendMessages::mutable_messages(int index) {
  SetDirty();
  return messages_.Mutable(index);
}
inline ::Packet::FriendMessageInfo* FriendMessages::add_messages() {
  SetDirty();
  return messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::FriendMessageInfo >&
FriendMessages::messages() const {
  return messages_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::FriendMessageInfo >*
FriendMessages::mutable_messages() {
  SetDirty();
  return &messages_;
}

// -------------------------------------------------------------------

// FriendsMessages

// repeated .Packet.FriendMessages info = 1;
inline int FriendsMessages::info_size() const {
  return info_.size();
}
inline void FriendsMessages::clear_info() {
  info_.Clear();
  SetDirty();
}
inline const ::Packet::FriendMessages& FriendsMessages::info(int index) const {
  return info_.Get(index);
}
inline ::Packet::FriendMessages* FriendsMessages::mutable_info(int index) {
  SetDirty();
  return info_.Mutable(index);
}
inline ::Packet::FriendMessages* FriendsMessages::add_info() {
  SetDirty();
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::FriendMessages >&
FriendsMessages::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::FriendMessages >*
FriendsMessages::mutable_info() {
  SetDirty();
  return &info_;
}

// -------------------------------------------------------------------

// SystemMessages

// repeated .Packet.FriendMessageInfo info = 1;
inline int SystemMessages::info_size() const {
  return info_.size();
}
inline void SystemMessages::clear_info() {
  info_.Clear();
  SetDirty();
}
inline const ::Packet::FriendMessageInfo& SystemMessages::info(int index) const {
  return info_.Get(index);
}
inline ::Packet::FriendMessageInfo* SystemMessages::mutable_info(int index) {
  SetDirty();
  return info_.Mutable(index);
}
inline ::Packet::FriendMessageInfo* SystemMessages::add_info() {
  SetDirty();
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::FriendMessageInfo >&
SystemMessages::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::FriendMessageInfo >*
SystemMessages::mutable_info() {
  SetDirty();
  return &info_;
}

// -------------------------------------------------------------------

// MessageRecords

// required .Packet.SystemMessages system = 1;
inline bool MessageRecords::has_system() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageRecords::set_has_system() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageRecords::clear_has_system() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageRecords::clear_system() {
  if (system_ != NULL) system_->::Packet::SystemMessages::Clear();
  clear_has_system();
  SetDirty();
}
inline const ::Packet::SystemMessages& MessageRecords::system() const {
  return system_ != NULL ? *system_ : *default_instance_->system_;
}
inline ::Packet::SystemMessages* MessageRecords::mutable_system() {
  SetDirty();
  set_has_system();
  if (system_ == NULL) system_ = new ::Packet::SystemMessages;
  return system_;
}
inline ::Packet::SystemMessages* MessageRecords::release_system() {
  SetDirty();
  clear_has_system();
  ::Packet::SystemMessages* temp = system_;
  system_ = NULL;
  return temp;
}
inline void MessageRecords::set_allocated_system(::Packet::SystemMessages* system) {
  SetDirty();
  delete system_;
  system_ = system;
  if (system) {
    set_has_system();
  } else {
    clear_has_system();
  }
}

// required .Packet.FriendsMessages friends = 2;
inline bool MessageRecords::has_friends() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageRecords::set_has_friends() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageRecords::clear_has_friends() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageRecords::clear_friends() {
  if (friends_ != NULL) friends_->::Packet::FriendsMessages::Clear();
  clear_has_friends();
  SetDirty();
}
inline const ::Packet::FriendsMessages& MessageRecords::friends() const {
  return friends_ != NULL ? *friends_ : *default_instance_->friends_;
}
inline ::Packet::FriendsMessages* MessageRecords::mutable_friends() {
  SetDirty();
  set_has_friends();
  if (friends_ == NULL) friends_ = new ::Packet::FriendsMessages;
  return friends_;
}
inline ::Packet::FriendsMessages* MessageRecords::release_friends() {
  SetDirty();
  clear_has_friends();
  ::Packet::FriendsMessages* temp = friends_;
  friends_ = NULL;
  return temp;
}
inline void MessageRecords::set_allocated_friends(::Packet::FriendsMessages* friends) {
  SetDirty();
  delete friends_;
  friends_ = friends;
  if (friends) {
    set_has_friends();
  } else {
    clear_has_friends();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Packet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ClientLocalData_2eproto__INCLUDED

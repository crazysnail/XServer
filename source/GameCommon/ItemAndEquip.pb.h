// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ItemAndEquip.proto

#ifndef PROTOBUF_ItemAndEquip_2eproto__INCLUDED
#define PROTOBUF_ItemAndEquip_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "AllPacketEnum.pb.h"
#include "AllConfigEnum.pb.h"
#include "ProtoBufOption.pb.h"
#include "EquipmentConfig.pb.h"
#include "BattleInfo.pb.h"
#include "MarketConfig.pb.h"
#include "ItemConfig.pb.h"
// @@protoc_insertion_point(includes)

namespace Packet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ItemAndEquip_2eproto();
void protobuf_AssignDesc_ItemAndEquip_2eproto();
void protobuf_ShutdownFile_ItemAndEquip_2eproto();

class Container;
class NormalItem;
class EquipItem;
class EquipItem_EquipEnchant;
class GemItem;
class ClientItemInfo;
class MessageHyperItemInfo;
class PlayerContainerRequest;
class PlayerContainerReply;
class PlayerContainerAddItemNotify;
class PlayerContainerDelItemNotify;
class PlayerContainerRefreshItemNotify;
class ActorAddEquipRequest;
class ActorDelEquipRequest;
class Market;
class PlayerMarketReply;
class UpdatePlayerMarketItem;
class UpdateArrangeInfoReply;
class MoveItemRequest;
class ExtendContainerRequest;
class NotifyItemItem;
class StatisticsResult;
class NotifyItemList;

// ===================================================================

class Container : public ::google::protobuf::Message {
 public:
  Container();
  virtual ~Container();

  Container(const Container& from);

  inline Container& operator=(const Container& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Container& default_instance();

  void Swap(Container* other);

  // implements Message ----------------------------------------------

  Container* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Container& from);
  void MergeFrom(const Container& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required fixed64 player_guid = 2;
  inline bool has_player_guid() const;
  inline void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 player_guid() const;
  inline void set_player_guid(::google::protobuf::uint64 value);

  // required int32 max_block = 3;
  inline bool has_max_block() const;
  inline void clear_max_block();
  static const int kMaxBlockFieldNumber = 3;
  inline ::google::protobuf::int32 max_block() const;
  inline void set_max_block(::google::protobuf::int32 value);

  // required int32 crystal_opened_block = 4;
  inline bool has_crystal_opened_block() const;
  inline void clear_crystal_opened_block();
  static const int kCrystalOpenedBlockFieldNumber = 4;
  inline ::google::protobuf::int32 crystal_opened_block() const;
  inline void set_crystal_opened_block(::google::protobuf::int32 value);

  // required int32 item_opened_block = 5;
  inline bool has_item_opened_block() const;
  inline void clear_item_opened_block();
  static const int kItemOpenedBlockFieldNumber = 5;
  inline ::google::protobuf::int32 item_opened_block() const;
  inline void set_item_opened_block(::google::protobuf::int32 value);

  // required .Packet.ContainerType type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::Packet::ContainerType type() const;
  inline void set_type(::Packet::ContainerType value);

  // @@protoc_insertion_point(class_scope:Packet.Container)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_player_guid();
  inline void clear_has_player_guid();
  inline void set_has_max_block();
  inline void clear_has_max_block();
  inline void set_has_crystal_opened_block();
  inline void clear_has_crystal_opened_block();
  inline void set_has_item_opened_block();
  inline void clear_has_item_opened_block();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 player_guid_;
  ::google::protobuf::int32 max_block_;
  ::google::protobuf::int32 crystal_opened_block_;
  ::google::protobuf::int32 item_opened_block_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static Container* default_instance_;
};
// -------------------------------------------------------------------

class NormalItem : public ::google::protobuf::Message {
 public:
  NormalItem();
  virtual ~NormalItem();

  NormalItem(const NormalItem& from);

  inline NormalItem& operator=(const NormalItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NormalItem& default_instance();

  void Swap(NormalItem* other);

  // implements Message ----------------------------------------------

  NormalItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NormalItem& from);
  void MergeFrom(const NormalItem& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required fixed64 container_guid = 2;
  inline bool has_container_guid() const;
  inline void clear_container_guid();
  static const int kContainerGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 container_guid() const;
  inline void set_container_guid(::google::protobuf::uint64 value);

  // required int32 config_id = 3;
  inline bool has_config_id() const;
  inline void clear_config_id();
  static const int kConfigIdFieldNumber = 3;
  inline ::google::protobuf::int32 config_id() const;
  inline void set_config_id(::google::protobuf::int32 value);

  // required int32 count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // required int32 param = 5;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 5;
  inline ::google::protobuf::int32 param() const;
  inline void set_param(::google::protobuf::int32 value);

  // required int32 cool_down = 6;
  inline bool has_cool_down() const;
  inline void clear_cool_down();
  static const int kCoolDownFieldNumber = 6;
  inline ::google::protobuf::int32 cool_down() const;
  inline void set_cool_down(::google::protobuf::int32 value);

  // required int32 life_time = 7;
  inline bool has_life_time() const;
  inline void clear_life_time();
  static const int kLifeTimeFieldNumber = 7;
  inline ::google::protobuf::int32 life_time() const;
  inline void set_life_time(::google::protobuf::int32 value);

  // required int32 lock_flag = 8 [default = 0];
  inline bool has_lock_flag() const;
  inline void clear_lock_flag();
  static const int kLockFlagFieldNumber = 8;
  inline ::google::protobuf::int32 lock_flag() const;
  inline void set_lock_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.NormalItem)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_container_guid();
  inline void clear_has_container_guid();
  inline void set_has_config_id();
  inline void clear_has_config_id();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_cool_down();
  inline void clear_has_cool_down();
  inline void set_has_life_time();
  inline void clear_has_life_time();
  inline void set_has_lock_flag();
  inline void clear_has_lock_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 container_guid_;
  ::google::protobuf::int32 config_id_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 param_;
  ::google::protobuf::int32 cool_down_;
  ::google::protobuf::int32 life_time_;
  ::google::protobuf::int32 lock_flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static NormalItem* default_instance_;
};
// -------------------------------------------------------------------

class EquipItem_EquipEnchant : public ::google::protobuf::Message {
 public:
  EquipItem_EquipEnchant();
  virtual ~EquipItem_EquipEnchant();

  EquipItem_EquipEnchant(const EquipItem_EquipEnchant& from);

  inline EquipItem_EquipEnchant& operator=(const EquipItem_EquipEnchant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipItem_EquipEnchant& default_instance();

  void Swap(EquipItem_EquipEnchant* other);

  // implements Message ----------------------------------------------

  EquipItem_EquipEnchant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipItem_EquipEnchant& from);
  void MergeFrom(const EquipItem_EquipEnchant& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool slot_open = 1;
  inline bool has_slot_open() const;
  inline void clear_slot_open();
  static const int kSlotOpenFieldNumber = 1;
  inline bool slot_open() const;
  inline void set_slot_open(bool value);

  // required string effect_type = 2;
  inline bool has_effect_type() const;
  inline void clear_effect_type();
  static const int kEffectTypeFieldNumber = 2;
  inline const ::std::string& effect_type() const;
  inline void set_effect_type(const ::std::string& value);
  inline void set_effect_type(const char* value);
  inline void set_effect_type(const char* value, size_t size);
  inline ::std::string* mutable_effect_type();
  inline ::std::string* release_effect_type();
  inline void set_allocated_effect_type(::std::string* effect_type);

  // required int32 effect_value = 3;
  inline bool has_effect_value() const;
  inline void clear_effect_value();
  static const int kEffectValueFieldNumber = 3;
  inline ::google::protobuf::int32 effect_value() const;
  inline void set_effect_value(::google::protobuf::int32 value);

  // required int32 max_value = 4;
  inline bool has_max_value() const;
  inline void clear_max_value();
  static const int kMaxValueFieldNumber = 4;
  inline ::google::protobuf::int32 max_value() const;
  inline void set_max_value(::google::protobuf::int32 value);

  // required bool client_lock = 5;
  inline bool has_client_lock() const;
  inline void clear_client_lock();
  static const int kClientLockFieldNumber = 5;
  inline bool client_lock() const;
  inline void set_client_lock(bool value);

  // @@protoc_insertion_point(class_scope:Packet.EquipItem.EquipEnchant)
 private:
  inline void set_has_slot_open();
  inline void clear_has_slot_open();
  inline void set_has_effect_type();
  inline void clear_has_effect_type();
  inline void set_has_effect_value();
  inline void clear_has_effect_value();
  inline void set_has_max_value();
  inline void clear_has_max_value();
  inline void set_has_client_lock();
  inline void clear_has_client_lock();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* effect_type_;
  ::google::protobuf::int32 effect_value_;
  bool slot_open_;
  bool client_lock_;
  ::google::protobuf::int32 max_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static EquipItem_EquipEnchant* default_instance_;
};
// -------------------------------------------------------------------

class EquipItem : public ::google::protobuf::Message {
 public:
  EquipItem();
  virtual ~EquipItem();

  EquipItem(const EquipItem& from);

  inline EquipItem& operator=(const EquipItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipItem& default_instance();

  void Swap(EquipItem* other);

  // implements Message ----------------------------------------------

  EquipItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipItem& from);
  void MergeFrom(const EquipItem& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef EquipItem_EquipEnchant EquipEnchant;

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required fixed64 container_guid = 2;
  inline bool has_container_guid() const;
  inline void clear_container_guid();
  static const int kContainerGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 container_guid() const;
  inline void set_container_guid(::google::protobuf::uint64 value);

  // required int32 config_id = 3;
  inline bool has_config_id() const;
  inline void clear_config_id();
  static const int kConfigIdFieldNumber = 3;
  inline ::google::protobuf::int32 config_id() const;
  inline void set_config_id(::google::protobuf::int32 value);

  // required float durable = 4;
  inline bool has_durable() const;
  inline void clear_durable();
  static const int kDurableFieldNumber = 4;
  inline float durable() const;
  inline void set_durable(float value);

  // required int32 enhence_level = 5;
  inline bool has_enhence_level() const;
  inline void clear_enhence_level();
  static const int kEnhenceLevelFieldNumber = 5;
  inline ::google::protobuf::int32 enhence_level() const;
  inline void set_enhence_level(::google::protobuf::int32 value);

  // repeated .Packet.EquipItem.EquipEnchant enchants = 6;
  inline int enchants_size() const;
  inline void clear_enchants();
  static const int kEnchantsFieldNumber = 6;
  inline const ::Packet::EquipItem_EquipEnchant& enchants(int index) const;
  inline ::Packet::EquipItem_EquipEnchant* mutable_enchants(int index);
  inline ::Packet::EquipItem_EquipEnchant* add_enchants();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::EquipItem_EquipEnchant >&
      enchants() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::EquipItem_EquipEnchant >*
      mutable_enchants();

  // repeated int32 gems = 7;
  inline int gems_size() const;
  inline void clear_gems();
  static const int kGemsFieldNumber = 7;
  inline ::google::protobuf::int32 gems(int index) const;
  inline void set_gems(int index, ::google::protobuf::int32 value);
  inline void add_gems(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gems() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gems();

  // required fixed64 actor_guid = 8;
  inline bool has_actor_guid() const;
  inline void clear_actor_guid();
  static const int kActorGuidFieldNumber = 8;
  inline ::google::protobuf::uint64 actor_guid() const;
  inline void set_actor_guid(::google::protobuf::uint64 value);

  // required .Config.EquipmentSlot slot = 9;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 9;
  inline ::Config::EquipmentSlot slot() const;
  inline void set_slot(::Config::EquipmentSlot value);

  // required int32 magical_res_id = 10 [default = -1];
  inline bool has_magical_res_id() const;
  inline void clear_magical_res_id();
  static const int kMagicalResIdFieldNumber = 10;
  inline ::google::protobuf::int32 magical_res_id() const;
  inline void set_magical_res_id(::google::protobuf::int32 value);

  // required int32 lock_flag = 11 [default = 0];
  inline bool has_lock_flag() const;
  inline void clear_lock_flag();
  static const int kLockFlagFieldNumber = 11;
  inline ::google::protobuf::int32 lock_flag() const;
  inline void set_lock_flag(::google::protobuf::int32 value);

  // required fixed64 bind_actor_guid = 12;
  inline bool has_bind_actor_guid() const;
  inline void clear_bind_actor_guid();
  static const int kBindActorGuidFieldNumber = 12;
  inline ::google::protobuf::uint64 bind_actor_guid() const;
  inline void set_bind_actor_guid(::google::protobuf::uint64 value);

  // required int32 score = 13;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 13;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.EquipItem)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_container_guid();
  inline void clear_has_container_guid();
  inline void set_has_config_id();
  inline void clear_has_config_id();
  inline void set_has_durable();
  inline void clear_has_durable();
  inline void set_has_enhence_level();
  inline void clear_has_enhence_level();
  inline void set_has_actor_guid();
  inline void clear_has_actor_guid();
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_magical_res_id();
  inline void clear_has_magical_res_id();
  inline void set_has_lock_flag();
  inline void clear_has_lock_flag();
  inline void set_has_bind_actor_guid();
  inline void clear_has_bind_actor_guid();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 container_guid_;
  ::google::protobuf::int32 config_id_;
  float durable_;
  ::google::protobuf::RepeatedPtrField< ::Packet::EquipItem_EquipEnchant > enchants_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gems_;
  ::google::protobuf::int32 enhence_level_;
  int slot_;
  ::google::protobuf::uint64 actor_guid_;
  ::google::protobuf::int32 magical_res_id_;
  ::google::protobuf::int32 lock_flag_;
  ::google::protobuf::uint64 bind_actor_guid_;
  ::google::protobuf::int32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static EquipItem* default_instance_;
};
// -------------------------------------------------------------------

class GemItem : public ::google::protobuf::Message {
 public:
  GemItem();
  virtual ~GemItem();

  GemItem(const GemItem& from);

  inline GemItem& operator=(const GemItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GemItem& default_instance();

  void Swap(GemItem* other);

  // implements Message ----------------------------------------------

  GemItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GemItem& from);
  void MergeFrom(const GemItem& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required fixed64 container_guid = 2;
  inline bool has_container_guid() const;
  inline void clear_container_guid();
  static const int kContainerGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 container_guid() const;
  inline void set_container_guid(::google::protobuf::uint64 value);

  // required int32 config_id = 3;
  inline bool has_config_id() const;
  inline void clear_config_id();
  static const int kConfigIdFieldNumber = 3;
  inline ::google::protobuf::int32 config_id() const;
  inline void set_config_id(::google::protobuf::int32 value);

  // required fixed64 equip_guid = 4;
  inline bool has_equip_guid() const;
  inline void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 4;
  inline ::google::protobuf::uint64 equip_guid() const;
  inline void set_equip_guid(::google::protobuf::uint64 value);

  // required int32 count = 5;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 5;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // required int32 lock_flag = 6 [default = 0];
  inline bool has_lock_flag() const;
  inline void clear_lock_flag();
  static const int kLockFlagFieldNumber = 6;
  inline ::google::protobuf::int32 lock_flag() const;
  inline void set_lock_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.GemItem)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_container_guid();
  inline void clear_has_container_guid();
  inline void set_has_config_id();
  inline void clear_has_config_id();
  inline void set_has_equip_guid();
  inline void clear_has_equip_guid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_lock_flag();
  inline void clear_has_lock_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 container_guid_;
  ::google::protobuf::uint64 equip_guid_;
  ::google::protobuf::int32 config_id_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 lock_flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static GemItem* default_instance_;
};
// -------------------------------------------------------------------

class ClientItemInfo : public ::google::protobuf::Message {
 public:
  ClientItemInfo();
  virtual ~ClientItemInfo();

  ClientItemInfo(const ClientItemInfo& from);

  inline ClientItemInfo& operator=(const ClientItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientItemInfo& default_instance();

  void Swap(ClientItemInfo* other);

  // implements Message ----------------------------------------------

  ClientItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientItemInfo& from);
  void MergeFrom(const ClientItemInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Packet.EquipItem equip_item = 1;
  inline bool has_equip_item() const;
  inline void clear_equip_item();
  static const int kEquipItemFieldNumber = 1;
  inline const ::Packet::EquipItem& equip_item() const;
  inline ::Packet::EquipItem* mutable_equip_item();
  inline ::Packet::EquipItem* release_equip_item();
  inline void set_allocated_equip_item(::Packet::EquipItem* equip_item);

  // optional .Packet.NormalItem normal_item = 2;
  inline bool has_normal_item() const;
  inline void clear_normal_item();
  static const int kNormalItemFieldNumber = 2;
  inline const ::Packet::NormalItem& normal_item() const;
  inline ::Packet::NormalItem* mutable_normal_item();
  inline ::Packet::NormalItem* release_normal_item();
  inline void set_allocated_normal_item(::Packet::NormalItem* normal_item);

  // optional .Packet.GemItem gem_item = 3;
  inline bool has_gem_item() const;
  inline void clear_gem_item();
  static const int kGemItemFieldNumber = 3;
  inline const ::Packet::GemItem& gem_item() const;
  inline ::Packet::GemItem* mutable_gem_item();
  inline ::Packet::GemItem* release_gem_item();
  inline void set_allocated_gem_item(::Packet::GemItem* gem_item);

  // @@protoc_insertion_point(class_scope:Packet.ClientItemInfo)
 private:
  inline void set_has_equip_item();
  inline void clear_has_equip_item();
  inline void set_has_normal_item();
  inline void clear_has_normal_item();
  inline void set_has_gem_item();
  inline void clear_has_gem_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::EquipItem* equip_item_;
  ::Packet::NormalItem* normal_item_;
  ::Packet::GemItem* gem_item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static ClientItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class MessageHyperItemInfo : public ::google::protobuf::Message {
 public:
  MessageHyperItemInfo();
  virtual ~MessageHyperItemInfo();

  MessageHyperItemInfo(const MessageHyperItemInfo& from);

  inline MessageHyperItemInfo& operator=(const MessageHyperItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageHyperItemInfo& default_instance();

  void Swap(MessageHyperItemInfo* other);

  // implements Message ----------------------------------------------

  MessageHyperItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageHyperItemInfo& from);
  void MergeFrom(const MessageHyperItemInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.ClientItemInfo iteminfo = 1;
  inline int iteminfo_size() const;
  inline void clear_iteminfo();
  static const int kIteminfoFieldNumber = 1;
  inline const ::Packet::ClientItemInfo& iteminfo(int index) const;
  inline ::Packet::ClientItemInfo* mutable_iteminfo(int index);
  inline ::Packet::ClientItemInfo* add_iteminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo >&
      iteminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo >*
      mutable_iteminfo();

  // @@protoc_insertion_point(class_scope:Packet.MessageHyperItemInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo > iteminfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static MessageHyperItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class PlayerContainerRequest : public ::google::protobuf::Message {
 public:
  PlayerContainerRequest();
  virtual ~PlayerContainerRequest();

  PlayerContainerRequest(const PlayerContainerRequest& from);

  inline PlayerContainerRequest& operator=(const PlayerContainerRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerContainerRequest& default_instance();

  void Swap(PlayerContainerRequest* other);

  // implements Message ----------------------------------------------

  PlayerContainerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerContainerRequest& from);
  void MergeFrom(const PlayerContainerRequest& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.ContainerType container_type = 1;
  inline bool has_container_type() const;
  inline void clear_container_type();
  static const int kContainerTypeFieldNumber = 1;
  inline ::Packet::ContainerType container_type() const;
  inline void set_container_type(::Packet::ContainerType value);

  // @@protoc_insertion_point(class_scope:Packet.PlayerContainerRequest)
 private:
  inline void set_has_container_type();
  inline void clear_has_container_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int container_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static PlayerContainerRequest* default_instance_;
};
// -------------------------------------------------------------------

class PlayerContainerReply : public ::google::protobuf::Message {
 public:
  PlayerContainerReply();
  virtual ~PlayerContainerReply();

  PlayerContainerReply(const PlayerContainerReply& from);

  inline PlayerContainerReply& operator=(const PlayerContainerReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerContainerReply& default_instance();

  void Swap(PlayerContainerReply* other);

  // implements Message ----------------------------------------------

  PlayerContainerReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerContainerReply& from);
  void MergeFrom(const PlayerContainerReply& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.ContainerType container_type = 1;
  inline bool has_container_type() const;
  inline void clear_container_type();
  static const int kContainerTypeFieldNumber = 1;
  inline ::Packet::ContainerType container_type() const;
  inline void set_container_type(::Packet::ContainerType value);

  // repeated .Packet.ClientItemInfo items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::Packet::ClientItemInfo& items(int index) const;
  inline ::Packet::ClientItemInfo* mutable_items(int index);
  inline ::Packet::ClientItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo >*
      mutable_items();

  // required int32 max_block = 3;
  inline bool has_max_block() const;
  inline void clear_max_block();
  static const int kMaxBlockFieldNumber = 3;
  inline ::google::protobuf::int32 max_block() const;
  inline void set_max_block(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.PlayerContainerReply)
 private:
  inline void set_has_container_type();
  inline void clear_has_container_type();
  inline void set_has_max_block();
  inline void clear_has_max_block();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo > items_;
  int container_type_;
  ::google::protobuf::int32 max_block_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static PlayerContainerReply* default_instance_;
};
// -------------------------------------------------------------------

class PlayerContainerAddItemNotify : public ::google::protobuf::Message {
 public:
  PlayerContainerAddItemNotify();
  virtual ~PlayerContainerAddItemNotify();

  PlayerContainerAddItemNotify(const PlayerContainerAddItemNotify& from);

  inline PlayerContainerAddItemNotify& operator=(const PlayerContainerAddItemNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerContainerAddItemNotify& default_instance();

  void Swap(PlayerContainerAddItemNotify* other);

  // implements Message ----------------------------------------------

  PlayerContainerAddItemNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerContainerAddItemNotify& from);
  void MergeFrom(const PlayerContainerAddItemNotify& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.ContainerType container_type = 1;
  inline bool has_container_type() const;
  inline void clear_container_type();
  static const int kContainerTypeFieldNumber = 1;
  inline ::Packet::ContainerType container_type() const;
  inline void set_container_type(::Packet::ContainerType value);

  // repeated .Packet.ClientItemInfo items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::Packet::ClientItemInfo& items(int index) const;
  inline ::Packet::ClientItemInfo* mutable_items(int index);
  inline ::Packet::ClientItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Packet.PlayerContainerAddItemNotify)
 private:
  inline void set_has_container_type();
  inline void clear_has_container_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo > items_;
  int container_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static PlayerContainerAddItemNotify* default_instance_;
};
// -------------------------------------------------------------------

class PlayerContainerDelItemNotify : public ::google::protobuf::Message {
 public:
  PlayerContainerDelItemNotify();
  virtual ~PlayerContainerDelItemNotify();

  PlayerContainerDelItemNotify(const PlayerContainerDelItemNotify& from);

  inline PlayerContainerDelItemNotify& operator=(const PlayerContainerDelItemNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerContainerDelItemNotify& default_instance();

  void Swap(PlayerContainerDelItemNotify* other);

  // implements Message ----------------------------------------------

  PlayerContainerDelItemNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerContainerDelItemNotify& from);
  void MergeFrom(const PlayerContainerDelItemNotify& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.ContainerType container_type = 1;
  inline bool has_container_type() const;
  inline void clear_container_type();
  static const int kContainerTypeFieldNumber = 1;
  inline ::Packet::ContainerType container_type() const;
  inline void set_container_type(::Packet::ContainerType value);

  // repeated fixed64 guids = 2;
  inline int guids_size() const;
  inline void clear_guids();
  static const int kGuidsFieldNumber = 2;
  inline ::google::protobuf::uint64 guids(int index) const;
  inline void set_guids(int index, ::google::protobuf::uint64 value);
  inline void add_guids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guids();

  // @@protoc_insertion_point(class_scope:Packet.PlayerContainerDelItemNotify)
 private:
  inline void set_has_container_type();
  inline void clear_has_container_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guids_;
  int container_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static PlayerContainerDelItemNotify* default_instance_;
};
// -------------------------------------------------------------------

class PlayerContainerRefreshItemNotify : public ::google::protobuf::Message {
 public:
  PlayerContainerRefreshItemNotify();
  virtual ~PlayerContainerRefreshItemNotify();

  PlayerContainerRefreshItemNotify(const PlayerContainerRefreshItemNotify& from);

  inline PlayerContainerRefreshItemNotify& operator=(const PlayerContainerRefreshItemNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerContainerRefreshItemNotify& default_instance();

  void Swap(PlayerContainerRefreshItemNotify* other);

  // implements Message ----------------------------------------------

  PlayerContainerRefreshItemNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerContainerRefreshItemNotify& from);
  void MergeFrom(const PlayerContainerRefreshItemNotify& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.ContainerType container_type = 1;
  inline bool has_container_type() const;
  inline void clear_container_type();
  static const int kContainerTypeFieldNumber = 1;
  inline ::Packet::ContainerType container_type() const;
  inline void set_container_type(::Packet::ContainerType value);

  // repeated .Packet.ClientItemInfo items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::Packet::ClientItemInfo& items(int index) const;
  inline ::Packet::ClientItemInfo* mutable_items(int index);
  inline ::Packet::ClientItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo >*
      mutable_items();

  // optional .Packet.ResultOption option = 3;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 3;
  inline ::Packet::ResultOption option() const;
  inline void set_option(::Packet::ResultOption value);

  // @@protoc_insertion_point(class_scope:Packet.PlayerContainerRefreshItemNotify)
 private:
  inline void set_has_container_type();
  inline void clear_has_container_type();
  inline void set_has_option();
  inline void clear_has_option();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo > items_;
  int container_type_;
  int option_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static PlayerContainerRefreshItemNotify* default_instance_;
};
// -------------------------------------------------------------------

class ActorAddEquipRequest : public ::google::protobuf::Message {
 public:
  ActorAddEquipRequest();
  virtual ~ActorAddEquipRequest();

  ActorAddEquipRequest(const ActorAddEquipRequest& from);

  inline ActorAddEquipRequest& operator=(const ActorAddEquipRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorAddEquipRequest& default_instance();

  void Swap(ActorAddEquipRequest* other);

  // implements Message ----------------------------------------------

  ActorAddEquipRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorAddEquipRequest& from);
  void MergeFrom(const ActorAddEquipRequest& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 actor_guid = 1;
  inline bool has_actor_guid() const;
  inline void clear_actor_guid();
  static const int kActorGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 actor_guid() const;
  inline void set_actor_guid(::google::protobuf::uint64 value);

  // repeated fixed64 equip_guid = 2;
  inline int equip_guid_size() const;
  inline void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 equip_guid(int index) const;
  inline void set_equip_guid(int index, ::google::protobuf::uint64 value);
  inline void add_equip_guid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      equip_guid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_equip_guid();

  // repeated .Config.EquipmentSlot slot = 3;
  inline int slot_size() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 3;
  inline ::Config::EquipmentSlot slot(int index) const;
  inline void set_slot(int index, ::Config::EquipmentSlot value);
  inline void add_slot(::Config::EquipmentSlot value);
  inline const ::google::protobuf::RepeatedField<int>& slot() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_slot();

  // repeated bool inherit = 4;
  inline int inherit_size() const;
  inline void clear_inherit();
  static const int kInheritFieldNumber = 4;
  inline bool inherit(int index) const;
  inline void set_inherit(int index, bool value);
  inline void add_inherit(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      inherit() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_inherit();

  // @@protoc_insertion_point(class_scope:Packet.ActorAddEquipRequest)
 private:
  inline void set_has_actor_guid();
  inline void clear_has_actor_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 actor_guid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > equip_guid_;
  ::google::protobuf::RepeatedField<int> slot_;
  ::google::protobuf::RepeatedField< bool > inherit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static ActorAddEquipRequest* default_instance_;
};
// -------------------------------------------------------------------

class ActorDelEquipRequest : public ::google::protobuf::Message {
 public:
  ActorDelEquipRequest();
  virtual ~ActorDelEquipRequest();

  ActorDelEquipRequest(const ActorDelEquipRequest& from);

  inline ActorDelEquipRequest& operator=(const ActorDelEquipRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorDelEquipRequest& default_instance();

  void Swap(ActorDelEquipRequest* other);

  // implements Message ----------------------------------------------

  ActorDelEquipRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorDelEquipRequest& from);
  void MergeFrom(const ActorDelEquipRequest& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 equip_guid = 1;
  inline bool has_equip_guid() const;
  inline void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 equip_guid() const;
  inline void set_equip_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorDelEquipRequest)
 private:
  inline void set_has_equip_guid();
  inline void clear_has_equip_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 equip_guid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static ActorDelEquipRequest* default_instance_;
};
// -------------------------------------------------------------------

class Market : public ::google::protobuf::Message {
 public:
  Market();
  virtual ~Market();

  Market(const Market& from);

  inline Market& operator=(const Market& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Market& default_instance();

  void Swap(Market* other);

  // implements Message ----------------------------------------------

  Market* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Market& from);
  void MergeFrom(const Market& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required fixed64 player_guid = 2;
  inline bool has_player_guid() const;
  inline void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 player_guid() const;
  inline void set_player_guid(::google::protobuf::uint64 value);

  // required fixed64 refresh_cd = 3;
  inline bool has_refresh_cd() const;
  inline void clear_refresh_cd();
  static const int kRefreshCdFieldNumber = 3;
  inline ::google::protobuf::uint64 refresh_cd() const;
  inline void set_refresh_cd(::google::protobuf::uint64 value);

  // required .Config.MarketType market_type = 4;
  inline bool has_market_type() const;
  inline void clear_market_type();
  static const int kMarketTypeFieldNumber = 4;
  inline ::Config::MarketType market_type() const;
  inline void set_market_type(::Config::MarketType value);

  // required string market_items = 5;
  inline bool has_market_items() const;
  inline void clear_market_items();
  static const int kMarketItemsFieldNumber = 5;
  inline const ::std::string& market_items() const;
  inline void set_market_items(const ::std::string& value);
  inline void set_market_items(const char* value);
  inline void set_market_items(const char* value, size_t size);
  inline ::std::string* mutable_market_items();
  inline ::std::string* release_market_items();
  inline void set_allocated_market_items(::std::string* market_items);

  // required string buys_count = 6;
  inline bool has_buys_count() const;
  inline void clear_buys_count();
  static const int kBuysCountFieldNumber = 6;
  inline const ::std::string& buys_count() const;
  inline void set_buys_count(const ::std::string& value);
  inline void set_buys_count(const char* value);
  inline void set_buys_count(const char* value, size_t size);
  inline ::std::string* mutable_buys_count();
  inline ::std::string* release_buys_count();
  inline void set_allocated_buys_count(::std::string* buys_count);

  // @@protoc_insertion_point(class_scope:Packet.Market)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_player_guid();
  inline void clear_has_player_guid();
  inline void set_has_refresh_cd();
  inline void clear_has_refresh_cd();
  inline void set_has_market_type();
  inline void clear_has_market_type();
  inline void set_has_market_items();
  inline void clear_has_market_items();
  inline void set_has_buys_count();
  inline void clear_has_buys_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 player_guid_;
  ::google::protobuf::uint64 refresh_cd_;
  ::std::string* market_items_;
  ::std::string* buys_count_;
  int market_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static Market* default_instance_;
};
// -------------------------------------------------------------------

class PlayerMarketReply : public ::google::protobuf::Message {
 public:
  PlayerMarketReply();
  virtual ~PlayerMarketReply();

  PlayerMarketReply(const PlayerMarketReply& from);

  inline PlayerMarketReply& operator=(const PlayerMarketReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerMarketReply& default_instance();

  void Swap(PlayerMarketReply* other);

  // implements Message ----------------------------------------------

  PlayerMarketReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerMarketReply& from);
  void MergeFrom(const PlayerMarketReply& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Config.MarketType market_type = 1;
  inline bool has_market_type() const;
  inline void clear_market_type();
  static const int kMarketTypeFieldNumber = 1;
  inline ::Config::MarketType market_type() const;
  inline void set_market_type(::Config::MarketType value);

  // repeated int32 market_items = 2;
  inline int market_items_size() const;
  inline void clear_market_items();
  static const int kMarketItemsFieldNumber = 2;
  inline ::google::protobuf::int32 market_items(int index) const;
  inline void set_market_items(int index, ::google::protobuf::int32 value);
  inline void add_market_items(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      market_items() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_market_items();

  // repeated int32 buy_counts = 3;
  inline int buy_counts_size() const;
  inline void clear_buy_counts();
  static const int kBuyCountsFieldNumber = 3;
  inline ::google::protobuf::int32 buy_counts(int index) const;
  inline void set_buy_counts(int index, ::google::protobuf::int32 value);
  inline void add_buy_counts(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      buy_counts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_buy_counts();

  // required fixed64 refresh_cd = 4;
  inline bool has_refresh_cd() const;
  inline void clear_refresh_cd();
  static const int kRefreshCdFieldNumber = 4;
  inline ::google::protobuf::uint64 refresh_cd() const;
  inline void set_refresh_cd(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.PlayerMarketReply)
 private:
  inline void set_has_market_type();
  inline void clear_has_market_type();
  inline void set_has_refresh_cd();
  inline void clear_has_refresh_cd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > market_items_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > buy_counts_;
  ::google::protobuf::uint64 refresh_cd_;
  int market_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static PlayerMarketReply* default_instance_;
};
// -------------------------------------------------------------------

class UpdatePlayerMarketItem : public ::google::protobuf::Message {
 public:
  UpdatePlayerMarketItem();
  virtual ~UpdatePlayerMarketItem();

  UpdatePlayerMarketItem(const UpdatePlayerMarketItem& from);

  inline UpdatePlayerMarketItem& operator=(const UpdatePlayerMarketItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePlayerMarketItem& default_instance();

  void Swap(UpdatePlayerMarketItem* other);

  // implements Message ----------------------------------------------

  UpdatePlayerMarketItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdatePlayerMarketItem& from);
  void MergeFrom(const UpdatePlayerMarketItem& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Config.MarketType market_type = 1;
  inline bool has_market_type() const;
  inline void clear_market_type();
  static const int kMarketTypeFieldNumber = 1;
  inline ::Config::MarketType market_type() const;
  inline void set_market_type(::Config::MarketType value);

  // required int32 market_item_id = 2;
  inline bool has_market_item_id() const;
  inline void clear_market_item_id();
  static const int kMarketItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 market_item_id() const;
  inline void set_market_item_id(::google::protobuf::int32 value);

  // required int32 buy_count = 3;
  inline bool has_buy_count() const;
  inline void clear_buy_count();
  static const int kBuyCountFieldNumber = 3;
  inline ::google::protobuf::int32 buy_count() const;
  inline void set_buy_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.UpdatePlayerMarketItem)
 private:
  inline void set_has_market_type();
  inline void clear_has_market_type();
  inline void set_has_market_item_id();
  inline void clear_has_market_item_id();
  inline void set_has_buy_count();
  inline void clear_has_buy_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int market_type_;
  ::google::protobuf::int32 market_item_id_;
  ::google::protobuf::int32 buy_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static UpdatePlayerMarketItem* default_instance_;
};
// -------------------------------------------------------------------

class UpdateArrangeInfoReply : public ::google::protobuf::Message {
 public:
  UpdateArrangeInfoReply();
  virtual ~UpdateArrangeInfoReply();

  UpdateArrangeInfoReply(const UpdateArrangeInfoReply& from);

  inline UpdateArrangeInfoReply& operator=(const UpdateArrangeInfoReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateArrangeInfoReply& default_instance();

  void Swap(UpdateArrangeInfoReply* other);

  // implements Message ----------------------------------------------

  UpdateArrangeInfoReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateArrangeInfoReply& from);
  void MergeFrom(const UpdateArrangeInfoReply& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline ::google::protobuf::uint64 items(int index) const;
  inline void set_items(int index, ::google::protobuf::uint64 value);
  inline void add_items(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      items() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_items();

  // repeated fixed64 players = 2;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 2;
  inline ::google::protobuf::uint64 players(int index) const;
  inline void set_players(int index, ::google::protobuf::uint64 value);
  inline void add_players(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      players() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_players();

  // required int32 second = 3;
  inline bool has_second() const;
  inline void clear_second();
  static const int kSecondFieldNumber = 3;
  inline ::google::protobuf::int32 second() const;
  inline void set_second(::google::protobuf::int32 value);

  // required .Packet.ArrangeType at_type = 4;
  inline bool has_at_type() const;
  inline void clear_at_type();
  static const int kAtTypeFieldNumber = 4;
  inline ::Packet::ArrangeType at_type() const;
  inline void set_at_type(::Packet::ArrangeType value);

  // @@protoc_insertion_point(class_scope:Packet.UpdateArrangeInfoReply)
 private:
  inline void set_has_second();
  inline void clear_has_second();
  inline void set_has_at_type();
  inline void clear_has_at_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > items_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > players_;
  ::google::protobuf::int32 second_;
  int at_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static UpdateArrangeInfoReply* default_instance_;
};
// -------------------------------------------------------------------

class MoveItemRequest : public ::google::protobuf::Message {
 public:
  MoveItemRequest();
  virtual ~MoveItemRequest();

  MoveItemRequest(const MoveItemRequest& from);

  inline MoveItemRequest& operator=(const MoveItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveItemRequest& default_instance();

  void Swap(MoveItemRequest* other);

  // implements Message ----------------------------------------------

  MoveItemRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveItemRequest& from);
  void MergeFrom(const MoveItemRequest& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.ContainerType src_container = 1;
  inline bool has_src_container() const;
  inline void clear_src_container();
  static const int kSrcContainerFieldNumber = 1;
  inline ::Packet::ContainerType src_container() const;
  inline void set_src_container(::Packet::ContainerType value);

  // required .Packet.ContainerType des_container = 2;
  inline bool has_des_container() const;
  inline void clear_des_container();
  static const int kDesContainerFieldNumber = 2;
  inline ::Packet::ContainerType des_container() const;
  inline void set_des_container(::Packet::ContainerType value);

  // required fixed64 item_guid = 3;
  inline bool has_item_guid() const;
  inline void clear_item_guid();
  static const int kItemGuidFieldNumber = 3;
  inline ::google::protobuf::uint64 item_guid() const;
  inline void set_item_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.MoveItemRequest)
 private:
  inline void set_has_src_container();
  inline void clear_has_src_container();
  inline void set_has_des_container();
  inline void clear_has_des_container();
  inline void set_has_item_guid();
  inline void clear_has_item_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int src_container_;
  int des_container_;
  ::google::protobuf::uint64 item_guid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static MoveItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class ExtendContainerRequest : public ::google::protobuf::Message {
 public:
  ExtendContainerRequest();
  virtual ~ExtendContainerRequest();

  ExtendContainerRequest(const ExtendContainerRequest& from);

  inline ExtendContainerRequest& operator=(const ExtendContainerRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtendContainerRequest& default_instance();

  void Swap(ExtendContainerRequest* other);

  // implements Message ----------------------------------------------

  ExtendContainerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExtendContainerRequest& from);
  void MergeFrom(const ExtendContainerRequest& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.ContainerType src_container = 1;
  inline bool has_src_container() const;
  inline void clear_src_container();
  static const int kSrcContainerFieldNumber = 1;
  inline ::Packet::ContainerType src_container() const;
  inline void set_src_container(::Packet::ContainerType value);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.ExtendContainerRequest)
 private:
  inline void set_has_src_container();
  inline void clear_has_src_container();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int src_container_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static ExtendContainerRequest* default_instance_;
};
// -------------------------------------------------------------------

class NotifyItemItem : public ::google::protobuf::Message {
 public:
  NotifyItemItem();
  virtual ~NotifyItemItem();

  NotifyItemItem(const NotifyItemItem& from);

  inline NotifyItemItem& operator=(const NotifyItemItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyItemItem& default_instance();

  void Swap(NotifyItemItem* other);

  // implements Message ----------------------------------------------

  NotifyItemItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyItemItem& from);
  void MergeFrom(const NotifyItemItem& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 config_id = 1;
  inline bool has_config_id() const;
  inline void clear_config_id();
  static const int kConfigIdFieldNumber = 1;
  inline ::google::protobuf::int32 config_id() const;
  inline void set_config_id(::google::protobuf::int32 value);

  // required int32 amount = 2;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 2;
  inline ::google::protobuf::int32 amount() const;
  inline void set_amount(::google::protobuf::int32 value);

  // required int32 ud = 3;
  inline bool has_ud() const;
  inline void clear_ud();
  static const int kUdFieldNumber = 3;
  inline ::google::protobuf::int32 ud() const;
  inline void set_ud(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.NotifyItemItem)
 private:
  inline void set_has_config_id();
  inline void clear_has_config_id();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_ud();
  inline void clear_has_ud();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 config_id_;
  ::google::protobuf::int32 amount_;
  ::google::protobuf::int32 ud_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static NotifyItemItem* default_instance_;
};
// -------------------------------------------------------------------

class StatisticsResult : public ::google::protobuf::Message {
 public:
  StatisticsResult();
  virtual ~StatisticsResult();

  StatisticsResult(const StatisticsResult& from);

  inline StatisticsResult& operator=(const StatisticsResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatisticsResult& default_instance();

  void Swap(StatisticsResult* other);

  // implements Message ----------------------------------------------

  StatisticsResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatisticsResult& from);
  void MergeFrom(const StatisticsResult& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.NotifyItemItem item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::Packet::NotifyItemItem& item(int index) const;
  inline ::Packet::NotifyItemItem* mutable_item(int index);
  inline ::Packet::NotifyItemItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::NotifyItemItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::NotifyItemItem >*
      mutable_item();

  // required int32 statistics = 2;
  inline bool has_statistics() const;
  inline void clear_statistics();
  static const int kStatisticsFieldNumber = 2;
  inline ::google::protobuf::int32 statistics() const;
  inline void set_statistics(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.StatisticsResult)
 private:
  inline void set_has_statistics();
  inline void clear_has_statistics();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::NotifyItemItem > item_;
  ::google::protobuf::int32 statistics_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static StatisticsResult* default_instance_;
};
// -------------------------------------------------------------------

class NotifyItemList : public ::google::protobuf::Message {
 public:
  NotifyItemList();
  virtual ~NotifyItemList();

  NotifyItemList(const NotifyItemList& from);

  inline NotifyItemList& operator=(const NotifyItemList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyItemList& default_instance();

  void Swap(NotifyItemList* other);

  // implements Message ----------------------------------------------

  NotifyItemList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyItemList& from);
  void MergeFrom(const NotifyItemList& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.NotifyItemItem item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::Packet::NotifyItemItem& item(int index) const;
  inline ::Packet::NotifyItemItem* mutable_item(int index);
  inline ::Packet::NotifyItemItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::NotifyItemItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::NotifyItemItem >*
      mutable_item();

  // required .Config.ItemAddLogType add_type = 2;
  inline bool has_add_type() const;
  inline void clear_add_type();
  static const int kAddTypeFieldNumber = 2;
  inline ::Config::ItemAddLogType add_type() const;
  inline void set_add_type(::Config::ItemAddLogType value);

  // required fixed64 source_id = 3;
  inline bool has_source_id() const;
  inline void clear_source_id();
  static const int kSourceIdFieldNumber = 3;
  inline ::google::protobuf::uint64 source_id() const;
  inline void set_source_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.NotifyItemList)
 private:
  inline void set_has_add_type();
  inline void clear_has_add_type();
  inline void set_has_source_id();
  inline void clear_has_source_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::NotifyItemItem > item_;
  ::google::protobuf::uint64 source_id_;
  int add_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ItemAndEquip_2eproto();
  friend void protobuf_AssignDesc_ItemAndEquip_2eproto();
  friend void protobuf_ShutdownFile_ItemAndEquip_2eproto();

  void InitAsDefaultInstance();
  static NotifyItemList* default_instance_;
};
// ===================================================================


// ===================================================================

// Container

// required fixed64 guid = 1;
inline bool Container::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Container::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Container::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Container::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 Container::guid() const {
  return guid_;
}
inline void Container::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required fixed64 player_guid = 2;
inline bool Container::has_player_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Container::set_has_player_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Container::clear_has_player_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Container::clear_player_guid() {
  player_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_player_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 Container::player_guid() const {
  return player_guid_;
}
inline void Container::set_player_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_player_guid();
  player_guid_ = value;
}

// required int32 max_block = 3;
inline bool Container::has_max_block() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Container::set_has_max_block() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Container::clear_has_max_block() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Container::clear_max_block() {
  max_block_ = 0;
  clear_has_max_block();
  SetDirty();
}
inline ::google::protobuf::int32 Container::max_block() const {
  return max_block_;
}
inline void Container::set_max_block(::google::protobuf::int32 value) {
  SetDirty();
  set_has_max_block();
  max_block_ = value;
}

// required int32 crystal_opened_block = 4;
inline bool Container::has_crystal_opened_block() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Container::set_has_crystal_opened_block() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Container::clear_has_crystal_opened_block() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Container::clear_crystal_opened_block() {
  crystal_opened_block_ = 0;
  clear_has_crystal_opened_block();
  SetDirty();
}
inline ::google::protobuf::int32 Container::crystal_opened_block() const {
  return crystal_opened_block_;
}
inline void Container::set_crystal_opened_block(::google::protobuf::int32 value) {
  SetDirty();
  set_has_crystal_opened_block();
  crystal_opened_block_ = value;
}

// required int32 item_opened_block = 5;
inline bool Container::has_item_opened_block() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Container::set_has_item_opened_block() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Container::clear_has_item_opened_block() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Container::clear_item_opened_block() {
  item_opened_block_ = 0;
  clear_has_item_opened_block();
  SetDirty();
}
inline ::google::protobuf::int32 Container::item_opened_block() const {
  return item_opened_block_;
}
inline void Container::set_item_opened_block(::google::protobuf::int32 value) {
  SetDirty();
  set_has_item_opened_block();
  item_opened_block_ = value;
}

// required .Packet.ContainerType type = 6;
inline bool Container::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Container::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Container::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Container::clear_type() {
  type_ = -1;
  clear_has_type();
  SetDirty();
}
inline ::Packet::ContainerType Container::type() const {
  return static_cast< ::Packet::ContainerType >(type_);
}
inline void Container::set_type(::Packet::ContainerType value) {
  assert(::Packet::ContainerType_IsValid(value));
  SetDirty();
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// NormalItem

// required fixed64 guid = 1;
inline bool NormalItem::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NormalItem::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NormalItem::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NormalItem::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 NormalItem::guid() const {
  return guid_;
}
inline void NormalItem::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required fixed64 container_guid = 2;
inline bool NormalItem::has_container_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NormalItem::set_has_container_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NormalItem::clear_has_container_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NormalItem::clear_container_guid() {
  container_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_container_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 NormalItem::container_guid() const {
  return container_guid_;
}
inline void NormalItem::set_container_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_container_guid();
  container_guid_ = value;
}

// required int32 config_id = 3;
inline bool NormalItem::has_config_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NormalItem::set_has_config_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NormalItem::clear_has_config_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NormalItem::clear_config_id() {
  config_id_ = 0;
  clear_has_config_id();
  SetDirty();
}
inline ::google::protobuf::int32 NormalItem::config_id() const {
  return config_id_;
}
inline void NormalItem::set_config_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_config_id();
  config_id_ = value;
}

// required int32 count = 4;
inline bool NormalItem::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NormalItem::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NormalItem::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NormalItem::clear_count() {
  count_ = 0;
  clear_has_count();
  SetDirty();
}
inline ::google::protobuf::int32 NormalItem::count() const {
  return count_;
}
inline void NormalItem::set_count(::google::protobuf::int32 value) {
  SetDirty();
  set_has_count();
  count_ = value;
}

// required int32 param = 5;
inline bool NormalItem::has_param() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NormalItem::set_has_param() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NormalItem::clear_has_param() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NormalItem::clear_param() {
  param_ = 0;
  clear_has_param();
  SetDirty();
}
inline ::google::protobuf::int32 NormalItem::param() const {
  return param_;
}
inline void NormalItem::set_param(::google::protobuf::int32 value) {
  SetDirty();
  set_has_param();
  param_ = value;
}

// required int32 cool_down = 6;
inline bool NormalItem::has_cool_down() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NormalItem::set_has_cool_down() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NormalItem::clear_has_cool_down() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NormalItem::clear_cool_down() {
  cool_down_ = 0;
  clear_has_cool_down();
  SetDirty();
}
inline ::google::protobuf::int32 NormalItem::cool_down() const {
  return cool_down_;
}
inline void NormalItem::set_cool_down(::google::protobuf::int32 value) {
  SetDirty();
  set_has_cool_down();
  cool_down_ = value;
}

// required int32 life_time = 7;
inline bool NormalItem::has_life_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NormalItem::set_has_life_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NormalItem::clear_has_life_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NormalItem::clear_life_time() {
  life_time_ = 0;
  clear_has_life_time();
  SetDirty();
}
inline ::google::protobuf::int32 NormalItem::life_time() const {
  return life_time_;
}
inline void NormalItem::set_life_time(::google::protobuf::int32 value) {
  SetDirty();
  set_has_life_time();
  life_time_ = value;
}

// required int32 lock_flag = 8 [default = 0];
inline bool NormalItem::has_lock_flag() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void NormalItem::set_has_lock_flag() {
  _has_bits_[0] |= 0x00000080u;
}
inline void NormalItem::clear_has_lock_flag() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void NormalItem::clear_lock_flag() {
  lock_flag_ = 0;
  clear_has_lock_flag();
  SetDirty();
}
inline ::google::protobuf::int32 NormalItem::lock_flag() const {
  return lock_flag_;
}
inline void NormalItem::set_lock_flag(::google::protobuf::int32 value) {
  SetDirty();
  set_has_lock_flag();
  lock_flag_ = value;
}

// -------------------------------------------------------------------

// EquipItem_EquipEnchant

// required bool slot_open = 1;
inline bool EquipItem_EquipEnchant::has_slot_open() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipItem_EquipEnchant::set_has_slot_open() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipItem_EquipEnchant::clear_has_slot_open() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipItem_EquipEnchant::clear_slot_open() {
  slot_open_ = false;
  clear_has_slot_open();
  SetDirty();
}
inline bool EquipItem_EquipEnchant::slot_open() const {
  return slot_open_;
}
inline void EquipItem_EquipEnchant::set_slot_open(bool value) {
  SetDirty();
  set_has_slot_open();
  slot_open_ = value;
}

// required string effect_type = 2;
inline bool EquipItem_EquipEnchant::has_effect_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipItem_EquipEnchant::set_has_effect_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipItem_EquipEnchant::clear_has_effect_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipItem_EquipEnchant::clear_effect_type() {
  if (effect_type_ != &::google::protobuf::internal::kEmptyString) {
    effect_type_->clear();
  }
  clear_has_effect_type();
  SetDirty();
}
inline const ::std::string& EquipItem_EquipEnchant::effect_type() const {
  return *effect_type_;
}
inline void EquipItem_EquipEnchant::set_effect_type(const ::std::string& value) {
  SetDirty();
  set_has_effect_type();
  if (effect_type_ == &::google::protobuf::internal::kEmptyString) {
    effect_type_ = new ::std::string;
  }
  effect_type_->assign(value);
}
inline void EquipItem_EquipEnchant::set_effect_type(const char* value) {
  SetDirty();
  set_has_effect_type();
  if (effect_type_ == &::google::protobuf::internal::kEmptyString) {
    effect_type_ = new ::std::string;
  }
  effect_type_->assign(value);
}
inline void EquipItem_EquipEnchant::set_effect_type(const char* value, size_t size) {
  SetDirty();
  set_has_effect_type();
  if (effect_type_ == &::google::protobuf::internal::kEmptyString) {
    effect_type_ = new ::std::string;
  }
  effect_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* EquipItem_EquipEnchant::mutable_effect_type() {
  SetDirty();
  set_has_effect_type();
  if (effect_type_ == &::google::protobuf::internal::kEmptyString) {
    effect_type_ = new ::std::string;
  }
  return effect_type_;
}
inline ::std::string* EquipItem_EquipEnchant::release_effect_type() {
  SetDirty();
  clear_has_effect_type();
  if (effect_type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = effect_type_;
    effect_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void EquipItem_EquipEnchant::set_allocated_effect_type(::std::string* effect_type) {
  SetDirty();
  if (effect_type_ != &::google::protobuf::internal::kEmptyString) {
    delete effect_type_;
  }
  if (effect_type) {
    set_has_effect_type();
    effect_type_ = effect_type;
  } else {
    clear_has_effect_type();
    effect_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 effect_value = 3;
inline bool EquipItem_EquipEnchant::has_effect_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipItem_EquipEnchant::set_has_effect_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipItem_EquipEnchant::clear_has_effect_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipItem_EquipEnchant::clear_effect_value() {
  effect_value_ = 0;
  clear_has_effect_value();
  SetDirty();
}
inline ::google::protobuf::int32 EquipItem_EquipEnchant::effect_value() const {
  return effect_value_;
}
inline void EquipItem_EquipEnchant::set_effect_value(::google::protobuf::int32 value) {
  SetDirty();
  set_has_effect_value();
  effect_value_ = value;
}

// required int32 max_value = 4;
inline bool EquipItem_EquipEnchant::has_max_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EquipItem_EquipEnchant::set_has_max_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EquipItem_EquipEnchant::clear_has_max_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EquipItem_EquipEnchant::clear_max_value() {
  max_value_ = 0;
  clear_has_max_value();
  SetDirty();
}
inline ::google::protobuf::int32 EquipItem_EquipEnchant::max_value() const {
  return max_value_;
}
inline void EquipItem_EquipEnchant::set_max_value(::google::protobuf::int32 value) {
  SetDirty();
  set_has_max_value();
  max_value_ = value;
}

// required bool client_lock = 5;
inline bool EquipItem_EquipEnchant::has_client_lock() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EquipItem_EquipEnchant::set_has_client_lock() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EquipItem_EquipEnchant::clear_has_client_lock() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EquipItem_EquipEnchant::clear_client_lock() {
  client_lock_ = false;
  clear_has_client_lock();
  SetDirty();
}
inline bool EquipItem_EquipEnchant::client_lock() const {
  return client_lock_;
}
inline void EquipItem_EquipEnchant::set_client_lock(bool value) {
  SetDirty();
  set_has_client_lock();
  client_lock_ = value;
}

// -------------------------------------------------------------------

// EquipItem

// required fixed64 guid = 1;
inline bool EquipItem::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipItem::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipItem::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipItem::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 EquipItem::guid() const {
  return guid_;
}
inline void EquipItem::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required fixed64 container_guid = 2;
inline bool EquipItem::has_container_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipItem::set_has_container_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipItem::clear_has_container_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipItem::clear_container_guid() {
  container_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_container_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 EquipItem::container_guid() const {
  return container_guid_;
}
inline void EquipItem::set_container_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_container_guid();
  container_guid_ = value;
}

// required int32 config_id = 3;
inline bool EquipItem::has_config_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipItem::set_has_config_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipItem::clear_has_config_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipItem::clear_config_id() {
  config_id_ = 0;
  clear_has_config_id();
  SetDirty();
}
inline ::google::protobuf::int32 EquipItem::config_id() const {
  return config_id_;
}
inline void EquipItem::set_config_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_config_id();
  config_id_ = value;
}

// required float durable = 4;
inline bool EquipItem::has_durable() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EquipItem::set_has_durable() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EquipItem::clear_has_durable() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EquipItem::clear_durable() {
  durable_ = 0;
  clear_has_durable();
  SetDirty();
}
inline float EquipItem::durable() const {
  return durable_;
}
inline void EquipItem::set_durable(float value) {
  SetDirty();
  set_has_durable();
  durable_ = value;
}

// required int32 enhence_level = 5;
inline bool EquipItem::has_enhence_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EquipItem::set_has_enhence_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EquipItem::clear_has_enhence_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EquipItem::clear_enhence_level() {
  enhence_level_ = 0;
  clear_has_enhence_level();
  SetDirty();
}
inline ::google::protobuf::int32 EquipItem::enhence_level() const {
  return enhence_level_;
}
inline void EquipItem::set_enhence_level(::google::protobuf::int32 value) {
  SetDirty();
  set_has_enhence_level();
  enhence_level_ = value;
}

// repeated .Packet.EquipItem.EquipEnchant enchants = 6;
inline int EquipItem::enchants_size() const {
  return enchants_.size();
}
inline void EquipItem::clear_enchants() {
  enchants_.Clear();
  SetDirty();
}
inline const ::Packet::EquipItem_EquipEnchant& EquipItem::enchants(int index) const {
  return enchants_.Get(index);
}
inline ::Packet::EquipItem_EquipEnchant* EquipItem::mutable_enchants(int index) {
  SetDirty();
  return enchants_.Mutable(index);
}
inline ::Packet::EquipItem_EquipEnchant* EquipItem::add_enchants() {
  SetDirty();
  return enchants_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::EquipItem_EquipEnchant >&
EquipItem::enchants() const {
  return enchants_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::EquipItem_EquipEnchant >*
EquipItem::mutable_enchants() {
  SetDirty();
  return &enchants_;
}

// repeated int32 gems = 7;
inline int EquipItem::gems_size() const {
  return gems_.size();
}
inline void EquipItem::clear_gems() {
  gems_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 EquipItem::gems(int index) const {
  return gems_.Get(index);
}
inline void EquipItem::set_gems(int index, ::google::protobuf::int32 value) {
  SetDirty();
  gems_.Set(index, value);
}
inline void EquipItem::add_gems(::google::protobuf::int32 value) {
  SetDirty();
  gems_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
EquipItem::gems() const {
  return gems_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
EquipItem::mutable_gems() {
  SetDirty();
  return &gems_;
}

// required fixed64 actor_guid = 8;
inline bool EquipItem::has_actor_guid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void EquipItem::set_has_actor_guid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void EquipItem::clear_has_actor_guid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void EquipItem::clear_actor_guid() {
  actor_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_actor_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 EquipItem::actor_guid() const {
  return actor_guid_;
}
inline void EquipItem::set_actor_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_actor_guid();
  actor_guid_ = value;
}

// required .Config.EquipmentSlot slot = 9;
inline bool EquipItem::has_slot() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void EquipItem::set_has_slot() {
  _has_bits_[0] |= 0x00000100u;
}
inline void EquipItem::clear_has_slot() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void EquipItem::clear_slot() {
  slot_ = -1;
  clear_has_slot();
  SetDirty();
}
inline ::Config::EquipmentSlot EquipItem::slot() const {
  return static_cast< ::Config::EquipmentSlot >(slot_);
}
inline void EquipItem::set_slot(::Config::EquipmentSlot value) {
  assert(::Config::EquipmentSlot_IsValid(value));
  SetDirty();
  set_has_slot();
  slot_ = value;
}

// required int32 magical_res_id = 10 [default = -1];
inline bool EquipItem::has_magical_res_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void EquipItem::set_has_magical_res_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void EquipItem::clear_has_magical_res_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void EquipItem::clear_magical_res_id() {
  magical_res_id_ = -1;
  clear_has_magical_res_id();
  SetDirty();
}
inline ::google::protobuf::int32 EquipItem::magical_res_id() const {
  return magical_res_id_;
}
inline void EquipItem::set_magical_res_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_magical_res_id();
  magical_res_id_ = value;
}

// required int32 lock_flag = 11 [default = 0];
inline bool EquipItem::has_lock_flag() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void EquipItem::set_has_lock_flag() {
  _has_bits_[0] |= 0x00000400u;
}
inline void EquipItem::clear_has_lock_flag() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void EquipItem::clear_lock_flag() {
  lock_flag_ = 0;
  clear_has_lock_flag();
  SetDirty();
}
inline ::google::protobuf::int32 EquipItem::lock_flag() const {
  return lock_flag_;
}
inline void EquipItem::set_lock_flag(::google::protobuf::int32 value) {
  SetDirty();
  set_has_lock_flag();
  lock_flag_ = value;
}

// required fixed64 bind_actor_guid = 12;
inline bool EquipItem::has_bind_actor_guid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void EquipItem::set_has_bind_actor_guid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void EquipItem::clear_has_bind_actor_guid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void EquipItem::clear_bind_actor_guid() {
  bind_actor_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_bind_actor_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 EquipItem::bind_actor_guid() const {
  return bind_actor_guid_;
}
inline void EquipItem::set_bind_actor_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_bind_actor_guid();
  bind_actor_guid_ = value;
}

// required int32 score = 13;
inline bool EquipItem::has_score() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void EquipItem::set_has_score() {
  _has_bits_[0] |= 0x00001000u;
}
inline void EquipItem::clear_has_score() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void EquipItem::clear_score() {
  score_ = 0;
  clear_has_score();
  SetDirty();
}
inline ::google::protobuf::int32 EquipItem::score() const {
  return score_;
}
inline void EquipItem::set_score(::google::protobuf::int32 value) {
  SetDirty();
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// GemItem

// required fixed64 guid = 1;
inline bool GemItem::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GemItem::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GemItem::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GemItem::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 GemItem::guid() const {
  return guid_;
}
inline void GemItem::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required fixed64 container_guid = 2;
inline bool GemItem::has_container_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GemItem::set_has_container_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GemItem::clear_has_container_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GemItem::clear_container_guid() {
  container_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_container_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 GemItem::container_guid() const {
  return container_guid_;
}
inline void GemItem::set_container_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_container_guid();
  container_guid_ = value;
}

// required int32 config_id = 3;
inline bool GemItem::has_config_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GemItem::set_has_config_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GemItem::clear_has_config_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GemItem::clear_config_id() {
  config_id_ = 0;
  clear_has_config_id();
  SetDirty();
}
inline ::google::protobuf::int32 GemItem::config_id() const {
  return config_id_;
}
inline void GemItem::set_config_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_config_id();
  config_id_ = value;
}

// required fixed64 equip_guid = 4;
inline bool GemItem::has_equip_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GemItem::set_has_equip_guid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GemItem::clear_has_equip_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GemItem::clear_equip_guid() {
  equip_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 GemItem::equip_guid() const {
  return equip_guid_;
}
inline void GemItem::set_equip_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_equip_guid();
  equip_guid_ = value;
}

// required int32 count = 5;
inline bool GemItem::has_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GemItem::set_has_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GemItem::clear_has_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GemItem::clear_count() {
  count_ = 0;
  clear_has_count();
  SetDirty();
}
inline ::google::protobuf::int32 GemItem::count() const {
  return count_;
}
inline void GemItem::set_count(::google::protobuf::int32 value) {
  SetDirty();
  set_has_count();
  count_ = value;
}

// required int32 lock_flag = 6 [default = 0];
inline bool GemItem::has_lock_flag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GemItem::set_has_lock_flag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GemItem::clear_has_lock_flag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GemItem::clear_lock_flag() {
  lock_flag_ = 0;
  clear_has_lock_flag();
  SetDirty();
}
inline ::google::protobuf::int32 GemItem::lock_flag() const {
  return lock_flag_;
}
inline void GemItem::set_lock_flag(::google::protobuf::int32 value) {
  SetDirty();
  set_has_lock_flag();
  lock_flag_ = value;
}

// -------------------------------------------------------------------

// ClientItemInfo

// optional .Packet.EquipItem equip_item = 1;
inline bool ClientItemInfo::has_equip_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientItemInfo::set_has_equip_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientItemInfo::clear_has_equip_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientItemInfo::clear_equip_item() {
  if (equip_item_ != NULL) equip_item_->::Packet::EquipItem::Clear();
  clear_has_equip_item();
  SetDirty();
}
inline const ::Packet::EquipItem& ClientItemInfo::equip_item() const {
  return equip_item_ != NULL ? *equip_item_ : *default_instance_->equip_item_;
}
inline ::Packet::EquipItem* ClientItemInfo::mutable_equip_item() {
  SetDirty();
  set_has_equip_item();
  if (equip_item_ == NULL) equip_item_ = new ::Packet::EquipItem;
  return equip_item_;
}
inline ::Packet::EquipItem* ClientItemInfo::release_equip_item() {
  SetDirty();
  clear_has_equip_item();
  ::Packet::EquipItem* temp = equip_item_;
  equip_item_ = NULL;
  return temp;
}
inline void ClientItemInfo::set_allocated_equip_item(::Packet::EquipItem* equip_item) {
  SetDirty();
  delete equip_item_;
  equip_item_ = equip_item;
  if (equip_item) {
    set_has_equip_item();
  } else {
    clear_has_equip_item();
  }
}

// optional .Packet.NormalItem normal_item = 2;
inline bool ClientItemInfo::has_normal_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientItemInfo::set_has_normal_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientItemInfo::clear_has_normal_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientItemInfo::clear_normal_item() {
  if (normal_item_ != NULL) normal_item_->::Packet::NormalItem::Clear();
  clear_has_normal_item();
  SetDirty();
}
inline const ::Packet::NormalItem& ClientItemInfo::normal_item() const {
  return normal_item_ != NULL ? *normal_item_ : *default_instance_->normal_item_;
}
inline ::Packet::NormalItem* ClientItemInfo::mutable_normal_item() {
  SetDirty();
  set_has_normal_item();
  if (normal_item_ == NULL) normal_item_ = new ::Packet::NormalItem;
  return normal_item_;
}
inline ::Packet::NormalItem* ClientItemInfo::release_normal_item() {
  SetDirty();
  clear_has_normal_item();
  ::Packet::NormalItem* temp = normal_item_;
  normal_item_ = NULL;
  return temp;
}
inline void ClientItemInfo::set_allocated_normal_item(::Packet::NormalItem* normal_item) {
  SetDirty();
  delete normal_item_;
  normal_item_ = normal_item;
  if (normal_item) {
    set_has_normal_item();
  } else {
    clear_has_normal_item();
  }
}

// optional .Packet.GemItem gem_item = 3;
inline bool ClientItemInfo::has_gem_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientItemInfo::set_has_gem_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientItemInfo::clear_has_gem_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientItemInfo::clear_gem_item() {
  if (gem_item_ != NULL) gem_item_->::Packet::GemItem::Clear();
  clear_has_gem_item();
  SetDirty();
}
inline const ::Packet::GemItem& ClientItemInfo::gem_item() const {
  return gem_item_ != NULL ? *gem_item_ : *default_instance_->gem_item_;
}
inline ::Packet::GemItem* ClientItemInfo::mutable_gem_item() {
  SetDirty();
  set_has_gem_item();
  if (gem_item_ == NULL) gem_item_ = new ::Packet::GemItem;
  return gem_item_;
}
inline ::Packet::GemItem* ClientItemInfo::release_gem_item() {
  SetDirty();
  clear_has_gem_item();
  ::Packet::GemItem* temp = gem_item_;
  gem_item_ = NULL;
  return temp;
}
inline void ClientItemInfo::set_allocated_gem_item(::Packet::GemItem* gem_item) {
  SetDirty();
  delete gem_item_;
  gem_item_ = gem_item;
  if (gem_item) {
    set_has_gem_item();
  } else {
    clear_has_gem_item();
  }
}

// -------------------------------------------------------------------

// MessageHyperItemInfo

// repeated .Packet.ClientItemInfo iteminfo = 1;
inline int MessageHyperItemInfo::iteminfo_size() const {
  return iteminfo_.size();
}
inline void MessageHyperItemInfo::clear_iteminfo() {
  iteminfo_.Clear();
  SetDirty();
}
inline const ::Packet::ClientItemInfo& MessageHyperItemInfo::iteminfo(int index) const {
  return iteminfo_.Get(index);
}
inline ::Packet::ClientItemInfo* MessageHyperItemInfo::mutable_iteminfo(int index) {
  SetDirty();
  return iteminfo_.Mutable(index);
}
inline ::Packet::ClientItemInfo* MessageHyperItemInfo::add_iteminfo() {
  SetDirty();
  return iteminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo >&
MessageHyperItemInfo::iteminfo() const {
  return iteminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo >*
MessageHyperItemInfo::mutable_iteminfo() {
  SetDirty();
  return &iteminfo_;
}

// -------------------------------------------------------------------

// PlayerContainerRequest

// required .Packet.ContainerType container_type = 1;
inline bool PlayerContainerRequest::has_container_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerContainerRequest::set_has_container_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerContainerRequest::clear_has_container_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerContainerRequest::clear_container_type() {
  container_type_ = -1;
  clear_has_container_type();
  SetDirty();
}
inline ::Packet::ContainerType PlayerContainerRequest::container_type() const {
  return static_cast< ::Packet::ContainerType >(container_type_);
}
inline void PlayerContainerRequest::set_container_type(::Packet::ContainerType value) {
  assert(::Packet::ContainerType_IsValid(value));
  SetDirty();
  set_has_container_type();
  container_type_ = value;
}

// -------------------------------------------------------------------

// PlayerContainerReply

// required .Packet.ContainerType container_type = 1;
inline bool PlayerContainerReply::has_container_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerContainerReply::set_has_container_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerContainerReply::clear_has_container_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerContainerReply::clear_container_type() {
  container_type_ = -1;
  clear_has_container_type();
  SetDirty();
}
inline ::Packet::ContainerType PlayerContainerReply::container_type() const {
  return static_cast< ::Packet::ContainerType >(container_type_);
}
inline void PlayerContainerReply::set_container_type(::Packet::ContainerType value) {
  assert(::Packet::ContainerType_IsValid(value));
  SetDirty();
  set_has_container_type();
  container_type_ = value;
}

// repeated .Packet.ClientItemInfo items = 2;
inline int PlayerContainerReply::items_size() const {
  return items_.size();
}
inline void PlayerContainerReply::clear_items() {
  items_.Clear();
  SetDirty();
}
inline const ::Packet::ClientItemInfo& PlayerContainerReply::items(int index) const {
  return items_.Get(index);
}
inline ::Packet::ClientItemInfo* PlayerContainerReply::mutable_items(int index) {
  SetDirty();
  return items_.Mutable(index);
}
inline ::Packet::ClientItemInfo* PlayerContainerReply::add_items() {
  SetDirty();
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo >&
PlayerContainerReply::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo >*
PlayerContainerReply::mutable_items() {
  SetDirty();
  return &items_;
}

// required int32 max_block = 3;
inline bool PlayerContainerReply::has_max_block() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerContainerReply::set_has_max_block() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerContainerReply::clear_has_max_block() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerContainerReply::clear_max_block() {
  max_block_ = 0;
  clear_has_max_block();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerContainerReply::max_block() const {
  return max_block_;
}
inline void PlayerContainerReply::set_max_block(::google::protobuf::int32 value) {
  SetDirty();
  set_has_max_block();
  max_block_ = value;
}

// -------------------------------------------------------------------

// PlayerContainerAddItemNotify

// required .Packet.ContainerType container_type = 1;
inline bool PlayerContainerAddItemNotify::has_container_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerContainerAddItemNotify::set_has_container_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerContainerAddItemNotify::clear_has_container_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerContainerAddItemNotify::clear_container_type() {
  container_type_ = -1;
  clear_has_container_type();
  SetDirty();
}
inline ::Packet::ContainerType PlayerContainerAddItemNotify::container_type() const {
  return static_cast< ::Packet::ContainerType >(container_type_);
}
inline void PlayerContainerAddItemNotify::set_container_type(::Packet::ContainerType value) {
  assert(::Packet::ContainerType_IsValid(value));
  SetDirty();
  set_has_container_type();
  container_type_ = value;
}

// repeated .Packet.ClientItemInfo items = 2;
inline int PlayerContainerAddItemNotify::items_size() const {
  return items_.size();
}
inline void PlayerContainerAddItemNotify::clear_items() {
  items_.Clear();
  SetDirty();
}
inline const ::Packet::ClientItemInfo& PlayerContainerAddItemNotify::items(int index) const {
  return items_.Get(index);
}
inline ::Packet::ClientItemInfo* PlayerContainerAddItemNotify::mutable_items(int index) {
  SetDirty();
  return items_.Mutable(index);
}
inline ::Packet::ClientItemInfo* PlayerContainerAddItemNotify::add_items() {
  SetDirty();
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo >&
PlayerContainerAddItemNotify::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo >*
PlayerContainerAddItemNotify::mutable_items() {
  SetDirty();
  return &items_;
}

// -------------------------------------------------------------------

// PlayerContainerDelItemNotify

// required .Packet.ContainerType container_type = 1;
inline bool PlayerContainerDelItemNotify::has_container_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerContainerDelItemNotify::set_has_container_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerContainerDelItemNotify::clear_has_container_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerContainerDelItemNotify::clear_container_type() {
  container_type_ = -1;
  clear_has_container_type();
  SetDirty();
}
inline ::Packet::ContainerType PlayerContainerDelItemNotify::container_type() const {
  return static_cast< ::Packet::ContainerType >(container_type_);
}
inline void PlayerContainerDelItemNotify::set_container_type(::Packet::ContainerType value) {
  assert(::Packet::ContainerType_IsValid(value));
  SetDirty();
  set_has_container_type();
  container_type_ = value;
}

// repeated fixed64 guids = 2;
inline int PlayerContainerDelItemNotify::guids_size() const {
  return guids_.size();
}
inline void PlayerContainerDelItemNotify::clear_guids() {
  guids_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 PlayerContainerDelItemNotify::guids(int index) const {
  return guids_.Get(index);
}
inline void PlayerContainerDelItemNotify::set_guids(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  guids_.Set(index, value);
}
inline void PlayerContainerDelItemNotify::add_guids(::google::protobuf::uint64 value) {
  SetDirty();
  guids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PlayerContainerDelItemNotify::guids() const {
  return guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PlayerContainerDelItemNotify::mutable_guids() {
  SetDirty();
  return &guids_;
}

// -------------------------------------------------------------------

// PlayerContainerRefreshItemNotify

// required .Packet.ContainerType container_type = 1;
inline bool PlayerContainerRefreshItemNotify::has_container_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerContainerRefreshItemNotify::set_has_container_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerContainerRefreshItemNotify::clear_has_container_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerContainerRefreshItemNotify::clear_container_type() {
  container_type_ = -1;
  clear_has_container_type();
  SetDirty();
}
inline ::Packet::ContainerType PlayerContainerRefreshItemNotify::container_type() const {
  return static_cast< ::Packet::ContainerType >(container_type_);
}
inline void PlayerContainerRefreshItemNotify::set_container_type(::Packet::ContainerType value) {
  assert(::Packet::ContainerType_IsValid(value));
  SetDirty();
  set_has_container_type();
  container_type_ = value;
}

// repeated .Packet.ClientItemInfo items = 2;
inline int PlayerContainerRefreshItemNotify::items_size() const {
  return items_.size();
}
inline void PlayerContainerRefreshItemNotify::clear_items() {
  items_.Clear();
  SetDirty();
}
inline const ::Packet::ClientItemInfo& PlayerContainerRefreshItemNotify::items(int index) const {
  return items_.Get(index);
}
inline ::Packet::ClientItemInfo* PlayerContainerRefreshItemNotify::mutable_items(int index) {
  SetDirty();
  return items_.Mutable(index);
}
inline ::Packet::ClientItemInfo* PlayerContainerRefreshItemNotify::add_items() {
  SetDirty();
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo >&
PlayerContainerRefreshItemNotify::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ClientItemInfo >*
PlayerContainerRefreshItemNotify::mutable_items() {
  SetDirty();
  return &items_;
}

// optional .Packet.ResultOption option = 3;
inline bool PlayerContainerRefreshItemNotify::has_option() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerContainerRefreshItemNotify::set_has_option() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerContainerRefreshItemNotify::clear_has_option() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerContainerRefreshItemNotify::clear_option() {
  option_ = -1;
  clear_has_option();
  SetDirty();
}
inline ::Packet::ResultOption PlayerContainerRefreshItemNotify::option() const {
  return static_cast< ::Packet::ResultOption >(option_);
}
inline void PlayerContainerRefreshItemNotify::set_option(::Packet::ResultOption value) {
  assert(::Packet::ResultOption_IsValid(value));
  SetDirty();
  set_has_option();
  option_ = value;
}

// -------------------------------------------------------------------

// ActorAddEquipRequest

// required fixed64 actor_guid = 1;
inline bool ActorAddEquipRequest::has_actor_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorAddEquipRequest::set_has_actor_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorAddEquipRequest::clear_has_actor_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorAddEquipRequest::clear_actor_guid() {
  actor_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_actor_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorAddEquipRequest::actor_guid() const {
  return actor_guid_;
}
inline void ActorAddEquipRequest::set_actor_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_actor_guid();
  actor_guid_ = value;
}

// repeated fixed64 equip_guid = 2;
inline int ActorAddEquipRequest::equip_guid_size() const {
  return equip_guid_.size();
}
inline void ActorAddEquipRequest::clear_equip_guid() {
  equip_guid_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorAddEquipRequest::equip_guid(int index) const {
  return equip_guid_.Get(index);
}
inline void ActorAddEquipRequest::set_equip_guid(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  equip_guid_.Set(index, value);
}
inline void ActorAddEquipRequest::add_equip_guid(::google::protobuf::uint64 value) {
  SetDirty();
  equip_guid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ActorAddEquipRequest::equip_guid() const {
  return equip_guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ActorAddEquipRequest::mutable_equip_guid() {
  SetDirty();
  return &equip_guid_;
}

// repeated .Config.EquipmentSlot slot = 3;
inline int ActorAddEquipRequest::slot_size() const {
  return slot_.size();
}
inline void ActorAddEquipRequest::clear_slot() {
  slot_.Clear();
  SetDirty();
}
inline ::Config::EquipmentSlot ActorAddEquipRequest::slot(int index) const {
  return static_cast< ::Config::EquipmentSlot >(slot_.Get(index));
}
inline void ActorAddEquipRequest::set_slot(int index, ::Config::EquipmentSlot value) {
  assert(::Config::EquipmentSlot_IsValid(value));
  SetDirty();
  slot_.Set(index, value);
}
inline void ActorAddEquipRequest::add_slot(::Config::EquipmentSlot value) {
  assert(::Config::EquipmentSlot_IsValid(value));
  SetDirty();
  slot_.Add(value);
}
inline const ::google::protobuf::RepeatedField<int>&
ActorAddEquipRequest::slot() const {
  return slot_;
}
inline ::google::protobuf::RepeatedField<int>*
ActorAddEquipRequest::mutable_slot() {
  SetDirty();
  return &slot_;
}

// repeated bool inherit = 4;
inline int ActorAddEquipRequest::inherit_size() const {
  return inherit_.size();
}
inline void ActorAddEquipRequest::clear_inherit() {
  inherit_.Clear();
  SetDirty();
}
inline bool ActorAddEquipRequest::inherit(int index) const {
  return inherit_.Get(index);
}
inline void ActorAddEquipRequest::set_inherit(int index, bool value) {
  SetDirty();
  inherit_.Set(index, value);
}
inline void ActorAddEquipRequest::add_inherit(bool value) {
  SetDirty();
  inherit_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
ActorAddEquipRequest::inherit() const {
  return inherit_;
}
inline ::google::protobuf::RepeatedField< bool >*
ActorAddEquipRequest::mutable_inherit() {
  SetDirty();
  return &inherit_;
}

// -------------------------------------------------------------------

// ActorDelEquipRequest

// required fixed64 equip_guid = 1;
inline bool ActorDelEquipRequest::has_equip_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorDelEquipRequest::set_has_equip_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorDelEquipRequest::clear_has_equip_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorDelEquipRequest::clear_equip_guid() {
  equip_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorDelEquipRequest::equip_guid() const {
  return equip_guid_;
}
inline void ActorDelEquipRequest::set_equip_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_equip_guid();
  equip_guid_ = value;
}

// -------------------------------------------------------------------

// Market

// required fixed64 guid = 1;
inline bool Market::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Market::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Market::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Market::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 Market::guid() const {
  return guid_;
}
inline void Market::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required fixed64 player_guid = 2;
inline bool Market::has_player_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Market::set_has_player_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Market::clear_has_player_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Market::clear_player_guid() {
  player_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_player_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 Market::player_guid() const {
  return player_guid_;
}
inline void Market::set_player_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_player_guid();
  player_guid_ = value;
}

// required fixed64 refresh_cd = 3;
inline bool Market::has_refresh_cd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Market::set_has_refresh_cd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Market::clear_has_refresh_cd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Market::clear_refresh_cd() {
  refresh_cd_ = GOOGLE_ULONGLONG(0);
  clear_has_refresh_cd();
  SetDirty();
}
inline ::google::protobuf::uint64 Market::refresh_cd() const {
  return refresh_cd_;
}
inline void Market::set_refresh_cd(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_refresh_cd();
  refresh_cd_ = value;
}

// required .Config.MarketType market_type = 4;
inline bool Market::has_market_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Market::set_has_market_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Market::clear_has_market_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Market::clear_market_type() {
  market_type_ = -1;
  clear_has_market_type();
  SetDirty();
}
inline ::Config::MarketType Market::market_type() const {
  return static_cast< ::Config::MarketType >(market_type_);
}
inline void Market::set_market_type(::Config::MarketType value) {
  assert(::Config::MarketType_IsValid(value));
  SetDirty();
  set_has_market_type();
  market_type_ = value;
}

// required string market_items = 5;
inline bool Market::has_market_items() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Market::set_has_market_items() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Market::clear_has_market_items() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Market::clear_market_items() {
  if (market_items_ != &::google::protobuf::internal::kEmptyString) {
    market_items_->clear();
  }
  clear_has_market_items();
  SetDirty();
}
inline const ::std::string& Market::market_items() const {
  return *market_items_;
}
inline void Market::set_market_items(const ::std::string& value) {
  SetDirty();
  set_has_market_items();
  if (market_items_ == &::google::protobuf::internal::kEmptyString) {
    market_items_ = new ::std::string;
  }
  market_items_->assign(value);
}
inline void Market::set_market_items(const char* value) {
  SetDirty();
  set_has_market_items();
  if (market_items_ == &::google::protobuf::internal::kEmptyString) {
    market_items_ = new ::std::string;
  }
  market_items_->assign(value);
}
inline void Market::set_market_items(const char* value, size_t size) {
  SetDirty();
  set_has_market_items();
  if (market_items_ == &::google::protobuf::internal::kEmptyString) {
    market_items_ = new ::std::string;
  }
  market_items_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Market::mutable_market_items() {
  SetDirty();
  set_has_market_items();
  if (market_items_ == &::google::protobuf::internal::kEmptyString) {
    market_items_ = new ::std::string;
  }
  return market_items_;
}
inline ::std::string* Market::release_market_items() {
  SetDirty();
  clear_has_market_items();
  if (market_items_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = market_items_;
    market_items_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Market::set_allocated_market_items(::std::string* market_items) {
  SetDirty();
  if (market_items_ != &::google::protobuf::internal::kEmptyString) {
    delete market_items_;
  }
  if (market_items) {
    set_has_market_items();
    market_items_ = market_items;
  } else {
    clear_has_market_items();
    market_items_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string buys_count = 6;
inline bool Market::has_buys_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Market::set_has_buys_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Market::clear_has_buys_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Market::clear_buys_count() {
  if (buys_count_ != &::google::protobuf::internal::kEmptyString) {
    buys_count_->clear();
  }
  clear_has_buys_count();
  SetDirty();
}
inline const ::std::string& Market::buys_count() const {
  return *buys_count_;
}
inline void Market::set_buys_count(const ::std::string& value) {
  SetDirty();
  set_has_buys_count();
  if (buys_count_ == &::google::protobuf::internal::kEmptyString) {
    buys_count_ = new ::std::string;
  }
  buys_count_->assign(value);
}
inline void Market::set_buys_count(const char* value) {
  SetDirty();
  set_has_buys_count();
  if (buys_count_ == &::google::protobuf::internal::kEmptyString) {
    buys_count_ = new ::std::string;
  }
  buys_count_->assign(value);
}
inline void Market::set_buys_count(const char* value, size_t size) {
  SetDirty();
  set_has_buys_count();
  if (buys_count_ == &::google::protobuf::internal::kEmptyString) {
    buys_count_ = new ::std::string;
  }
  buys_count_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Market::mutable_buys_count() {
  SetDirty();
  set_has_buys_count();
  if (buys_count_ == &::google::protobuf::internal::kEmptyString) {
    buys_count_ = new ::std::string;
  }
  return buys_count_;
}
inline ::std::string* Market::release_buys_count() {
  SetDirty();
  clear_has_buys_count();
  if (buys_count_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = buys_count_;
    buys_count_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Market::set_allocated_buys_count(::std::string* buys_count) {
  SetDirty();
  if (buys_count_ != &::google::protobuf::internal::kEmptyString) {
    delete buys_count_;
  }
  if (buys_count) {
    set_has_buys_count();
    buys_count_ = buys_count;
  } else {
    clear_has_buys_count();
    buys_count_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PlayerMarketReply

// required .Config.MarketType market_type = 1;
inline bool PlayerMarketReply::has_market_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerMarketReply::set_has_market_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerMarketReply::clear_has_market_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerMarketReply::clear_market_type() {
  market_type_ = -1;
  clear_has_market_type();
  SetDirty();
}
inline ::Config::MarketType PlayerMarketReply::market_type() const {
  return static_cast< ::Config::MarketType >(market_type_);
}
inline void PlayerMarketReply::set_market_type(::Config::MarketType value) {
  assert(::Config::MarketType_IsValid(value));
  SetDirty();
  set_has_market_type();
  market_type_ = value;
}

// repeated int32 market_items = 2;
inline int PlayerMarketReply::market_items_size() const {
  return market_items_.size();
}
inline void PlayerMarketReply::clear_market_items() {
  market_items_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerMarketReply::market_items(int index) const {
  return market_items_.Get(index);
}
inline void PlayerMarketReply::set_market_items(int index, ::google::protobuf::int32 value) {
  SetDirty();
  market_items_.Set(index, value);
}
inline void PlayerMarketReply::add_market_items(::google::protobuf::int32 value) {
  SetDirty();
  market_items_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerMarketReply::market_items() const {
  return market_items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerMarketReply::mutable_market_items() {
  SetDirty();
  return &market_items_;
}

// repeated int32 buy_counts = 3;
inline int PlayerMarketReply::buy_counts_size() const {
  return buy_counts_.size();
}
inline void PlayerMarketReply::clear_buy_counts() {
  buy_counts_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerMarketReply::buy_counts(int index) const {
  return buy_counts_.Get(index);
}
inline void PlayerMarketReply::set_buy_counts(int index, ::google::protobuf::int32 value) {
  SetDirty();
  buy_counts_.Set(index, value);
}
inline void PlayerMarketReply::add_buy_counts(::google::protobuf::int32 value) {
  SetDirty();
  buy_counts_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerMarketReply::buy_counts() const {
  return buy_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerMarketReply::mutable_buy_counts() {
  SetDirty();
  return &buy_counts_;
}

// required fixed64 refresh_cd = 4;
inline bool PlayerMarketReply::has_refresh_cd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerMarketReply::set_has_refresh_cd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerMarketReply::clear_has_refresh_cd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerMarketReply::clear_refresh_cd() {
  refresh_cd_ = GOOGLE_ULONGLONG(0);
  clear_has_refresh_cd();
  SetDirty();
}
inline ::google::protobuf::uint64 PlayerMarketReply::refresh_cd() const {
  return refresh_cd_;
}
inline void PlayerMarketReply::set_refresh_cd(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_refresh_cd();
  refresh_cd_ = value;
}

// -------------------------------------------------------------------

// UpdatePlayerMarketItem

// required .Config.MarketType market_type = 1;
inline bool UpdatePlayerMarketItem::has_market_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdatePlayerMarketItem::set_has_market_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdatePlayerMarketItem::clear_has_market_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdatePlayerMarketItem::clear_market_type() {
  market_type_ = -1;
  clear_has_market_type();
  SetDirty();
}
inline ::Config::MarketType UpdatePlayerMarketItem::market_type() const {
  return static_cast< ::Config::MarketType >(market_type_);
}
inline void UpdatePlayerMarketItem::set_market_type(::Config::MarketType value) {
  assert(::Config::MarketType_IsValid(value));
  SetDirty();
  set_has_market_type();
  market_type_ = value;
}

// required int32 market_item_id = 2;
inline bool UpdatePlayerMarketItem::has_market_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdatePlayerMarketItem::set_has_market_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdatePlayerMarketItem::clear_has_market_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdatePlayerMarketItem::clear_market_item_id() {
  market_item_id_ = 0;
  clear_has_market_item_id();
  SetDirty();
}
inline ::google::protobuf::int32 UpdatePlayerMarketItem::market_item_id() const {
  return market_item_id_;
}
inline void UpdatePlayerMarketItem::set_market_item_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_market_item_id();
  market_item_id_ = value;
}

// required int32 buy_count = 3;
inline bool UpdatePlayerMarketItem::has_buy_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdatePlayerMarketItem::set_has_buy_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdatePlayerMarketItem::clear_has_buy_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdatePlayerMarketItem::clear_buy_count() {
  buy_count_ = 0;
  clear_has_buy_count();
  SetDirty();
}
inline ::google::protobuf::int32 UpdatePlayerMarketItem::buy_count() const {
  return buy_count_;
}
inline void UpdatePlayerMarketItem::set_buy_count(::google::protobuf::int32 value) {
  SetDirty();
  set_has_buy_count();
  buy_count_ = value;
}

// -------------------------------------------------------------------

// UpdateArrangeInfoReply

// repeated fixed64 items = 1;
inline int UpdateArrangeInfoReply::items_size() const {
  return items_.size();
}
inline void UpdateArrangeInfoReply::clear_items() {
  items_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 UpdateArrangeInfoReply::items(int index) const {
  return items_.Get(index);
}
inline void UpdateArrangeInfoReply::set_items(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  items_.Set(index, value);
}
inline void UpdateArrangeInfoReply::add_items(::google::protobuf::uint64 value) {
  SetDirty();
  items_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
UpdateArrangeInfoReply::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
UpdateArrangeInfoReply::mutable_items() {
  SetDirty();
  return &items_;
}

// repeated fixed64 players = 2;
inline int UpdateArrangeInfoReply::players_size() const {
  return players_.size();
}
inline void UpdateArrangeInfoReply::clear_players() {
  players_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 UpdateArrangeInfoReply::players(int index) const {
  return players_.Get(index);
}
inline void UpdateArrangeInfoReply::set_players(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  players_.Set(index, value);
}
inline void UpdateArrangeInfoReply::add_players(::google::protobuf::uint64 value) {
  SetDirty();
  players_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
UpdateArrangeInfoReply::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
UpdateArrangeInfoReply::mutable_players() {
  SetDirty();
  return &players_;
}

// required int32 second = 3;
inline bool UpdateArrangeInfoReply::has_second() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateArrangeInfoReply::set_has_second() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateArrangeInfoReply::clear_has_second() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateArrangeInfoReply::clear_second() {
  second_ = 0;
  clear_has_second();
  SetDirty();
}
inline ::google::protobuf::int32 UpdateArrangeInfoReply::second() const {
  return second_;
}
inline void UpdateArrangeInfoReply::set_second(::google::protobuf::int32 value) {
  SetDirty();
  set_has_second();
  second_ = value;
}

// required .Packet.ArrangeType at_type = 4;
inline bool UpdateArrangeInfoReply::has_at_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateArrangeInfoReply::set_has_at_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateArrangeInfoReply::clear_has_at_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateArrangeInfoReply::clear_at_type() {
  at_type_ = -1;
  clear_has_at_type();
  SetDirty();
}
inline ::Packet::ArrangeType UpdateArrangeInfoReply::at_type() const {
  return static_cast< ::Packet::ArrangeType >(at_type_);
}
inline void UpdateArrangeInfoReply::set_at_type(::Packet::ArrangeType value) {
  assert(::Packet::ArrangeType_IsValid(value));
  SetDirty();
  set_has_at_type();
  at_type_ = value;
}

// -------------------------------------------------------------------

// MoveItemRequest

// required .Packet.ContainerType src_container = 1;
inline bool MoveItemRequest::has_src_container() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveItemRequest::set_has_src_container() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveItemRequest::clear_has_src_container() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveItemRequest::clear_src_container() {
  src_container_ = -1;
  clear_has_src_container();
  SetDirty();
}
inline ::Packet::ContainerType MoveItemRequest::src_container() const {
  return static_cast< ::Packet::ContainerType >(src_container_);
}
inline void MoveItemRequest::set_src_container(::Packet::ContainerType value) {
  assert(::Packet::ContainerType_IsValid(value));
  SetDirty();
  set_has_src_container();
  src_container_ = value;
}

// required .Packet.ContainerType des_container = 2;
inline bool MoveItemRequest::has_des_container() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveItemRequest::set_has_des_container() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveItemRequest::clear_has_des_container() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveItemRequest::clear_des_container() {
  des_container_ = -1;
  clear_has_des_container();
  SetDirty();
}
inline ::Packet::ContainerType MoveItemRequest::des_container() const {
  return static_cast< ::Packet::ContainerType >(des_container_);
}
inline void MoveItemRequest::set_des_container(::Packet::ContainerType value) {
  assert(::Packet::ContainerType_IsValid(value));
  SetDirty();
  set_has_des_container();
  des_container_ = value;
}

// required fixed64 item_guid = 3;
inline bool MoveItemRequest::has_item_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MoveItemRequest::set_has_item_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MoveItemRequest::clear_has_item_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MoveItemRequest::clear_item_guid() {
  item_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_item_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 MoveItemRequest::item_guid() const {
  return item_guid_;
}
inline void MoveItemRequest::set_item_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_item_guid();
  item_guid_ = value;
}

// -------------------------------------------------------------------

// ExtendContainerRequest

// required .Packet.ContainerType src_container = 1;
inline bool ExtendContainerRequest::has_src_container() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExtendContainerRequest::set_has_src_container() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExtendContainerRequest::clear_has_src_container() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExtendContainerRequest::clear_src_container() {
  src_container_ = -1;
  clear_has_src_container();
  SetDirty();
}
inline ::Packet::ContainerType ExtendContainerRequest::src_container() const {
  return static_cast< ::Packet::ContainerType >(src_container_);
}
inline void ExtendContainerRequest::set_src_container(::Packet::ContainerType value) {
  assert(::Packet::ContainerType_IsValid(value));
  SetDirty();
  set_has_src_container();
  src_container_ = value;
}

// required int32 count = 2;
inline bool ExtendContainerRequest::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExtendContainerRequest::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExtendContainerRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExtendContainerRequest::clear_count() {
  count_ = 0;
  clear_has_count();
  SetDirty();
}
inline ::google::protobuf::int32 ExtendContainerRequest::count() const {
  return count_;
}
inline void ExtendContainerRequest::set_count(::google::protobuf::int32 value) {
  SetDirty();
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// NotifyItemItem

// required int32 config_id = 1;
inline bool NotifyItemItem::has_config_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyItemItem::set_has_config_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyItemItem::clear_has_config_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyItemItem::clear_config_id() {
  config_id_ = 0;
  clear_has_config_id();
  SetDirty();
}
inline ::google::protobuf::int32 NotifyItemItem::config_id() const {
  return config_id_;
}
inline void NotifyItemItem::set_config_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_config_id();
  config_id_ = value;
}

// required int32 amount = 2;
inline bool NotifyItemItem::has_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyItemItem::set_has_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyItemItem::clear_has_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyItemItem::clear_amount() {
  amount_ = 0;
  clear_has_amount();
  SetDirty();
}
inline ::google::protobuf::int32 NotifyItemItem::amount() const {
  return amount_;
}
inline void NotifyItemItem::set_amount(::google::protobuf::int32 value) {
  SetDirty();
  set_has_amount();
  amount_ = value;
}

// required int32 ud = 3;
inline bool NotifyItemItem::has_ud() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyItemItem::set_has_ud() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyItemItem::clear_has_ud() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyItemItem::clear_ud() {
  ud_ = 0;
  clear_has_ud();
  SetDirty();
}
inline ::google::protobuf::int32 NotifyItemItem::ud() const {
  return ud_;
}
inline void NotifyItemItem::set_ud(::google::protobuf::int32 value) {
  SetDirty();
  set_has_ud();
  ud_ = value;
}

// -------------------------------------------------------------------

// StatisticsResult

// repeated .Packet.NotifyItemItem item = 1;
inline int StatisticsResult::item_size() const {
  return item_.size();
}
inline void StatisticsResult::clear_item() {
  item_.Clear();
  SetDirty();
}
inline const ::Packet::NotifyItemItem& StatisticsResult::item(int index) const {
  return item_.Get(index);
}
inline ::Packet::NotifyItemItem* StatisticsResult::mutable_item(int index) {
  SetDirty();
  return item_.Mutable(index);
}
inline ::Packet::NotifyItemItem* StatisticsResult::add_item() {
  SetDirty();
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::NotifyItemItem >&
StatisticsResult::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::NotifyItemItem >*
StatisticsResult::mutable_item() {
  SetDirty();
  return &item_;
}

// required int32 statistics = 2;
inline bool StatisticsResult::has_statistics() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatisticsResult::set_has_statistics() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatisticsResult::clear_has_statistics() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatisticsResult::clear_statistics() {
  statistics_ = 0;
  clear_has_statistics();
  SetDirty();
}
inline ::google::protobuf::int32 StatisticsResult::statistics() const {
  return statistics_;
}
inline void StatisticsResult::set_statistics(::google::protobuf::int32 value) {
  SetDirty();
  set_has_statistics();
  statistics_ = value;
}

// -------------------------------------------------------------------

// NotifyItemList

// repeated .Packet.NotifyItemItem item = 1;
inline int NotifyItemList::item_size() const {
  return item_.size();
}
inline void NotifyItemList::clear_item() {
  item_.Clear();
  SetDirty();
}
inline const ::Packet::NotifyItemItem& NotifyItemList::item(int index) const {
  return item_.Get(index);
}
inline ::Packet::NotifyItemItem* NotifyItemList::mutable_item(int index) {
  SetDirty();
  return item_.Mutable(index);
}
inline ::Packet::NotifyItemItem* NotifyItemList::add_item() {
  SetDirty();
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::NotifyItemItem >&
NotifyItemList::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::NotifyItemItem >*
NotifyItemList::mutable_item() {
  SetDirty();
  return &item_;
}

// required .Config.ItemAddLogType add_type = 2;
inline bool NotifyItemList::has_add_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyItemList::set_has_add_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyItemList::clear_has_add_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyItemList::clear_add_type() {
  add_type_ = 1;
  clear_has_add_type();
  SetDirty();
}
inline ::Config::ItemAddLogType NotifyItemList::add_type() const {
  return static_cast< ::Config::ItemAddLogType >(add_type_);
}
inline void NotifyItemList::set_add_type(::Config::ItemAddLogType value) {
  assert(::Config::ItemAddLogType_IsValid(value));
  SetDirty();
  set_has_add_type();
  add_type_ = value;
}

// required fixed64 source_id = 3;
inline bool NotifyItemList::has_source_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyItemList::set_has_source_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyItemList::clear_has_source_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyItemList::clear_source_id() {
  source_id_ = GOOGLE_ULONGLONG(0);
  clear_has_source_id();
  SetDirty();
}
inline ::google::protobuf::uint64 NotifyItemList::source_id() const {
  return source_id_;
}
inline void NotifyItemList::set_source_id(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_source_id();
  source_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Packet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ItemAndEquip_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BattleReply.proto
#include "BattleReply.pb.h"
#include "BattleReply.proto.fflua.h"
namespace Packet {
bool RawReply_fflua_reg(lua_State* state)
{
//for decltype
	RawReply* message(nullptr);
	message;
	ff::fflua_register_t<RawReply, ctor()>(state, "RawReply", "google::protobuf::Message")
		// required bytes data = 1;
		.def(&RawReply::data, "data")
		.def<void (RawReply::*)(const std::string&)>(&RawReply::set_data, "set_data")
		.def(&RawReply::ByteSize, "ByteSize")
		.def(&RawReply::SetInitialized, "SetInitialized")
		;
	return true;
}
bool BattleReply_fflua_reg(lua_State* state)
{
//for decltype
	BattleReply* message(nullptr);
	message;
	ff::fflua_register_t<BattleReply, ctor()>(state, "BattleReply", "google::protobuf::Message")
		// required fixed64 guid = 1;
		.def(&BattleReply::guid, "guid")
		.def(&BattleReply::set_guid, "set_guid")
		// required .Packet.EnterBattleGroundReply enter_msg = 2;
		.def(&BattleReply::enter_msg, "enter_msg")
		.def(&BattleReply::mutable_enter_msg, "mutable_enter_msg")
		// required .Packet.RawReply messages = 3;
		.def(&BattleReply::messages, "messages")
		.def(&BattleReply::mutable_messages, "mutable_messages")
		// required .Packet.BattleGroundType type = 4;
		.def(&BattleReply::type, "type")
		.def(&BattleReply::set_type, "set_type")
		// required .Packet.Stat stat = 5;
		.def(&BattleReply::stat, "stat")
		.def(&BattleReply::mutable_stat, "mutable_stat")
		// required int32 create_time = 6;
		.def(&BattleReply::create_time, "create_time")
		.def(&BattleReply::set_create_time, "set_create_time")
		// required int32 scene_id = 7;
		.def(&BattleReply::scene_id, "scene_id")
		.def(&BattleReply::set_scene_id, "set_scene_id")
		// required int32 battle_group_id = 8;
		.def(&BattleReply::battle_group_id, "battle_group_id")
		.def(&BattleReply::set_battle_group_id, "set_battle_group_id")
		.def(&BattleReply::ByteSize, "ByteSize")
		.def(&BattleReply::SetInitialized, "SetInitialized")
		;
	return true;
}
bool CG_GetBattleReply_fflua_reg(lua_State* state)
{
//for decltype
	CG_GetBattleReply* message(nullptr);
	message;
	ff::fflua_register_t<CG_GetBattleReply, ctor()>(state, "CG_GetBattleReply", "google::protobuf::Message")
		// required fixed64 guid = 1;
		.def(&CG_GetBattleReply::guid, "guid")
		.def(&CG_GetBattleReply::set_guid, "set_guid")
		.def(&CG_GetBattleReply::ByteSize, "ByteSize")
		.def(&CG_GetBattleReply::SetInitialized, "SetInitialized")
		;
	return true;
}
bool BattleReply_fflua_regist_all(lua_State* state)
{
	RawReply_fflua_reg(state);
	BattleReply_fflua_reg(state);
	CG_GetBattleReply_fflua_reg(state);
	return true;
}
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EnterScene.proto
#include "EnterScene.pb.h"
#include "EnterScene.proto.fflua.h"
namespace Packet {
bool PlayerEnterScene_fflua_reg(lua_State* state)
{
//for decltype
	PlayerEnterScene* message(nullptr);
	message;
	ff::fflua_register_t<PlayerEnterScene, ctor()>(state, "PlayerEnterScene", "google::protobuf::Message")
		// required int32 scene_id = 1;
		.def(&PlayerEnterScene::scene_id, "scene_id")
		.def(&PlayerEnterScene::set_scene_id, "set_scene_id")
		// optional int32 pre_scene_id = 2;
		.def(&PlayerEnterScene::pre_scene_id, "pre_scene_id")
		.def(&PlayerEnterScene::set_pre_scene_id, "set_pre_scene_id")
		.def(&PlayerEnterScene::has_pre_scene_id, "has_pre_scene_id")
		// optional .Packet.Position init_pos = 3;
		.def(&PlayerEnterScene::init_pos, "init_pos")
		.def(&PlayerEnterScene::mutable_init_pos, "mutable_init_pos")
		.def(&PlayerEnterScene::has_init_pos, "has_init_pos")
		// optional int32 script_id = 4;
		.def(&PlayerEnterScene::script_id, "script_id")
		.def(&PlayerEnterScene::set_script_id, "set_script_id")
		.def(&PlayerEnterScene::has_script_id, "has_script_id")
		// optional int32 rtid = 5;
		.def(&PlayerEnterScene::rtid, "rtid")
		.def(&PlayerEnterScene::set_rtid, "set_rtid")
		.def(&PlayerEnterScene::has_rtid, "has_rtid")
		// optional .Packet.Position portal_pos = 6;
		.def(&PlayerEnterScene::portal_pos, "portal_pos")
		.def(&PlayerEnterScene::mutable_portal_pos, "mutable_portal_pos")
		.def(&PlayerEnterScene::has_portal_pos, "has_portal_pos")
		// optional int32 camp = 7;
		.def(&PlayerEnterScene::camp, "camp")
		.def(&PlayerEnterScene::set_camp, "set_camp")
		.def(&PlayerEnterScene::has_camp, "has_camp")
		.def(&PlayerEnterScene::ByteSize, "ByteSize")
		.def(&PlayerEnterScene::SetInitialized, "SetInitialized")
		;
	return true;
}
bool PlayerEnterGameRequest_fflua_reg(lua_State* state)
{
//for decltype
	PlayerEnterGameRequest* message(nullptr);
	message;
	ff::fflua_register_t<PlayerEnterGameRequest, ctor()>(state, "PlayerEnterGameRequest", "google::protobuf::Message")
		// required fixed64 guid = 1;
		.def(&PlayerEnterGameRequest::guid, "guid")
		.def(&PlayerEnterGameRequest::set_guid, "set_guid")
		.def(&PlayerEnterGameRequest::ByteSize, "ByteSize")
		.def(&PlayerEnterGameRequest::SetInitialized, "SetInitialized")
		;
	return true;
}
bool ClientEnterSceneOk_fflua_reg(lua_State* state)
{
//for decltype
	ClientEnterSceneOk* message(nullptr);
	message;
	ff::fflua_register_t<ClientEnterSceneOk, ctor()>(state, "ClientEnterSceneOk", "google::protobuf::Message")
		// required fixed64 guid = 1;
		.def(&ClientEnterSceneOk::guid, "guid")
		.def(&ClientEnterSceneOk::set_guid, "set_guid")
		// optional bool login_init = 2;
		.def(&ClientEnterSceneOk::login_init, "login_init")
		.def(&ClientEnterSceneOk::set_login_init, "set_login_init")
		.def(&ClientEnterSceneOk::has_login_init, "has_login_init")
		.def(&ClientEnterSceneOk::ByteSize, "ByteSize")
		.def(&ClientEnterSceneOk::SetInitialized, "SetInitialized")
		;
	return true;
}
bool PlayerChangeSceneRequest_fflua_reg(lua_State* state)
{
//for decltype
	PlayerChangeSceneRequest* message(nullptr);
	message;
	ff::fflua_register_t<PlayerChangeSceneRequest, ctor()>(state, "PlayerChangeSceneRequest", "google::protobuf::Message")
		// required fixed64 guid = 1;
		.def(&PlayerChangeSceneRequest::guid, "guid")
		.def(&PlayerChangeSceneRequest::set_guid, "set_guid")
		// required int32 scene_id = 2;
		.def(&PlayerChangeSceneRequest::scene_id, "scene_id")
		.def(&PlayerChangeSceneRequest::set_scene_id, "set_scene_id")
		.def(&PlayerChangeSceneRequest::ByteSize, "ByteSize")
		.def(&PlayerChangeSceneRequest::SetInitialized, "SetInitialized")
		;
	return true;
}
bool PlayerRaidOver_fflua_reg(lua_State* state)
{
//for decltype
	PlayerRaidOver* message(nullptr);
	message;
	ff::fflua_register_t<PlayerRaidOver, ctor()>(state, "PlayerRaidOver", "google::protobuf::Message")
		// required int32 second = 1;
		.def(&PlayerRaidOver::second, "second")
		.def(&PlayerRaidOver::set_second, "set_second")
		.def(&PlayerRaidOver::ByteSize, "ByteSize")
		.def(&PlayerRaidOver::SetInitialized, "SetInitialized")
		;
	return true;
}
bool PlayerEnterSceneReply_fflua_reg(lua_State* state)
{
//for decltype
	PlayerEnterSceneReply* message(nullptr);
	message;
	ff::fflua_register_t<PlayerEnterSceneReply, ctor()>(state, "PlayerEnterSceneReply", "google::protobuf::Message")
		// required .Packet.PlayerBasicInfo info = 1;
		.def(&PlayerEnterSceneReply::info, "info")
		.def(&PlayerEnterSceneReply::mutable_info, "mutable_info")
		// required .Packet.ActorBasicInfo main_actor = 2;
		.def(&PlayerEnterSceneReply::main_actor, "main_actor")
		.def(&PlayerEnterSceneReply::mutable_main_actor, "mutable_main_actor")
		.def(&PlayerEnterSceneReply::ByteSize, "ByteSize")
		.def(&PlayerEnterSceneReply::SetInitialized, "SetInitialized")
		;
	return true;
}
bool PlayerLeaveScene_fflua_reg(lua_State* state)
{
//for decltype
	PlayerLeaveScene* message(nullptr);
	message;
	ff::fflua_register_t<PlayerLeaveScene, ctor()>(state, "PlayerLeaveScene", "google::protobuf::Message")
		// required fixed64 guid = 1;
		.def(&PlayerLeaveScene::guid, "guid")
		.def(&PlayerLeaveScene::set_guid, "set_guid")
		// required int32 scene_id = 2;
		.def(&PlayerLeaveScene::scene_id, "scene_id")
		.def(&PlayerLeaveScene::set_scene_id, "set_scene_id")
		.def(&PlayerLeaveScene::ByteSize, "ByteSize")
		.def(&PlayerLeaveScene::SetInitialized, "SetInitialized")
		;
	return true;
}
bool PlayerLeaveSceneReply_fflua_reg(lua_State* state)
{
//for decltype
	PlayerLeaveSceneReply* message(nullptr);
	message;
	ff::fflua_register_t<PlayerLeaveSceneReply, ctor()>(state, "PlayerLeaveSceneReply", "google::protobuf::Message")
		// required int32 scene_id = 1;
		.def(&PlayerLeaveSceneReply::scene_id, "scene_id")
		.def(&PlayerLeaveSceneReply::set_scene_id, "set_scene_id")
		.def(&PlayerLeaveSceneReply::ByteSize, "ByteSize")
		.def(&PlayerLeaveSceneReply::SetInitialized, "SetInitialized")
		;
	return true;
}
bool SessionChanged_fflua_reg(lua_State* state)
{
//for decltype
	SessionChanged* message(nullptr);
	message;
	ff::fflua_register_t<SessionChanged, ctor()>(state, "SessionChanged", "google::protobuf::Message");
	return true;
}
bool PlayerDisconnect_fflua_reg(lua_State* state)
{
//for decltype
	PlayerDisconnect* message(nullptr);
	message;
	ff::fflua_register_t<PlayerDisconnect, ctor()>(state, "PlayerDisconnect", "google::protobuf::Message");
	return true;
}
bool EnterScene_fflua_regist_all(lua_State* state)
{
	PlayerEnterScene_fflua_reg(state);
	PlayerEnterGameRequest_fflua_reg(state);
	ClientEnterSceneOk_fflua_reg(state);
	PlayerChangeSceneRequest_fflua_reg(state);
	PlayerRaidOver_fflua_reg(state);
	PlayerEnterSceneReply_fflua_reg(state);
	PlayerLeaveScene_fflua_reg(state);
	PlayerLeaveSceneReply_fflua_reg(state);
	SessionChanged_fflua_reg(state);
	PlayerDisconnect_fflua_reg(state);
	return true;
}
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SceneConfig.proto
#include "SceneConfig.pb.h"
#include "SceneConfig.proto.fflua.h"
namespace Config {
bool Scene_fflua_reg(lua_State* state)
{
//for decltype
	Scene* message(nullptr);
	message;
	ff::fflua_register_t<Scene, ctor()>(state, "Scene", "google::protobuf::Message")
		// required int32 id = 1;
		.def(&Scene::id, "id")
		.def(&Scene::set_id, "set_id")
		// required string scene_name = 2;
		.def(&Scene::scene_name, "scene_name")
		.def<void (Scene::*)(const std::string&)>(&Scene::set_scene_name, "set_scene_name")
		// repeated .Packet.Position areas = 3;
		.def(&Scene::areas_size, "areas_size")
		.def<decltype(message->areas(0)) (Scene::*)(int) const>(&Scene::areas, "areas")
		.def<decltype(message->mutable_areas(0)) (Scene::*)(int)>(&Scene::mutable_areas, "mutable_areas")
		.def(&Scene::add_areas, "add_areas")
		// repeated .Packet.Position spawn_pos = 4;
		.def(&Scene::spawn_pos_size, "spawn_pos_size")
		.def<decltype(message->spawn_pos(0)) (Scene::*)(int) const>(&Scene::spawn_pos, "spawn_pos")
		.def<decltype(message->mutable_spawn_pos(0)) (Scene::*)(int)>(&Scene::mutable_spawn_pos, "mutable_spawn_pos")
		.def(&Scene::add_spawn_pos, "add_spawn_pos")
		// repeated .Config.SceneBattleGroup battle_groups = 5;
		.def(&Scene::battle_groups_size, "battle_groups_size")
		.def<decltype(message->battle_groups(0)) (Scene::*)(int) const>(&Scene::battle_groups, "battle_groups")
		.def<decltype(message->mutable_battle_groups(0)) (Scene::*)(int)>(&Scene::mutable_battle_groups, "mutable_battle_groups")
		.def(&Scene::add_battle_groups, "add_battle_groups")
		.def(&Scene::ByteSize, "ByteSize")
		.def(&Scene::SetInitialized, "SetInitialized")
		;
	return true;
}
bool SceneBattleGroup_fflua_reg(lua_State* state)
{
//for decltype
	SceneBattleGroup* message(nullptr);
	message;
	ff::fflua_register_t<SceneBattleGroup, ctor()>(state, "SceneBattleGroup", "google::protobuf::Message")
		// required int32 id = 1;
		.def(&SceneBattleGroup::id, "id")
		.def(&SceneBattleGroup::set_id, "set_id")
		// required int32 index = 2;
		.def(&SceneBattleGroup::index, "index")
		.def(&SceneBattleGroup::set_index, "set_index")
		// repeated .Packet.Position area_pos = 3;
		.def(&SceneBattleGroup::area_pos_size, "area_pos_size")
		.def<decltype(message->area_pos(0)) (SceneBattleGroup::*)(int) const>(&SceneBattleGroup::area_pos, "area_pos")
		.def<decltype(message->mutable_area_pos(0)) (SceneBattleGroup::*)(int)>(&SceneBattleGroup::mutable_area_pos, "mutable_area_pos")
		.def(&SceneBattleGroup::add_area_pos, "add_area_pos")
		// repeated .Packet.Position player_pos = 4;
		.def(&SceneBattleGroup::player_pos_size, "player_pos_size")
		.def<decltype(message->player_pos(0)) (SceneBattleGroup::*)(int) const>(&SceneBattleGroup::player_pos, "player_pos")
		.def<decltype(message->mutable_player_pos(0)) (SceneBattleGroup::*)(int)>(&SceneBattleGroup::mutable_player_pos, "mutable_player_pos")
		.def(&SceneBattleGroup::add_player_pos, "add_player_pos")
		// repeated .Packet.Position enemy_pos = 5;
		.def(&SceneBattleGroup::enemy_pos_size, "enemy_pos_size")
		.def<decltype(message->enemy_pos(0)) (SceneBattleGroup::*)(int) const>(&SceneBattleGroup::enemy_pos, "enemy_pos")
		.def<decltype(message->mutable_enemy_pos(0)) (SceneBattleGroup::*)(int)>(&SceneBattleGroup::mutable_enemy_pos, "mutable_enemy_pos")
		.def(&SceneBattleGroup::add_enemy_pos, "add_enemy_pos")
		.def(&SceneBattleGroup::ByteSize, "ByteSize")
		.def(&SceneBattleGroup::SetInitialized, "SetInitialized")
		;
	return true;
}
bool SceneStage_fflua_reg(lua_State* state)
{
//for decltype
	SceneStage* message(nullptr);
	message;
	ff::fflua_register_t<SceneStage, ctor()>(state, "SceneStage", "google::protobuf::Message")
		// required int32 id = 1;
		.def(&SceneStage::id, "id")
		.def(&SceneStage::set_id, "set_id")
		// required int32 min_level = 2;
		.def(&SceneStage::min_level, "min_level")
		.def(&SceneStage::set_min_level, "set_min_level")
		// required int32 pre_stage = 3;
		.def(&SceneStage::pre_stage, "pre_stage")
		.def(&SceneStage::set_pre_stage, "set_pre_stage")
		// required int32 scene_id = 4;
		.def(&SceneStage::scene_id, "scene_id")
		.def(&SceneStage::set_scene_id, "set_scene_id")
		// required int32 refresh_time = 5;
		.def(&SceneStage::refresh_time, "refresh_time")
		.def(&SceneStage::set_refresh_time, "set_refresh_time")
		// required int32 raid_count = 6;
		.def(&SceneStage::raid_count, "raid_count")
		.def(&SceneStage::set_raid_count, "set_raid_count")
		// required int32 rush_count = 7;
		.def(&SceneStage::rush_count, "rush_count")
		.def(&SceneStage::set_rush_count, "set_rush_count")
		// repeated int32 monster_group_ids = 8;
		.def(&SceneStage::monster_group_ids_size, "monster_group_ids_size")
		.def<decltype(message->monster_group_ids(0)) (SceneStage::*)(int) const>(&SceneStage::monster_group_ids, "monster_group_ids")
		.def<void(SceneStage::*)(int, const decltype(message->monster_group_ids(0)))>(&SceneStage::set_monster_group_ids, "set_monster_group_ids")
		.def(&SceneStage::add_monster_group_ids, "add_monster_group_ids")
		// repeated int32 boss_group_ids = 9;
		.def(&SceneStage::boss_group_ids_size, "boss_group_ids_size")
		.def<decltype(message->boss_group_ids(0)) (SceneStage::*)(int) const>(&SceneStage::boss_group_ids, "boss_group_ids")
		.def<void(SceneStage::*)(int, const decltype(message->boss_group_ids(0)))>(&SceneStage::set_boss_group_ids, "set_boss_group_ids")
		.def(&SceneStage::add_boss_group_ids, "add_boss_group_ids")
		// required int32 guard_id = 10;
		.def(&SceneStage::guard_id, "guard_id")
		.def(&SceneStage::set_guard_id, "set_guard_id")
		.def(&SceneStage::ByteSize, "ByteSize")
		.def(&SceneStage::SetInitialized, "SetInitialized")
		;
	return true;
}
bool SceneConfig_fflua_regist_all(lua_State* state)
{
	Scene_fflua_reg(state);
	SceneBattleGroup_fflua_reg(state);
	SceneStage_fflua_reg(state);
	return true;
}
}

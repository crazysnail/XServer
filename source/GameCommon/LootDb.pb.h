// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LootDb.proto

#ifndef PROTOBUF_LootDb_2eproto__INCLUDED
#define PROTOBUF_LootDb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Db {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_LootDb_2eproto();
void protobuf_AssignDesc_LootDb_2eproto();
void protobuf_ShutdownFile_LootDb_2eproto();

class LootPlayer;

// ===================================================================

class LootPlayer : public ::google::protobuf::Message {
 public:
  LootPlayer();
  virtual ~LootPlayer();

  LootPlayer(const LootPlayer& from);

  inline LootPlayer& operator=(const LootPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LootPlayer& default_instance();

  void Swap(LootPlayer* other);

  // implements Message ----------------------------------------------

  LootPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LootPlayer& from);
  void MergeFrom(const LootPlayer& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 last_loot_player_guid = 1;
  inline bool has_last_loot_player_guid() const;
  inline void clear_last_loot_player_guid();
  static const int kLastLootPlayerGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 last_loot_player_guid() const;
  inline void set_last_loot_player_guid(::google::protobuf::uint64 value);

  // required int32 unbind_coin = 2;
  inline bool has_unbind_coin() const;
  inline void clear_unbind_coin();
  static const int kUnbindCoinFieldNumber = 2;
  inline ::google::protobuf::int32 unbind_coin() const;
  inline void set_unbind_coin(::google::protobuf::int32 value);

  // required int32 be_loot_count_today = 3;
  inline bool has_be_loot_count_today() const;
  inline void clear_be_loot_count_today();
  static const int kBeLootCountTodayFieldNumber = 3;
  inline ::google::protobuf::int32 be_loot_count_today() const;
  inline void set_be_loot_count_today(::google::protobuf::int32 value);

  // required fixed64 last_be_loot_time = 4;
  inline bool has_last_be_loot_time() const;
  inline void clear_last_be_loot_time();
  static const int kLastBeLootTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 last_be_loot_time() const;
  inline void set_last_be_loot_time(::google::protobuf::uint64 value);

  // required fixed64 last_loot_time = 5;
  inline bool has_last_loot_time() const;
  inline void clear_last_loot_time();
  static const int kLastLootTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 last_loot_time() const;
  inline void set_last_loot_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Db.LootPlayer)
 private:
  inline void set_has_last_loot_player_guid();
  inline void clear_has_last_loot_player_guid();
  inline void set_has_unbind_coin();
  inline void clear_has_unbind_coin();
  inline void set_has_be_loot_count_today();
  inline void clear_has_be_loot_count_today();
  inline void set_has_last_be_loot_time();
  inline void clear_has_last_be_loot_time();
  inline void set_has_last_loot_time();
  inline void clear_has_last_loot_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 last_loot_player_guid_;
  ::google::protobuf::int32 unbind_coin_;
  ::google::protobuf::int32 be_loot_count_today_;
  ::google::protobuf::uint64 last_be_loot_time_;
  ::google::protobuf::uint64 last_loot_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_LootDb_2eproto();
  friend void protobuf_AssignDesc_LootDb_2eproto();
  friend void protobuf_ShutdownFile_LootDb_2eproto();

  void InitAsDefaultInstance();
  static LootPlayer* default_instance_;
};
// ===================================================================


// ===================================================================

// LootPlayer

// required fixed64 last_loot_player_guid = 1;
inline bool LootPlayer::has_last_loot_player_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LootPlayer::set_has_last_loot_player_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LootPlayer::clear_has_last_loot_player_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LootPlayer::clear_last_loot_player_guid() {
  last_loot_player_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_last_loot_player_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 LootPlayer::last_loot_player_guid() const {
  return last_loot_player_guid_;
}
inline void LootPlayer::set_last_loot_player_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_last_loot_player_guid();
  last_loot_player_guid_ = value;
}

// required int32 unbind_coin = 2;
inline bool LootPlayer::has_unbind_coin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LootPlayer::set_has_unbind_coin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LootPlayer::clear_has_unbind_coin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LootPlayer::clear_unbind_coin() {
  unbind_coin_ = 0;
  clear_has_unbind_coin();
  SetDirty();
}
inline ::google::protobuf::int32 LootPlayer::unbind_coin() const {
  return unbind_coin_;
}
inline void LootPlayer::set_unbind_coin(::google::protobuf::int32 value) {
  SetDirty();
  set_has_unbind_coin();
  unbind_coin_ = value;
}

// required int32 be_loot_count_today = 3;
inline bool LootPlayer::has_be_loot_count_today() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LootPlayer::set_has_be_loot_count_today() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LootPlayer::clear_has_be_loot_count_today() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LootPlayer::clear_be_loot_count_today() {
  be_loot_count_today_ = 0;
  clear_has_be_loot_count_today();
  SetDirty();
}
inline ::google::protobuf::int32 LootPlayer::be_loot_count_today() const {
  return be_loot_count_today_;
}
inline void LootPlayer::set_be_loot_count_today(::google::protobuf::int32 value) {
  SetDirty();
  set_has_be_loot_count_today();
  be_loot_count_today_ = value;
}

// required fixed64 last_be_loot_time = 4;
inline bool LootPlayer::has_last_be_loot_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LootPlayer::set_has_last_be_loot_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LootPlayer::clear_has_last_be_loot_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LootPlayer::clear_last_be_loot_time() {
  last_be_loot_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_be_loot_time();
  SetDirty();
}
inline ::google::protobuf::uint64 LootPlayer::last_be_loot_time() const {
  return last_be_loot_time_;
}
inline void LootPlayer::set_last_be_loot_time(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_last_be_loot_time();
  last_be_loot_time_ = value;
}

// required fixed64 last_loot_time = 5;
inline bool LootPlayer::has_last_loot_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LootPlayer::set_has_last_loot_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LootPlayer::clear_has_last_loot_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LootPlayer::clear_last_loot_time() {
  last_loot_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_loot_time();
  SetDirty();
}
inline ::google::protobuf::uint64 LootPlayer::last_loot_time() const {
  return last_loot_time_;
}
inline void LootPlayer::set_last_loot_time(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_last_loot_time();
  last_loot_time_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Db

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LootDb_2eproto__INCLUDED

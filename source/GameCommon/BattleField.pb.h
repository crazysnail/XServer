// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BattleField.proto

#ifndef PROTOBUF_BattleField_2eproto__INCLUDED
#define PROTOBUF_BattleField_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "AllPacketEnum.pb.h"
#include "AllConfigEnum.pb.h"
#include "Base.pb.h"
#include "ProtoBufOption.pb.h"
// @@protoc_insertion_point(includes)

namespace Packet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BattleField_2eproto();
void protobuf_AssignDesc_BattleField_2eproto();
void protobuf_ShutdownFile_BattleField_2eproto();

class BFConfig;
class BattleFeildProxy;
class BattleRoomInfo;
class BattleFieldPlayerInfo;
class BattleFieldInfo;
class JoinBattleRoom;
class LeaveBattleRoom;
class LeaveBattleField;
class AgreeEnterBattleField;
class DisAgreeEnterBattleField;
class EnterRoomNotify;
class EnterBattleFieldNotify;
class BeginBattleFieldNotify;
class BeginBattleField;
class BattleFieldFightTarget;
class FlagOprate;
class BfResult;

// ===================================================================

class BFConfig : public ::google::protobuf::Message {
 public:
  BFConfig();
  virtual ~BFConfig();

  BFConfig(const BFConfig& from);

  inline BFConfig& operator=(const BFConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BFConfig& default_instance();

  void Swap(BFConfig* other);

  // implements Message ----------------------------------------------

  BFConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BFConfig& from);
  void MergeFrom(const BFConfig& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 win_exp = 2;
  inline bool has_win_exp() const;
  inline void clear_win_exp();
  static const int kWinExpFieldNumber = 2;
  inline ::google::protobuf::int32 win_exp() const;
  inline void set_win_exp(::google::protobuf::int32 value);

  // required int32 win_gold = 3;
  inline bool has_win_gold() const;
  inline void clear_win_gold();
  static const int kWinGoldFieldNumber = 3;
  inline ::google::protobuf::int32 win_gold() const;
  inline void set_win_gold(::google::protobuf::int32 value);

  // required int32 lose_exp = 4;
  inline bool has_lose_exp() const;
  inline void clear_lose_exp();
  static const int kLoseExpFieldNumber = 4;
  inline ::google::protobuf::int32 lose_exp() const;
  inline void set_lose_exp(::google::protobuf::int32 value);

  // required int32 lose_gold = 5;
  inline bool has_lose_gold() const;
  inline void clear_lose_gold();
  static const int kLoseGoldFieldNumber = 5;
  inline ::google::protobuf::int32 lose_gold() const;
  inline void set_lose_gold(::google::protobuf::int32 value);

  // required int32 get_flag_exp = 6;
  inline bool has_get_flag_exp() const;
  inline void clear_get_flag_exp();
  static const int kGetFlagExpFieldNumber = 6;
  inline ::google::protobuf::int32 get_flag_exp() const;
  inline void set_get_flag_exp(::google::protobuf::int32 value);

  // required int32 get_flag_gold = 7;
  inline bool has_get_flag_gold() const;
  inline void clear_get_flag_gold();
  static const int kGetFlagGoldFieldNumber = 7;
  inline ::google::protobuf::int32 get_flag_gold() const;
  inline void set_get_flag_gold(::google::protobuf::int32 value);

  // required int32 battle_win_exp = 8;
  inline bool has_battle_win_exp() const;
  inline void clear_battle_win_exp();
  static const int kBattleWinExpFieldNumber = 8;
  inline ::google::protobuf::int32 battle_win_exp() const;
  inline void set_battle_win_exp(::google::protobuf::int32 value);

  // required int32 battle_win_gold = 9;
  inline bool has_battle_win_gold() const;
  inline void clear_battle_win_gold();
  static const int kBattleWinGoldFieldNumber = 9;
  inline ::google::protobuf::int32 battle_win_gold() const;
  inline void set_battle_win_gold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.BFConfig)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_win_exp();
  inline void clear_has_win_exp();
  inline void set_has_win_gold();
  inline void clear_has_win_gold();
  inline void set_has_lose_exp();
  inline void clear_has_lose_exp();
  inline void set_has_lose_gold();
  inline void clear_has_lose_gold();
  inline void set_has_get_flag_exp();
  inline void clear_has_get_flag_exp();
  inline void set_has_get_flag_gold();
  inline void clear_has_get_flag_gold();
  inline void set_has_battle_win_exp();
  inline void clear_has_battle_win_exp();
  inline void set_has_battle_win_gold();
  inline void clear_has_battle_win_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 win_exp_;
  ::google::protobuf::int32 win_gold_;
  ::google::protobuf::int32 lose_exp_;
  ::google::protobuf::int32 lose_gold_;
  ::google::protobuf::int32 get_flag_exp_;
  ::google::protobuf::int32 get_flag_gold_;
  ::google::protobuf::int32 battle_win_exp_;
  ::google::protobuf::int32 battle_win_gold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_BattleField_2eproto();
  friend void protobuf_AssignDesc_BattleField_2eproto();
  friend void protobuf_ShutdownFile_BattleField_2eproto();

  void InitAsDefaultInstance();
  static BFConfig* default_instance_;
};
// -------------------------------------------------------------------

class BattleFeildProxy : public ::google::protobuf::Message {
 public:
  BattleFeildProxy();
  virtual ~BattleFeildProxy();

  BattleFeildProxy(const BattleFeildProxy& from);

  inline BattleFeildProxy& operator=(const BattleFeildProxy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleFeildProxy& default_instance();

  void Swap(BattleFeildProxy* other);

  // implements Message ----------------------------------------------

  BattleFeildProxy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleFeildProxy& from);
  void MergeFrom(const BattleFeildProxy& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 raid_rtid = 1;
  inline bool has_raid_rtid() const;
  inline void clear_raid_rtid();
  static const int kRaidRtidFieldNumber = 1;
  inline ::google::protobuf::int32 raid_rtid() const;
  inline void set_raid_rtid(::google::protobuf::int32 value);

  // required .Config.BFState bf_state = 2;
  inline bool has_bf_state() const;
  inline void clear_bf_state();
  static const int kBfStateFieldNumber = 2;
  inline ::Config::BFState bf_state() const;
  inline void set_bf_state(::Config::BFState value);

  // @@protoc_insertion_point(class_scope:Packet.BattleFeildProxy)
 private:
  inline void set_has_raid_rtid();
  inline void clear_has_raid_rtid();
  inline void set_has_bf_state();
  inline void clear_has_bf_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 raid_rtid_;
  int bf_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BattleField_2eproto();
  friend void protobuf_AssignDesc_BattleField_2eproto();
  friend void protobuf_ShutdownFile_BattleField_2eproto();

  void InitAsDefaultInstance();
  static BattleFeildProxy* default_instance_;
};
// -------------------------------------------------------------------

class BattleRoomInfo : public ::google::protobuf::Message {
 public:
  BattleRoomInfo();
  virtual ~BattleRoomInfo();

  BattleRoomInfo(const BattleRoomInfo& from);

  inline BattleRoomInfo& operator=(const BattleRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleRoomInfo& default_instance();

  void Swap(BattleRoomInfo* other);

  // implements Message ----------------------------------------------

  BattleRoomInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleRoomInfo& from);
  void MergeFrom(const BattleRoomInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 min_level = 1;
  inline bool has_min_level() const;
  inline void clear_min_level();
  static const int kMinLevelFieldNumber = 1;
  inline ::google::protobuf::int32 min_level() const;
  inline void set_min_level(::google::protobuf::int32 value);

  // required int32 max_level = 2;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 2;
  inline ::google::protobuf::int32 max_level() const;
  inline void set_max_level(::google::protobuf::int32 value);

  // required int32 max_count = 3;
  inline bool has_max_count() const;
  inline void clear_max_count();
  static const int kMaxCountFieldNumber = 3;
  inline ::google::protobuf::int32 max_count() const;
  inline void set_max_count(::google::protobuf::int32 value);

  // required int32 scene_id = 4;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 4;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);

  // required .Packet.BattleFieldState bf_state = 5;
  inline bool has_bf_state() const;
  inline void clear_bf_state();
  static const int kBfStateFieldNumber = 5;
  inline ::Packet::BattleFieldState bf_state() const;
  inline void set_bf_state(::Packet::BattleFieldState value);

  // repeated .Packet.BattleFieldPlayerInfo players = 6;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 6;
  inline const ::Packet::BattleFieldPlayerInfo& players(int index) const;
  inline ::Packet::BattleFieldPlayerInfo* mutable_players(int index);
  inline ::Packet::BattleFieldPlayerInfo* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::BattleFieldPlayerInfo >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::BattleFieldPlayerInfo >*
      mutable_players();

  // @@protoc_insertion_point(class_scope:Packet.BattleRoomInfo)
 private:
  inline void set_has_min_level();
  inline void clear_has_min_level();
  inline void set_has_max_level();
  inline void clear_has_max_level();
  inline void set_has_max_count();
  inline void clear_has_max_count();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_bf_state();
  inline void clear_has_bf_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 min_level_;
  ::google::protobuf::int32 max_level_;
  ::google::protobuf::int32 max_count_;
  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::RepeatedPtrField< ::Packet::BattleFieldPlayerInfo > players_;
  int bf_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_BattleField_2eproto();
  friend void protobuf_AssignDesc_BattleField_2eproto();
  friend void protobuf_ShutdownFile_BattleField_2eproto();

  void InitAsDefaultInstance();
  static BattleRoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class BattleFieldPlayerInfo : public ::google::protobuf::Message {
 public:
  BattleFieldPlayerInfo();
  virtual ~BattleFieldPlayerInfo();

  BattleFieldPlayerInfo(const BattleFieldPlayerInfo& from);

  inline BattleFieldPlayerInfo& operator=(const BattleFieldPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleFieldPlayerInfo& default_instance();

  void Swap(BattleFieldPlayerInfo* other);

  // implements Message ----------------------------------------------

  BattleFieldPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleFieldPlayerInfo& from);
  void MergeFrom(const BattleFieldPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required int32 kill_num = 2;
  inline bool has_kill_num() const;
  inline void clear_kill_num();
  static const int kKillNumFieldNumber = 2;
  inline ::google::protobuf::int32 kill_num() const;
  inline void set_kill_num(::google::protobuf::int32 value);

  // required int32 dead_num = 3;
  inline bool has_dead_num() const;
  inline void clear_dead_num();
  static const int kDeadNumFieldNumber = 3;
  inline ::google::protobuf::int32 dead_num() const;
  inline void set_dead_num(::google::protobuf::int32 value);

  // required int32 get_flag_num = 4;
  inline bool has_get_flag_num() const;
  inline void clear_get_flag_num();
  static const int kGetFlagNumFieldNumber = 4;
  inline ::google::protobuf::int32 get_flag_num() const;
  inline void set_get_flag_num(::google::protobuf::int32 value);

  // required int32 return_flag_num = 5;
  inline bool has_return_flag_num() const;
  inline void clear_return_flag_num();
  static const int kReturnFlagNumFieldNumber = 5;
  inline ::google::protobuf::int32 return_flag_num() const;
  inline void set_return_flag_num(::google::protobuf::int32 value);

  // required int32 honor = 6;
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 6;
  inline ::google::protobuf::int32 honor() const;
  inline void set_honor(::google::protobuf::int32 value);

  // required bool has_flag = 7;
  inline bool has_has_flag() const;
  inline void clear_has_flag();
  static const int kHasFlagFieldNumber = 7;
  inline bool has_flag() const;
  inline void set_has_flag(bool value);

  // required .Packet.BattleFieldState bf_state = 8;
  inline bool has_bf_state() const;
  inline void clear_bf_state();
  static const int kBfStateFieldNumber = 8;
  inline ::Packet::BattleFieldState bf_state() const;
  inline void set_bf_state(::Packet::BattleFieldState value);

  // required bool locked = 9;
  inline bool has_locked() const;
  inline void clear_locked();
  static const int kLockedFieldNumber = 9;
  inline bool locked() const;
  inline void set_locked(bool value);

  // required bool dead = 10;
  inline bool has_dead() const;
  inline void clear_dead();
  static const int kDeadFieldNumber = 10;
  inline bool dead() const;
  inline void set_dead(bool value);

  // required int32 old_camp = 11;
  inline bool has_old_camp() const;
  inline void clear_old_camp();
  static const int kOldCampFieldNumber = 11;
  inline ::google::protobuf::int32 old_camp() const;
  inline void set_old_camp(::google::protobuf::int32 value);

  // required string name = 12;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 12;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required .Packet.Professions prof = 13;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 13;
  inline ::Packet::Professions prof() const;
  inline void set_prof(::Packet::Professions value);

  // @@protoc_insertion_point(class_scope:Packet.BattleFieldPlayerInfo)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_kill_num();
  inline void clear_has_kill_num();
  inline void set_has_dead_num();
  inline void clear_has_dead_num();
  inline void set_has_get_flag_num();
  inline void clear_has_get_flag_num();
  inline void set_has_return_flag_num();
  inline void clear_has_return_flag_num();
  inline void set_has_honor();
  inline void clear_has_honor();
  inline void set_has_has_flag();
  inline void clear_has_has_flag();
  inline void set_has_bf_state();
  inline void clear_has_bf_state();
  inline void set_has_locked();
  inline void clear_has_locked();
  inline void set_has_dead();
  inline void clear_has_dead();
  inline void set_has_old_camp();
  inline void clear_has_old_camp();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_prof();
  inline void clear_has_prof();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 kill_num_;
  ::google::protobuf::int32 dead_num_;
  ::google::protobuf::int32 get_flag_num_;
  ::google::protobuf::int32 return_flag_num_;
  ::google::protobuf::int32 honor_;
  int bf_state_;
  bool has_flag_;
  bool locked_;
  bool dead_;
  ::google::protobuf::int32 old_camp_;
  ::std::string* name_;
  int prof_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_BattleField_2eproto();
  friend void protobuf_AssignDesc_BattleField_2eproto();
  friend void protobuf_ShutdownFile_BattleField_2eproto();

  void InitAsDefaultInstance();
  static BattleFieldPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class BattleFieldInfo : public ::google::protobuf::Message {
 public:
  BattleFieldInfo();
  virtual ~BattleFieldInfo();

  BattleFieldInfo(const BattleFieldInfo& from);

  inline BattleFieldInfo& operator=(const BattleFieldInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleFieldInfo& default_instance();

  void Swap(BattleFieldInfo* other);

  // implements Message ----------------------------------------------

  BattleFieldInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleFieldInfo& from);
  void MergeFrom(const BattleFieldInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 attackers = 1;
  inline int attackers_size() const;
  inline void clear_attackers();
  static const int kAttackersFieldNumber = 1;
  inline ::google::protobuf::uint64 attackers(int index) const;
  inline void set_attackers(int index, ::google::protobuf::uint64 value);
  inline void add_attackers(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      attackers() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_attackers();

  // repeated fixed64 defenders = 2;
  inline int defenders_size() const;
  inline void clear_defenders();
  static const int kDefendersFieldNumber = 2;
  inline ::google::protobuf::uint64 defenders(int index) const;
  inline void set_defenders(int index, ::google::protobuf::uint64 value);
  inline void add_defenders(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      defenders() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_defenders();

  // required bool attacker_flag = 3;
  inline bool has_attacker_flag() const;
  inline void clear_attacker_flag();
  static const int kAttackerFlagFieldNumber = 3;
  inline bool attacker_flag() const;
  inline void set_attacker_flag(bool value);

  // required bool defender_flag = 4;
  inline bool has_defender_flag() const;
  inline void clear_defender_flag();
  static const int kDefenderFlagFieldNumber = 4;
  inline bool defender_flag() const;
  inline void set_defender_flag(bool value);

  // required int32 attacker_flag_count = 5;
  inline bool has_attacker_flag_count() const;
  inline void clear_attacker_flag_count();
  static const int kAttackerFlagCountFieldNumber = 5;
  inline ::google::protobuf::int32 attacker_flag_count() const;
  inline void set_attacker_flag_count(::google::protobuf::int32 value);

  // required int32 defender_flag_count = 6;
  inline bool has_defender_flag_count() const;
  inline void clear_defender_flag_count();
  static const int kDefenderFlagCountFieldNumber = 6;
  inline ::google::protobuf::int32 defender_flag_count() const;
  inline void set_defender_flag_count(::google::protobuf::int32 value);

  // required int32 attacker_point = 7;
  inline bool has_attacker_point() const;
  inline void clear_attacker_point();
  static const int kAttackerPointFieldNumber = 7;
  inline ::google::protobuf::int32 attacker_point() const;
  inline void set_attacker_point(::google::protobuf::int32 value);

  // required int32 defender_point = 8;
  inline bool has_defender_point() const;
  inline void clear_defender_point();
  static const int kDefenderPointFieldNumber = 8;
  inline ::google::protobuf::int32 defender_point() const;
  inline void set_defender_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.BattleFieldInfo)
 private:
  inline void set_has_attacker_flag();
  inline void clear_has_attacker_flag();
  inline void set_has_defender_flag();
  inline void clear_has_defender_flag();
  inline void set_has_attacker_flag_count();
  inline void clear_has_attacker_flag_count();
  inline void set_has_defender_flag_count();
  inline void clear_has_defender_flag_count();
  inline void set_has_attacker_point();
  inline void clear_has_attacker_point();
  inline void set_has_defender_point();
  inline void clear_has_defender_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > attackers_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > defenders_;
  bool attacker_flag_;
  bool defender_flag_;
  ::google::protobuf::int32 attacker_flag_count_;
  ::google::protobuf::int32 defender_flag_count_;
  ::google::protobuf::int32 attacker_point_;
  ::google::protobuf::int32 defender_point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_BattleField_2eproto();
  friend void protobuf_AssignDesc_BattleField_2eproto();
  friend void protobuf_ShutdownFile_BattleField_2eproto();

  void InitAsDefaultInstance();
  static BattleFieldInfo* default_instance_;
};
// -------------------------------------------------------------------

class JoinBattleRoom : public ::google::protobuf::Message {
 public:
  JoinBattleRoom();
  virtual ~JoinBattleRoom();

  JoinBattleRoom(const JoinBattleRoom& from);

  inline JoinBattleRoom& operator=(const JoinBattleRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinBattleRoom& default_instance();

  void Swap(JoinBattleRoom* other);

  // implements Message ----------------------------------------------

  JoinBattleRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinBattleRoom& from);
  void MergeFrom(const JoinBattleRoom& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 scene_id = 1;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);

  // required int32 npc_index = 2;
  inline bool has_npc_index() const;
  inline void clear_npc_index();
  static const int kNpcIndexFieldNumber = 2;
  inline ::google::protobuf::int32 npc_index() const;
  inline void set_npc_index(::google::protobuf::int32 value);

  // required int32 script_id = 3;
  inline bool has_script_id() const;
  inline void clear_script_id();
  static const int kScriptIdFieldNumber = 3;
  inline ::google::protobuf::int32 script_id() const;
  inline void set_script_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.JoinBattleRoom)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_npc_index();
  inline void clear_has_npc_index();
  inline void set_has_script_id();
  inline void clear_has_script_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::int32 npc_index_;
  ::google::protobuf::int32 script_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BattleField_2eproto();
  friend void protobuf_AssignDesc_BattleField_2eproto();
  friend void protobuf_ShutdownFile_BattleField_2eproto();

  void InitAsDefaultInstance();
  static JoinBattleRoom* default_instance_;
};
// -------------------------------------------------------------------

class LeaveBattleRoom : public ::google::protobuf::Message {
 public:
  LeaveBattleRoom();
  virtual ~LeaveBattleRoom();

  LeaveBattleRoom(const LeaveBattleRoom& from);

  inline LeaveBattleRoom& operator=(const LeaveBattleRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveBattleRoom& default_instance();

  void Swap(LeaveBattleRoom* other);

  // implements Message ----------------------------------------------

  LeaveBattleRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaveBattleRoom& from);
  void MergeFrom(const LeaveBattleRoom& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.LeaveBattleRoom)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_BattleField_2eproto();
  friend void protobuf_AssignDesc_BattleField_2eproto();
  friend void protobuf_ShutdownFile_BattleField_2eproto();

  void InitAsDefaultInstance();
  static LeaveBattleRoom* default_instance_;
};
// -------------------------------------------------------------------

class LeaveBattleField : public ::google::protobuf::Message {
 public:
  LeaveBattleField();
  virtual ~LeaveBattleField();

  LeaveBattleField(const LeaveBattleField& from);

  inline LeaveBattleField& operator=(const LeaveBattleField& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveBattleField& default_instance();

  void Swap(LeaveBattleField* other);

  // implements Message ----------------------------------------------

  LeaveBattleField* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaveBattleField& from);
  void MergeFrom(const LeaveBattleField& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.LeaveBattleField)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_BattleField_2eproto();
  friend void protobuf_AssignDesc_BattleField_2eproto();
  friend void protobuf_ShutdownFile_BattleField_2eproto();

  void InitAsDefaultInstance();
  static LeaveBattleField* default_instance_;
};
// -------------------------------------------------------------------

class AgreeEnterBattleField : public ::google::protobuf::Message {
 public:
  AgreeEnterBattleField();
  virtual ~AgreeEnterBattleField();

  AgreeEnterBattleField(const AgreeEnterBattleField& from);

  inline AgreeEnterBattleField& operator=(const AgreeEnterBattleField& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AgreeEnterBattleField& default_instance();

  void Swap(AgreeEnterBattleField* other);

  // implements Message ----------------------------------------------

  AgreeEnterBattleField* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AgreeEnterBattleField& from);
  void MergeFrom(const AgreeEnterBattleField& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.AgreeEnterBattleField)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_BattleField_2eproto();
  friend void protobuf_AssignDesc_BattleField_2eproto();
  friend void protobuf_ShutdownFile_BattleField_2eproto();

  void InitAsDefaultInstance();
  static AgreeEnterBattleField* default_instance_;
};
// -------------------------------------------------------------------

class DisAgreeEnterBattleField : public ::google::protobuf::Message {
 public:
  DisAgreeEnterBattleField();
  virtual ~DisAgreeEnterBattleField();

  DisAgreeEnterBattleField(const DisAgreeEnterBattleField& from);

  inline DisAgreeEnterBattleField& operator=(const DisAgreeEnterBattleField& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DisAgreeEnterBattleField& default_instance();

  void Swap(DisAgreeEnterBattleField* other);

  // implements Message ----------------------------------------------

  DisAgreeEnterBattleField* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DisAgreeEnterBattleField& from);
  void MergeFrom(const DisAgreeEnterBattleField& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.DisAgreeEnterBattleField)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_BattleField_2eproto();
  friend void protobuf_AssignDesc_BattleField_2eproto();
  friend void protobuf_ShutdownFile_BattleField_2eproto();

  void InitAsDefaultInstance();
  static DisAgreeEnterBattleField* default_instance_;
};
// -------------------------------------------------------------------

class EnterRoomNotify : public ::google::protobuf::Message {
 public:
  EnterRoomNotify();
  virtual ~EnterRoomNotify();

  EnterRoomNotify(const EnterRoomNotify& from);

  inline EnterRoomNotify& operator=(const EnterRoomNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterRoomNotify& default_instance();

  void Swap(EnterRoomNotify* other);

  // implements Message ----------------------------------------------

  EnterRoomNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterRoomNotify& from);
  void MergeFrom(const EnterRoomNotify& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.EnterRoomNotify)
 private:
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_BattleField_2eproto();
  friend void protobuf_AssignDesc_BattleField_2eproto();
  friend void protobuf_ShutdownFile_BattleField_2eproto();

  void InitAsDefaultInstance();
  static EnterRoomNotify* default_instance_;
};
// -------------------------------------------------------------------

class EnterBattleFieldNotify : public ::google::protobuf::Message {
 public:
  EnterBattleFieldNotify();
  virtual ~EnterBattleFieldNotify();

  EnterBattleFieldNotify(const EnterBattleFieldNotify& from);

  inline EnterBattleFieldNotify& operator=(const EnterBattleFieldNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterBattleFieldNotify& default_instance();

  void Swap(EnterBattleFieldNotify* other);

  // implements Message ----------------------------------------------

  EnterBattleFieldNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterBattleFieldNotify& from);
  void MergeFrom(const EnterBattleFieldNotify& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.EnterBattleFieldNotify)
 private:
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_BattleField_2eproto();
  friend void protobuf_AssignDesc_BattleField_2eproto();
  friend void protobuf_ShutdownFile_BattleField_2eproto();

  void InitAsDefaultInstance();
  static EnterBattleFieldNotify* default_instance_;
};
// -------------------------------------------------------------------

class BeginBattleFieldNotify : public ::google::protobuf::Message {
 public:
  BeginBattleFieldNotify();
  virtual ~BeginBattleFieldNotify();

  BeginBattleFieldNotify(const BeginBattleFieldNotify& from);

  inline BeginBattleFieldNotify& operator=(const BeginBattleFieldNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeginBattleFieldNotify& default_instance();

  void Swap(BeginBattleFieldNotify* other);

  // implements Message ----------------------------------------------

  BeginBattleFieldNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeginBattleFieldNotify& from);
  void MergeFrom(const BeginBattleFieldNotify& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.BeginBattleFieldNotify)
 private:
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_BattleField_2eproto();
  friend void protobuf_AssignDesc_BattleField_2eproto();
  friend void protobuf_ShutdownFile_BattleField_2eproto();

  void InitAsDefaultInstance();
  static BeginBattleFieldNotify* default_instance_;
};
// -------------------------------------------------------------------

class BeginBattleField : public ::google::protobuf::Message {
 public:
  BeginBattleField();
  virtual ~BeginBattleField();

  BeginBattleField(const BeginBattleField& from);

  inline BeginBattleField& operator=(const BeginBattleField& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeginBattleField& default_instance();

  void Swap(BeginBattleField* other);

  // implements Message ----------------------------------------------

  BeginBattleField* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeginBattleField& from);
  void MergeFrom(const BeginBattleField& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.BeginBattleField)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_BattleField_2eproto();
  friend void protobuf_AssignDesc_BattleField_2eproto();
  friend void protobuf_ShutdownFile_BattleField_2eproto();

  void InitAsDefaultInstance();
  static BeginBattleField* default_instance_;
};
// -------------------------------------------------------------------

class BattleFieldFightTarget : public ::google::protobuf::Message {
 public:
  BattleFieldFightTarget();
  virtual ~BattleFieldFightTarget();

  BattleFieldFightTarget(const BattleFieldFightTarget& from);

  inline BattleFieldFightTarget& operator=(const BattleFieldFightTarget& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleFieldFightTarget& default_instance();

  void Swap(BattleFieldFightTarget* other);

  // implements Message ----------------------------------------------

  BattleFieldFightTarget* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleFieldFightTarget& from);
  void MergeFrom(const BattleFieldFightTarget& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 target_guid = 1;
  inline bool has_target_guid() const;
  inline void clear_target_guid();
  static const int kTargetGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 target_guid() const;
  inline void set_target_guid(::google::protobuf::uint64 value);

  // required int32 battle_group_id = 2;
  inline bool has_battle_group_id() const;
  inline void clear_battle_group_id();
  static const int kBattleGroupIdFieldNumber = 2;
  inline ::google::protobuf::int32 battle_group_id() const;
  inline void set_battle_group_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.BattleFieldFightTarget)
 private:
  inline void set_has_target_guid();
  inline void clear_has_target_guid();
  inline void set_has_battle_group_id();
  inline void clear_has_battle_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 target_guid_;
  ::google::protobuf::int32 battle_group_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BattleField_2eproto();
  friend void protobuf_AssignDesc_BattleField_2eproto();
  friend void protobuf_ShutdownFile_BattleField_2eproto();

  void InitAsDefaultInstance();
  static BattleFieldFightTarget* default_instance_;
};
// -------------------------------------------------------------------

class FlagOprate : public ::google::protobuf::Message {
 public:
  FlagOprate();
  virtual ~FlagOprate();

  FlagOprate(const FlagOprate& from);

  inline FlagOprate& operator=(const FlagOprate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FlagOprate& default_instance();

  void Swap(FlagOprate* other);

  // implements Message ----------------------------------------------

  FlagOprate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FlagOprate& from);
  void MergeFrom(const FlagOprate& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.FlagOption option = 1;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 1;
  inline ::Packet::FlagOption option() const;
  inline void set_option(::Packet::FlagOption value);

  // required fixed64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.FlagOprate)
 private:
  inline void set_has_option();
  inline void clear_has_option();
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  int option_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BattleField_2eproto();
  friend void protobuf_AssignDesc_BattleField_2eproto();
  friend void protobuf_ShutdownFile_BattleField_2eproto();

  void InitAsDefaultInstance();
  static FlagOprate* default_instance_;
};
// -------------------------------------------------------------------

class BfResult : public ::google::protobuf::Message {
 public:
  BfResult();
  virtual ~BfResult();

  BfResult(const BfResult& from);

  inline BfResult& operator=(const BfResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BfResult& default_instance();

  void Swap(BfResult* other);

  // implements Message ----------------------------------------------

  BfResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BfResult& from);
  void MergeFrom(const BfResult& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 winner = 1;
  inline bool has_winner() const;
  inline void clear_winner();
  static const int kWinnerFieldNumber = 1;
  inline ::google::protobuf::int32 winner() const;
  inline void set_winner(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.BfResult)
 private:
  inline void set_has_winner();
  inline void clear_has_winner();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 winner_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_BattleField_2eproto();
  friend void protobuf_AssignDesc_BattleField_2eproto();
  friend void protobuf_ShutdownFile_BattleField_2eproto();

  void InitAsDefaultInstance();
  static BfResult* default_instance_;
};
// ===================================================================


// ===================================================================

// BFConfig

// required int32 level = 1;
inline bool BFConfig::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BFConfig::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BFConfig::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BFConfig::clear_level() {
  level_ = 0;
  clear_has_level();
  SetDirty();
}
inline ::google::protobuf::int32 BFConfig::level() const {
  return level_;
}
inline void BFConfig::set_level(::google::protobuf::int32 value) {
  SetDirty();
  set_has_level();
  level_ = value;
}

// required int32 win_exp = 2;
inline bool BFConfig::has_win_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BFConfig::set_has_win_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BFConfig::clear_has_win_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BFConfig::clear_win_exp() {
  win_exp_ = 0;
  clear_has_win_exp();
  SetDirty();
}
inline ::google::protobuf::int32 BFConfig::win_exp() const {
  return win_exp_;
}
inline void BFConfig::set_win_exp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_win_exp();
  win_exp_ = value;
}

// required int32 win_gold = 3;
inline bool BFConfig::has_win_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BFConfig::set_has_win_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BFConfig::clear_has_win_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BFConfig::clear_win_gold() {
  win_gold_ = 0;
  clear_has_win_gold();
  SetDirty();
}
inline ::google::protobuf::int32 BFConfig::win_gold() const {
  return win_gold_;
}
inline void BFConfig::set_win_gold(::google::protobuf::int32 value) {
  SetDirty();
  set_has_win_gold();
  win_gold_ = value;
}

// required int32 lose_exp = 4;
inline bool BFConfig::has_lose_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BFConfig::set_has_lose_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BFConfig::clear_has_lose_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BFConfig::clear_lose_exp() {
  lose_exp_ = 0;
  clear_has_lose_exp();
  SetDirty();
}
inline ::google::protobuf::int32 BFConfig::lose_exp() const {
  return lose_exp_;
}
inline void BFConfig::set_lose_exp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_lose_exp();
  lose_exp_ = value;
}

// required int32 lose_gold = 5;
inline bool BFConfig::has_lose_gold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BFConfig::set_has_lose_gold() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BFConfig::clear_has_lose_gold() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BFConfig::clear_lose_gold() {
  lose_gold_ = 0;
  clear_has_lose_gold();
  SetDirty();
}
inline ::google::protobuf::int32 BFConfig::lose_gold() const {
  return lose_gold_;
}
inline void BFConfig::set_lose_gold(::google::protobuf::int32 value) {
  SetDirty();
  set_has_lose_gold();
  lose_gold_ = value;
}

// required int32 get_flag_exp = 6;
inline bool BFConfig::has_get_flag_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BFConfig::set_has_get_flag_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BFConfig::clear_has_get_flag_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BFConfig::clear_get_flag_exp() {
  get_flag_exp_ = 0;
  clear_has_get_flag_exp();
  SetDirty();
}
inline ::google::protobuf::int32 BFConfig::get_flag_exp() const {
  return get_flag_exp_;
}
inline void BFConfig::set_get_flag_exp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_get_flag_exp();
  get_flag_exp_ = value;
}

// required int32 get_flag_gold = 7;
inline bool BFConfig::has_get_flag_gold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BFConfig::set_has_get_flag_gold() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BFConfig::clear_has_get_flag_gold() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BFConfig::clear_get_flag_gold() {
  get_flag_gold_ = 0;
  clear_has_get_flag_gold();
  SetDirty();
}
inline ::google::protobuf::int32 BFConfig::get_flag_gold() const {
  return get_flag_gold_;
}
inline void BFConfig::set_get_flag_gold(::google::protobuf::int32 value) {
  SetDirty();
  set_has_get_flag_gold();
  get_flag_gold_ = value;
}

// required int32 battle_win_exp = 8;
inline bool BFConfig::has_battle_win_exp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BFConfig::set_has_battle_win_exp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BFConfig::clear_has_battle_win_exp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BFConfig::clear_battle_win_exp() {
  battle_win_exp_ = 0;
  clear_has_battle_win_exp();
  SetDirty();
}
inline ::google::protobuf::int32 BFConfig::battle_win_exp() const {
  return battle_win_exp_;
}
inline void BFConfig::set_battle_win_exp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_battle_win_exp();
  battle_win_exp_ = value;
}

// required int32 battle_win_gold = 9;
inline bool BFConfig::has_battle_win_gold() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BFConfig::set_has_battle_win_gold() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BFConfig::clear_has_battle_win_gold() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BFConfig::clear_battle_win_gold() {
  battle_win_gold_ = 0;
  clear_has_battle_win_gold();
  SetDirty();
}
inline ::google::protobuf::int32 BFConfig::battle_win_gold() const {
  return battle_win_gold_;
}
inline void BFConfig::set_battle_win_gold(::google::protobuf::int32 value) {
  SetDirty();
  set_has_battle_win_gold();
  battle_win_gold_ = value;
}

// -------------------------------------------------------------------

// BattleFeildProxy

// required int32 raid_rtid = 1;
inline bool BattleFeildProxy::has_raid_rtid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleFeildProxy::set_has_raid_rtid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleFeildProxy::clear_has_raid_rtid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleFeildProxy::clear_raid_rtid() {
  raid_rtid_ = 0;
  clear_has_raid_rtid();
  SetDirty();
}
inline ::google::protobuf::int32 BattleFeildProxy::raid_rtid() const {
  return raid_rtid_;
}
inline void BattleFeildProxy::set_raid_rtid(::google::protobuf::int32 value) {
  SetDirty();
  set_has_raid_rtid();
  raid_rtid_ = value;
}

// required .Config.BFState bf_state = 2;
inline bool BattleFeildProxy::has_bf_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleFeildProxy::set_has_bf_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleFeildProxy::clear_has_bf_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleFeildProxy::clear_bf_state() {
  bf_state_ = 0;
  clear_has_bf_state();
  SetDirty();
}
inline ::Config::BFState BattleFeildProxy::bf_state() const {
  return static_cast< ::Config::BFState >(bf_state_);
}
inline void BattleFeildProxy::set_bf_state(::Config::BFState value) {
  assert(::Config::BFState_IsValid(value));
  SetDirty();
  set_has_bf_state();
  bf_state_ = value;
}

// -------------------------------------------------------------------

// BattleRoomInfo

// required int32 min_level = 1;
inline bool BattleRoomInfo::has_min_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleRoomInfo::set_has_min_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleRoomInfo::clear_has_min_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleRoomInfo::clear_min_level() {
  min_level_ = 0;
  clear_has_min_level();
  SetDirty();
}
inline ::google::protobuf::int32 BattleRoomInfo::min_level() const {
  return min_level_;
}
inline void BattleRoomInfo::set_min_level(::google::protobuf::int32 value) {
  SetDirty();
  set_has_min_level();
  min_level_ = value;
}

// required int32 max_level = 2;
inline bool BattleRoomInfo::has_max_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleRoomInfo::set_has_max_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleRoomInfo::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleRoomInfo::clear_max_level() {
  max_level_ = 0;
  clear_has_max_level();
  SetDirty();
}
inline ::google::protobuf::int32 BattleRoomInfo::max_level() const {
  return max_level_;
}
inline void BattleRoomInfo::set_max_level(::google::protobuf::int32 value) {
  SetDirty();
  set_has_max_level();
  max_level_ = value;
}

// required int32 max_count = 3;
inline bool BattleRoomInfo::has_max_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleRoomInfo::set_has_max_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleRoomInfo::clear_has_max_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleRoomInfo::clear_max_count() {
  max_count_ = 0;
  clear_has_max_count();
  SetDirty();
}
inline ::google::protobuf::int32 BattleRoomInfo::max_count() const {
  return max_count_;
}
inline void BattleRoomInfo::set_max_count(::google::protobuf::int32 value) {
  SetDirty();
  set_has_max_count();
  max_count_ = value;
}

// required int32 scene_id = 4;
inline bool BattleRoomInfo::has_scene_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleRoomInfo::set_has_scene_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleRoomInfo::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleRoomInfo::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
  SetDirty();
}
inline ::google::protobuf::int32 BattleRoomInfo::scene_id() const {
  return scene_id_;
}
inline void BattleRoomInfo::set_scene_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_scene_id();
  scene_id_ = value;
}

// required .Packet.BattleFieldState bf_state = 5;
inline bool BattleRoomInfo::has_bf_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BattleRoomInfo::set_has_bf_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BattleRoomInfo::clear_has_bf_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BattleRoomInfo::clear_bf_state() {
  bf_state_ = -1;
  clear_has_bf_state();
  SetDirty();
}
inline ::Packet::BattleFieldState BattleRoomInfo::bf_state() const {
  return static_cast< ::Packet::BattleFieldState >(bf_state_);
}
inline void BattleRoomInfo::set_bf_state(::Packet::BattleFieldState value) {
  assert(::Packet::BattleFieldState_IsValid(value));
  SetDirty();
  set_has_bf_state();
  bf_state_ = value;
}

// repeated .Packet.BattleFieldPlayerInfo players = 6;
inline int BattleRoomInfo::players_size() const {
  return players_.size();
}
inline void BattleRoomInfo::clear_players() {
  players_.Clear();
  SetDirty();
}
inline const ::Packet::BattleFieldPlayerInfo& BattleRoomInfo::players(int index) const {
  return players_.Get(index);
}
inline ::Packet::BattleFieldPlayerInfo* BattleRoomInfo::mutable_players(int index) {
  SetDirty();
  return players_.Mutable(index);
}
inline ::Packet::BattleFieldPlayerInfo* BattleRoomInfo::add_players() {
  SetDirty();
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::BattleFieldPlayerInfo >&
BattleRoomInfo::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::BattleFieldPlayerInfo >*
BattleRoomInfo::mutable_players() {
  SetDirty();
  return &players_;
}

// -------------------------------------------------------------------

// BattleFieldPlayerInfo

// required fixed64 guid = 1;
inline bool BattleFieldPlayerInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleFieldPlayerInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleFieldPlayerInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleFieldPlayerInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 BattleFieldPlayerInfo::guid() const {
  return guid_;
}
inline void BattleFieldPlayerInfo::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required int32 kill_num = 2;
inline bool BattleFieldPlayerInfo::has_kill_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleFieldPlayerInfo::set_has_kill_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleFieldPlayerInfo::clear_has_kill_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleFieldPlayerInfo::clear_kill_num() {
  kill_num_ = 0;
  clear_has_kill_num();
  SetDirty();
}
inline ::google::protobuf::int32 BattleFieldPlayerInfo::kill_num() const {
  return kill_num_;
}
inline void BattleFieldPlayerInfo::set_kill_num(::google::protobuf::int32 value) {
  SetDirty();
  set_has_kill_num();
  kill_num_ = value;
}

// required int32 dead_num = 3;
inline bool BattleFieldPlayerInfo::has_dead_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleFieldPlayerInfo::set_has_dead_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleFieldPlayerInfo::clear_has_dead_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleFieldPlayerInfo::clear_dead_num() {
  dead_num_ = 0;
  clear_has_dead_num();
  SetDirty();
}
inline ::google::protobuf::int32 BattleFieldPlayerInfo::dead_num() const {
  return dead_num_;
}
inline void BattleFieldPlayerInfo::set_dead_num(::google::protobuf::int32 value) {
  SetDirty();
  set_has_dead_num();
  dead_num_ = value;
}

// required int32 get_flag_num = 4;
inline bool BattleFieldPlayerInfo::has_get_flag_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleFieldPlayerInfo::set_has_get_flag_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleFieldPlayerInfo::clear_has_get_flag_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleFieldPlayerInfo::clear_get_flag_num() {
  get_flag_num_ = 0;
  clear_has_get_flag_num();
  SetDirty();
}
inline ::google::protobuf::int32 BattleFieldPlayerInfo::get_flag_num() const {
  return get_flag_num_;
}
inline void BattleFieldPlayerInfo::set_get_flag_num(::google::protobuf::int32 value) {
  SetDirty();
  set_has_get_flag_num();
  get_flag_num_ = value;
}

// required int32 return_flag_num = 5;
inline bool BattleFieldPlayerInfo::has_return_flag_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BattleFieldPlayerInfo::set_has_return_flag_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BattleFieldPlayerInfo::clear_has_return_flag_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BattleFieldPlayerInfo::clear_return_flag_num() {
  return_flag_num_ = 0;
  clear_has_return_flag_num();
  SetDirty();
}
inline ::google::protobuf::int32 BattleFieldPlayerInfo::return_flag_num() const {
  return return_flag_num_;
}
inline void BattleFieldPlayerInfo::set_return_flag_num(::google::protobuf::int32 value) {
  SetDirty();
  set_has_return_flag_num();
  return_flag_num_ = value;
}

// required int32 honor = 6;
inline bool BattleFieldPlayerInfo::has_honor() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BattleFieldPlayerInfo::set_has_honor() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BattleFieldPlayerInfo::clear_has_honor() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BattleFieldPlayerInfo::clear_honor() {
  honor_ = 0;
  clear_has_honor();
  SetDirty();
}
inline ::google::protobuf::int32 BattleFieldPlayerInfo::honor() const {
  return honor_;
}
inline void BattleFieldPlayerInfo::set_honor(::google::protobuf::int32 value) {
  SetDirty();
  set_has_honor();
  honor_ = value;
}

// required bool has_flag = 7;
inline bool BattleFieldPlayerInfo::has_has_flag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BattleFieldPlayerInfo::set_has_has_flag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BattleFieldPlayerInfo::clear_has_has_flag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BattleFieldPlayerInfo::clear_has_flag() {
  has_flag_ = false;
  clear_has_has_flag();
  SetDirty();
}
inline bool BattleFieldPlayerInfo::has_flag() const {
  return has_flag_;
}
inline void BattleFieldPlayerInfo::set_has_flag(bool value) {
  SetDirty();
  set_has_has_flag();
  has_flag_ = value;
}

// required .Packet.BattleFieldState bf_state = 8;
inline bool BattleFieldPlayerInfo::has_bf_state() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BattleFieldPlayerInfo::set_has_bf_state() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BattleFieldPlayerInfo::clear_has_bf_state() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BattleFieldPlayerInfo::clear_bf_state() {
  bf_state_ = -1;
  clear_has_bf_state();
  SetDirty();
}
inline ::Packet::BattleFieldState BattleFieldPlayerInfo::bf_state() const {
  return static_cast< ::Packet::BattleFieldState >(bf_state_);
}
inline void BattleFieldPlayerInfo::set_bf_state(::Packet::BattleFieldState value) {
  assert(::Packet::BattleFieldState_IsValid(value));
  SetDirty();
  set_has_bf_state();
  bf_state_ = value;
}

// required bool locked = 9;
inline bool BattleFieldPlayerInfo::has_locked() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BattleFieldPlayerInfo::set_has_locked() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BattleFieldPlayerInfo::clear_has_locked() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BattleFieldPlayerInfo::clear_locked() {
  locked_ = false;
  clear_has_locked();
  SetDirty();
}
inline bool BattleFieldPlayerInfo::locked() const {
  return locked_;
}
inline void BattleFieldPlayerInfo::set_locked(bool value) {
  SetDirty();
  set_has_locked();
  locked_ = value;
}

// required bool dead = 10;
inline bool BattleFieldPlayerInfo::has_dead() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BattleFieldPlayerInfo::set_has_dead() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BattleFieldPlayerInfo::clear_has_dead() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BattleFieldPlayerInfo::clear_dead() {
  dead_ = false;
  clear_has_dead();
  SetDirty();
}
inline bool BattleFieldPlayerInfo::dead() const {
  return dead_;
}
inline void BattleFieldPlayerInfo::set_dead(bool value) {
  SetDirty();
  set_has_dead();
  dead_ = value;
}

// required int32 old_camp = 11;
inline bool BattleFieldPlayerInfo::has_old_camp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BattleFieldPlayerInfo::set_has_old_camp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BattleFieldPlayerInfo::clear_has_old_camp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BattleFieldPlayerInfo::clear_old_camp() {
  old_camp_ = 0;
  clear_has_old_camp();
  SetDirty();
}
inline ::google::protobuf::int32 BattleFieldPlayerInfo::old_camp() const {
  return old_camp_;
}
inline void BattleFieldPlayerInfo::set_old_camp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_old_camp();
  old_camp_ = value;
}

// required string name = 12;
inline bool BattleFieldPlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BattleFieldPlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BattleFieldPlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BattleFieldPlayerInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
  SetDirty();
}
inline const ::std::string& BattleFieldPlayerInfo::name() const {
  return *name_;
}
inline void BattleFieldPlayerInfo::set_name(const ::std::string& value) {
  SetDirty();
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BattleFieldPlayerInfo::set_name(const char* value) {
  SetDirty();
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BattleFieldPlayerInfo::set_name(const char* value, size_t size) {
  SetDirty();
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BattleFieldPlayerInfo::mutable_name() {
  SetDirty();
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* BattleFieldPlayerInfo::release_name() {
  SetDirty();
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BattleFieldPlayerInfo::set_allocated_name(::std::string* name) {
  SetDirty();
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .Packet.Professions prof = 13;
inline bool BattleFieldPlayerInfo::has_prof() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BattleFieldPlayerInfo::set_has_prof() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BattleFieldPlayerInfo::clear_has_prof() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BattleFieldPlayerInfo::clear_prof() {
  prof_ = 0;
  clear_has_prof();
  SetDirty();
}
inline ::Packet::Professions BattleFieldPlayerInfo::prof() const {
  return static_cast< ::Packet::Professions >(prof_);
}
inline void BattleFieldPlayerInfo::set_prof(::Packet::Professions value) {
  assert(::Packet::Professions_IsValid(value));
  SetDirty();
  set_has_prof();
  prof_ = value;
}

// -------------------------------------------------------------------

// BattleFieldInfo

// repeated fixed64 attackers = 1;
inline int BattleFieldInfo::attackers_size() const {
  return attackers_.size();
}
inline void BattleFieldInfo::clear_attackers() {
  attackers_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 BattleFieldInfo::attackers(int index) const {
  return attackers_.Get(index);
}
inline void BattleFieldInfo::set_attackers(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  attackers_.Set(index, value);
}
inline void BattleFieldInfo::add_attackers(::google::protobuf::uint64 value) {
  SetDirty();
  attackers_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
BattleFieldInfo::attackers() const {
  return attackers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
BattleFieldInfo::mutable_attackers() {
  SetDirty();
  return &attackers_;
}

// repeated fixed64 defenders = 2;
inline int BattleFieldInfo::defenders_size() const {
  return defenders_.size();
}
inline void BattleFieldInfo::clear_defenders() {
  defenders_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 BattleFieldInfo::defenders(int index) const {
  return defenders_.Get(index);
}
inline void BattleFieldInfo::set_defenders(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  defenders_.Set(index, value);
}
inline void BattleFieldInfo::add_defenders(::google::protobuf::uint64 value) {
  SetDirty();
  defenders_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
BattleFieldInfo::defenders() const {
  return defenders_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
BattleFieldInfo::mutable_defenders() {
  SetDirty();
  return &defenders_;
}

// required bool attacker_flag = 3;
inline bool BattleFieldInfo::has_attacker_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleFieldInfo::set_has_attacker_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleFieldInfo::clear_has_attacker_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleFieldInfo::clear_attacker_flag() {
  attacker_flag_ = false;
  clear_has_attacker_flag();
  SetDirty();
}
inline bool BattleFieldInfo::attacker_flag() const {
  return attacker_flag_;
}
inline void BattleFieldInfo::set_attacker_flag(bool value) {
  SetDirty();
  set_has_attacker_flag();
  attacker_flag_ = value;
}

// required bool defender_flag = 4;
inline bool BattleFieldInfo::has_defender_flag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleFieldInfo::set_has_defender_flag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleFieldInfo::clear_has_defender_flag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleFieldInfo::clear_defender_flag() {
  defender_flag_ = false;
  clear_has_defender_flag();
  SetDirty();
}
inline bool BattleFieldInfo::defender_flag() const {
  return defender_flag_;
}
inline void BattleFieldInfo::set_defender_flag(bool value) {
  SetDirty();
  set_has_defender_flag();
  defender_flag_ = value;
}

// required int32 attacker_flag_count = 5;
inline bool BattleFieldInfo::has_attacker_flag_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BattleFieldInfo::set_has_attacker_flag_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BattleFieldInfo::clear_has_attacker_flag_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BattleFieldInfo::clear_attacker_flag_count() {
  attacker_flag_count_ = 0;
  clear_has_attacker_flag_count();
  SetDirty();
}
inline ::google::protobuf::int32 BattleFieldInfo::attacker_flag_count() const {
  return attacker_flag_count_;
}
inline void BattleFieldInfo::set_attacker_flag_count(::google::protobuf::int32 value) {
  SetDirty();
  set_has_attacker_flag_count();
  attacker_flag_count_ = value;
}

// required int32 defender_flag_count = 6;
inline bool BattleFieldInfo::has_defender_flag_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BattleFieldInfo::set_has_defender_flag_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BattleFieldInfo::clear_has_defender_flag_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BattleFieldInfo::clear_defender_flag_count() {
  defender_flag_count_ = 0;
  clear_has_defender_flag_count();
  SetDirty();
}
inline ::google::protobuf::int32 BattleFieldInfo::defender_flag_count() const {
  return defender_flag_count_;
}
inline void BattleFieldInfo::set_defender_flag_count(::google::protobuf::int32 value) {
  SetDirty();
  set_has_defender_flag_count();
  defender_flag_count_ = value;
}

// required int32 attacker_point = 7;
inline bool BattleFieldInfo::has_attacker_point() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BattleFieldInfo::set_has_attacker_point() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BattleFieldInfo::clear_has_attacker_point() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BattleFieldInfo::clear_attacker_point() {
  attacker_point_ = 0;
  clear_has_attacker_point();
  SetDirty();
}
inline ::google::protobuf::int32 BattleFieldInfo::attacker_point() const {
  return attacker_point_;
}
inline void BattleFieldInfo::set_attacker_point(::google::protobuf::int32 value) {
  SetDirty();
  set_has_attacker_point();
  attacker_point_ = value;
}

// required int32 defender_point = 8;
inline bool BattleFieldInfo::has_defender_point() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BattleFieldInfo::set_has_defender_point() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BattleFieldInfo::clear_has_defender_point() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BattleFieldInfo::clear_defender_point() {
  defender_point_ = 0;
  clear_has_defender_point();
  SetDirty();
}
inline ::google::protobuf::int32 BattleFieldInfo::defender_point() const {
  return defender_point_;
}
inline void BattleFieldInfo::set_defender_point(::google::protobuf::int32 value) {
  SetDirty();
  set_has_defender_point();
  defender_point_ = value;
}

// -------------------------------------------------------------------

// JoinBattleRoom

// required int32 scene_id = 1;
inline bool JoinBattleRoom::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinBattleRoom::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinBattleRoom::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinBattleRoom::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
  SetDirty();
}
inline ::google::protobuf::int32 JoinBattleRoom::scene_id() const {
  return scene_id_;
}
inline void JoinBattleRoom::set_scene_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_scene_id();
  scene_id_ = value;
}

// required int32 npc_index = 2;
inline bool JoinBattleRoom::has_npc_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinBattleRoom::set_has_npc_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinBattleRoom::clear_has_npc_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinBattleRoom::clear_npc_index() {
  npc_index_ = 0;
  clear_has_npc_index();
  SetDirty();
}
inline ::google::protobuf::int32 JoinBattleRoom::npc_index() const {
  return npc_index_;
}
inline void JoinBattleRoom::set_npc_index(::google::protobuf::int32 value) {
  SetDirty();
  set_has_npc_index();
  npc_index_ = value;
}

// required int32 script_id = 3;
inline bool JoinBattleRoom::has_script_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinBattleRoom::set_has_script_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinBattleRoom::clear_has_script_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinBattleRoom::clear_script_id() {
  script_id_ = 0;
  clear_has_script_id();
  SetDirty();
}
inline ::google::protobuf::int32 JoinBattleRoom::script_id() const {
  return script_id_;
}
inline void JoinBattleRoom::set_script_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_script_id();
  script_id_ = value;
}

// -------------------------------------------------------------------

// LeaveBattleRoom

// -------------------------------------------------------------------

// LeaveBattleField

// -------------------------------------------------------------------

// AgreeEnterBattleField

// -------------------------------------------------------------------

// DisAgreeEnterBattleField

// -------------------------------------------------------------------

// EnterRoomNotify

// required int32 time = 1;
inline bool EnterRoomNotify::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterRoomNotify::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterRoomNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterRoomNotify::clear_time() {
  time_ = 0;
  clear_has_time();
  SetDirty();
}
inline ::google::protobuf::int32 EnterRoomNotify::time() const {
  return time_;
}
inline void EnterRoomNotify::set_time(::google::protobuf::int32 value) {
  SetDirty();
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// EnterBattleFieldNotify

// required int32 time = 1;
inline bool EnterBattleFieldNotify::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterBattleFieldNotify::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterBattleFieldNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterBattleFieldNotify::clear_time() {
  time_ = 0;
  clear_has_time();
  SetDirty();
}
inline ::google::protobuf::int32 EnterBattleFieldNotify::time() const {
  return time_;
}
inline void EnterBattleFieldNotify::set_time(::google::protobuf::int32 value) {
  SetDirty();
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// BeginBattleFieldNotify

// required int32 time = 1;
inline bool BeginBattleFieldNotify::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeginBattleFieldNotify::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeginBattleFieldNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeginBattleFieldNotify::clear_time() {
  time_ = 0;
  clear_has_time();
  SetDirty();
}
inline ::google::protobuf::int32 BeginBattleFieldNotify::time() const {
  return time_;
}
inline void BeginBattleFieldNotify::set_time(::google::protobuf::int32 value) {
  SetDirty();
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// BeginBattleField

// -------------------------------------------------------------------

// BattleFieldFightTarget

// required fixed64 target_guid = 1;
inline bool BattleFieldFightTarget::has_target_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleFieldFightTarget::set_has_target_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleFieldFightTarget::clear_has_target_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleFieldFightTarget::clear_target_guid() {
  target_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 BattleFieldFightTarget::target_guid() const {
  return target_guid_;
}
inline void BattleFieldFightTarget::set_target_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_target_guid();
  target_guid_ = value;
}

// required int32 battle_group_id = 2;
inline bool BattleFieldFightTarget::has_battle_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleFieldFightTarget::set_has_battle_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleFieldFightTarget::clear_has_battle_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleFieldFightTarget::clear_battle_group_id() {
  battle_group_id_ = 0;
  clear_has_battle_group_id();
  SetDirty();
}
inline ::google::protobuf::int32 BattleFieldFightTarget::battle_group_id() const {
  return battle_group_id_;
}
inline void BattleFieldFightTarget::set_battle_group_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_battle_group_id();
  battle_group_id_ = value;
}

// -------------------------------------------------------------------

// FlagOprate

// required .Packet.FlagOption option = 1;
inline bool FlagOprate::has_option() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FlagOprate::set_has_option() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FlagOprate::clear_has_option() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FlagOprate::clear_option() {
  option_ = 0;
  clear_has_option();
  SetDirty();
}
inline ::Packet::FlagOption FlagOprate::option() const {
  return static_cast< ::Packet::FlagOption >(option_);
}
inline void FlagOprate::set_option(::Packet::FlagOption value) {
  assert(::Packet::FlagOption_IsValid(value));
  SetDirty();
  set_has_option();
  option_ = value;
}

// required fixed64 guid = 2;
inline bool FlagOprate::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FlagOprate::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FlagOprate::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FlagOprate::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 FlagOprate::guid() const {
  return guid_;
}
inline void FlagOprate::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// -------------------------------------------------------------------

// BfResult

// required int32 winner = 1;
inline bool BfResult::has_winner() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BfResult::set_has_winner() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BfResult::clear_has_winner() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BfResult::clear_winner() {
  winner_ = 0;
  clear_has_winner();
  SetDirty();
}
inline ::google::protobuf::int32 BfResult::winner() const {
  return winner_;
}
inline void BfResult::set_winner(::google::protobuf::int32 value) {
  SetDirty();
  set_has_winner();
  winner_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Packet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BattleField_2eproto__INCLUDED

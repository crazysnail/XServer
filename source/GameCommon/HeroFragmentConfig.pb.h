// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HeroFragmentConfig.proto

#ifndef PROTOBUF_HeroFragmentConfig_2eproto__INCLUDED
#define PROTOBUF_HeroFragmentConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "AllPacketEnum.pb.h"
#include "ActorBasicInfo.pb.h"
// @@protoc_insertion_point(includes)

namespace Config {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_HeroFragmentConfig_2eproto();
void protobuf_AssignDesc_HeroFragmentConfig_2eproto();
void protobuf_ShutdownFile_HeroFragmentConfig_2eproto();

class FragmentConfig;

// ===================================================================

class FragmentConfig : public ::google::protobuf::Message {
 public:
  FragmentConfig();
  virtual ~FragmentConfig();

  FragmentConfig(const FragmentConfig& from);

  inline FragmentConfig& operator=(const FragmentConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FragmentConfig& default_instance();

  void Swap(FragmentConfig* other);

  // implements Message ----------------------------------------------

  FragmentConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FragmentConfig& from);
  void MergeFrom(const FragmentConfig& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 fragment_id = 1;
  inline bool has_fragment_id() const;
  inline void clear_fragment_id();
  static const int kFragmentIdFieldNumber = 1;
  inline ::google::protobuf::int32 fragment_id() const;
  inline void set_fragment_id(::google::protobuf::int32 value);

  // required int32 fragment_amount = 2;
  inline bool has_fragment_amount() const;
  inline void clear_fragment_amount();
  static const int kFragmentAmountFieldNumber = 2;
  inline ::google::protobuf::int32 fragment_amount() const;
  inline void set_fragment_amount(::google::protobuf::int32 value);

  // required int32 hero_id = 3;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  inline ::google::protobuf::int32 hero_id() const;
  inline void set_hero_id(::google::protobuf::int32 value);

  // required .Packet.ActorStar star = 4;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 4;
  inline ::Packet::ActorStar star() const;
  inline void set_star(::Packet::ActorStar value);

  // required .Packet.ActorColor color = 5;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 5;
  inline ::Packet::ActorColor color() const;
  inline void set_color(::Packet::ActorColor value);

  // required int32 smelt_amount = 6;
  inline bool has_smelt_amount() const;
  inline void clear_smelt_amount();
  static const int kSmeltAmountFieldNumber = 6;
  inline ::google::protobuf::int32 smelt_amount() const;
  inline void set_smelt_amount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Config.FragmentConfig)
 private:
  inline void set_has_fragment_id();
  inline void clear_has_fragment_id();
  inline void set_has_fragment_amount();
  inline void clear_has_fragment_amount();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_smelt_amount();
  inline void clear_has_smelt_amount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 fragment_id_;
  ::google::protobuf::int32 fragment_amount_;
  ::google::protobuf::int32 hero_id_;
  int star_;
  int color_;
  ::google::protobuf::int32 smelt_amount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_HeroFragmentConfig_2eproto();
  friend void protobuf_AssignDesc_HeroFragmentConfig_2eproto();
  friend void protobuf_ShutdownFile_HeroFragmentConfig_2eproto();

  void InitAsDefaultInstance();
  static FragmentConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// FragmentConfig

// required int32 fragment_id = 1;
inline bool FragmentConfig::has_fragment_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FragmentConfig::set_has_fragment_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FragmentConfig::clear_has_fragment_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FragmentConfig::clear_fragment_id() {
  fragment_id_ = 0;
  clear_has_fragment_id();
  SetDirty();
}
inline ::google::protobuf::int32 FragmentConfig::fragment_id() const {
  return fragment_id_;
}
inline void FragmentConfig::set_fragment_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_fragment_id();
  fragment_id_ = value;
}

// required int32 fragment_amount = 2;
inline bool FragmentConfig::has_fragment_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FragmentConfig::set_has_fragment_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FragmentConfig::clear_has_fragment_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FragmentConfig::clear_fragment_amount() {
  fragment_amount_ = 0;
  clear_has_fragment_amount();
  SetDirty();
}
inline ::google::protobuf::int32 FragmentConfig::fragment_amount() const {
  return fragment_amount_;
}
inline void FragmentConfig::set_fragment_amount(::google::protobuf::int32 value) {
  SetDirty();
  set_has_fragment_amount();
  fragment_amount_ = value;
}

// required int32 hero_id = 3;
inline bool FragmentConfig::has_hero_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FragmentConfig::set_has_hero_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FragmentConfig::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FragmentConfig::clear_hero_id() {
  hero_id_ = 0;
  clear_has_hero_id();
  SetDirty();
}
inline ::google::protobuf::int32 FragmentConfig::hero_id() const {
  return hero_id_;
}
inline void FragmentConfig::set_hero_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_hero_id();
  hero_id_ = value;
}

// required .Packet.ActorStar star = 4;
inline bool FragmentConfig::has_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FragmentConfig::set_has_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FragmentConfig::clear_has_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FragmentConfig::clear_star() {
  star_ = 1;
  clear_has_star();
  SetDirty();
}
inline ::Packet::ActorStar FragmentConfig::star() const {
  return static_cast< ::Packet::ActorStar >(star_);
}
inline void FragmentConfig::set_star(::Packet::ActorStar value) {
  assert(::Packet::ActorStar_IsValid(value));
  SetDirty();
  set_has_star();
  star_ = value;
}

// required .Packet.ActorColor color = 5;
inline bool FragmentConfig::has_color() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FragmentConfig::set_has_color() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FragmentConfig::clear_has_color() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FragmentConfig::clear_color() {
  color_ = 1;
  clear_has_color();
  SetDirty();
}
inline ::Packet::ActorColor FragmentConfig::color() const {
  return static_cast< ::Packet::ActorColor >(color_);
}
inline void FragmentConfig::set_color(::Packet::ActorColor value) {
  assert(::Packet::ActorColor_IsValid(value));
  SetDirty();
  set_has_color();
  color_ = value;
}

// required int32 smelt_amount = 6;
inline bool FragmentConfig::has_smelt_amount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FragmentConfig::set_has_smelt_amount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FragmentConfig::clear_has_smelt_amount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FragmentConfig::clear_smelt_amount() {
  smelt_amount_ = 0;
  clear_has_smelt_amount();
  SetDirty();
}
inline ::google::protobuf::int32 FragmentConfig::smelt_amount() const {
  return smelt_amount_;
}
inline void FragmentConfig::set_smelt_amount(::google::protobuf::int32 value) {
  SetDirty();
  set_has_smelt_amount();
  smelt_amount_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_HeroFragmentConfig_2eproto__INCLUDED

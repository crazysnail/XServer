// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActivityPacket.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ActivityPacket.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Packet {

namespace {

const ::google::protobuf::Descriptor* Activity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Activity_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActivityUpdateReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActivityUpdateReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActivityListReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActivityListReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* LuaReplyPacketList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LuaReplyPacketList_reflection_ = NULL;
const ::google::protobuf::Descriptor* LuaReplyPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LuaReplyPacket_reflection_ = NULL;
const ::google::protobuf::Descriptor* LuaRequestPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LuaRequestPacket_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ActivityPacket_2eproto() {
  protobuf_AddDesc_ActivityPacket_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ActivityPacket.proto");
  GOOGLE_CHECK(file != NULL);
  Activity_descriptor_ = file->message_type(0);
  static const int Activity_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity, config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity, times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity, is_active_),
  };
  Activity_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Activity_descriptor_,
      Activity::default_instance_,
      Activity_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Activity));
  ActivityUpdateReply_descriptor_ = file->message_type(1);
  static const int ActivityUpdateReply_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityUpdateReply, activity_),
  };
  ActivityUpdateReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActivityUpdateReply_descriptor_,
      ActivityUpdateReply::default_instance_,
      ActivityUpdateReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityUpdateReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityUpdateReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActivityUpdateReply));
  ActivityListReply_descriptor_ = file->message_type(2);
  static const int ActivityListReply_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityListReply, activity_list_),
  };
  ActivityListReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActivityListReply_descriptor_,
      ActivityListReply::default_instance_,
      ActivityListReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityListReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityListReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActivityListReply));
  LuaReplyPacketList_descriptor_ = file->message_type(3);
  static const int LuaReplyPacketList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LuaReplyPacketList, rewards_),
  };
  LuaReplyPacketList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LuaReplyPacketList_descriptor_,
      LuaReplyPacketList::default_instance_,
      LuaReplyPacketList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LuaReplyPacketList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LuaReplyPacketList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LuaReplyPacketList));
  LuaReplyPacket_descriptor_ = file->message_type(4);
  static const int LuaReplyPacket_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LuaReplyPacket, reply_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LuaReplyPacket, int32_params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LuaReplyPacket, int64_params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LuaReplyPacket, string_params_),
  };
  LuaReplyPacket_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LuaReplyPacket_descriptor_,
      LuaReplyPacket::default_instance_,
      LuaReplyPacket_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LuaReplyPacket, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LuaReplyPacket, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LuaReplyPacket));
  LuaRequestPacket_descriptor_ = file->message_type(5);
  static const int LuaRequestPacket_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LuaRequestPacket, request_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LuaRequestPacket, int32_params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LuaRequestPacket, int64_params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LuaRequestPacket, string_params_),
  };
  LuaRequestPacket_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LuaRequestPacket_descriptor_,
      LuaRequestPacket::default_instance_,
      LuaRequestPacket_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LuaRequestPacket, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LuaRequestPacket, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LuaRequestPacket));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ActivityPacket_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Activity_descriptor_, &Activity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActivityUpdateReply_descriptor_, &ActivityUpdateReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActivityListReply_descriptor_, &ActivityListReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LuaReplyPacketList_descriptor_, &LuaReplyPacketList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LuaReplyPacket_descriptor_, &LuaReplyPacket::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LuaRequestPacket_descriptor_, &LuaRequestPacket::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ActivityPacket_2eproto() {
  delete Activity::default_instance_;
  delete Activity_reflection_;
  delete ActivityUpdateReply::default_instance_;
  delete ActivityUpdateReply_reflection_;
  delete ActivityListReply::default_instance_;
  delete ActivityListReply_reflection_;
  delete LuaReplyPacketList::default_instance_;
  delete LuaReplyPacketList_reflection_;
  delete LuaReplyPacket::default_instance_;
  delete LuaReplyPacket_reflection_;
  delete LuaRequestPacket::default_instance_;
  delete LuaRequestPacket_reflection_;
}

void protobuf_AddDesc_ActivityPacket_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Packet::protobuf_AddDesc_ProtoBufOption_2eproto();
  ::Config::protobuf_AddDesc_ActivityConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ActivityPacket.proto\022\006Packet\032\024ProtoBuf"
    "Option.proto\032\024ActivityConfig.proto\"T\n\010Ac"
    "tivity\022&\n\006config\030\001 \002(\0132\026.Config.Activity"
    "Config\022\r\n\005times\030\002 \002(\005\022\021\n\tis_active\030\003 \002(\005"
    "\"9\n\023ActivityUpdateReply\022\"\n\010activity\030\001 \002("
    "\0132\020.Packet.Activity\"<\n\021ActivityListReply"
    "\022\'\n\ractivity_list\030\001 \003(\0132\020.Packet.Activit"
    "y\"=\n\022LuaReplyPacketList\022\'\n\007rewards\030\001 \003(\013"
    "2\026.Packet.LuaReplyPacket\"g\n\016LuaReplyPack"
    "et\022\022\n\nreply_name\030\001 \002(\t\022\024\n\014int32_params\030\002"
    " \003(\005\022\024\n\014int64_params\030\003 \003(\006\022\025\n\rstring_par"
    "ams\030\004 \003(\t\"k\n\020LuaRequestPacket\022\024\n\014request"
    "_name\030\001 \002(\t\022\024\n\014int32_params\030\002 \003(\005\022\024\n\014int"
    "64_params\030\003 \003(\006\022\025\n\rstring_params\030\004 \003(\t", 558);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ActivityPacket.proto", &protobuf_RegisterTypes);
  Activity::default_instance_ = new Activity();
  ActivityUpdateReply::default_instance_ = new ActivityUpdateReply();
  ActivityListReply::default_instance_ = new ActivityListReply();
  LuaReplyPacketList::default_instance_ = new LuaReplyPacketList();
  LuaReplyPacket::default_instance_ = new LuaReplyPacket();
  LuaRequestPacket::default_instance_ = new LuaRequestPacket();
  Activity::default_instance_->InitAsDefaultInstance();
  ActivityUpdateReply::default_instance_->InitAsDefaultInstance();
  ActivityListReply::default_instance_->InitAsDefaultInstance();
  LuaReplyPacketList::default_instance_->InitAsDefaultInstance();
  LuaReplyPacket::default_instance_->InitAsDefaultInstance();
  LuaRequestPacket::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ActivityPacket_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ActivityPacket_2eproto {
  StaticDescriptorInitializer_ActivityPacket_2eproto() {
    protobuf_AddDesc_ActivityPacket_2eproto();
  }
} static_descriptor_initializer_ActivityPacket_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Activity::kConfigFieldNumber;
const int Activity::kTimesFieldNumber;
const int Activity::kIsActiveFieldNumber;
#endif  // !_MSC_VER

Activity::Activity()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Activity::InitAsDefaultInstance() {
  config_ = const_cast< ::Config::ActivityConfig*>(&::Config::ActivityConfig::default_instance());
}

Activity::Activity(const Activity& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Activity::SharedCtor() {
  _cached_size_ = 0;
  config_ = NULL;
  times_ = 0;
  is_active_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Activity::~Activity() {
  SharedDtor();
}

void Activity::SharedDtor() {
  if (this != default_instance_) {
    delete config_;
  }
}

void Activity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Activity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Activity_descriptor_;
}

const Activity& Activity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ActivityPacket_2eproto();
  return *default_instance_;
}

Activity* Activity::default_instance_ = NULL;

Activity* Activity::New() const {
  return new Activity;
}

void Activity::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_config()) {
      if (config_ != NULL) config_->::Config::ActivityConfig::Clear();
    }
    times_ = 0;
    is_active_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
  SetDirty();
}

bool Activity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Config.ActivityConfig config = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_config()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_times;
        break;
      }

      // required int32 times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &times_)));
          set_has_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_active;
        break;
      }

      // required int32 is_active = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_active:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_active_)));
          set_has_is_active();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  SetDirty();
  return true;
#undef DO_
}

void Activity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .Config.ActivityConfig config = 1;
  if (has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->config(), output);
  }

  // required int32 times = 2;
  if (has_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->times(), output);
  }

  // required int32 is_active = 3;
  if (has_is_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_active(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Activity::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Config.ActivityConfig config = 1;
  if (has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->config(), target);
  }

  // required int32 times = 2;
  if (has_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->times(), target);
  }

  // required int32 is_active = 3;
  if (has_is_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_active(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Activity::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Config.ActivityConfig config = 1;
    if (has_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->config());
    }

    // required int32 times = 2;
    if (has_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->times());
    }

    // required int32 is_active = 3;
    if (has_is_active()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_active());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Activity::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Activity* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Activity*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
  SetDirty();
}

void Activity::MergeFrom(const Activity& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_config()) {
      mutable_config()->::Config::ActivityConfig::MergeFrom(from.config());
    }
    if (from.has_times()) {
      set_times(from.times());
    }
    if (from.has_is_active()) {
      set_is_active(from.is_active());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  SetDirty();
}

void Activity::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

void Activity::CopyFrom(const Activity& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

bool Activity::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_config()) {
    if (!this->config().IsInitialized()) return false;
  }
  return true;
}

void Activity::SetInitialized() {
  _has_bits_[0] |= 0x00000007;

  if (has_config()) {
    this->mutable_config()->SetInitialized();
  }
  return;
}

void Activity::Swap(Activity* other) {
  if (other != this) {
    std::swap(config_, other->config_);
    std::swap(times_, other->times_);
    std::swap(is_active_, other->is_active_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    SetDirty(), other->SetDirty();
  }
}

::google::protobuf::Metadata Activity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Activity_descriptor_;
  metadata.reflection = Activity_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActivityUpdateReply::kActivityFieldNumber;
#endif  // !_MSC_VER

ActivityUpdateReply::ActivityUpdateReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ActivityUpdateReply::InitAsDefaultInstance() {
  activity_ = const_cast< ::Packet::Activity*>(&::Packet::Activity::default_instance());
}

ActivityUpdateReply::ActivityUpdateReply(const ActivityUpdateReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ActivityUpdateReply::SharedCtor() {
  _cached_size_ = 0;
  activity_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActivityUpdateReply::~ActivityUpdateReply() {
  SharedDtor();
}

void ActivityUpdateReply::SharedDtor() {
  if (this != default_instance_) {
    delete activity_;
  }
}

void ActivityUpdateReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityUpdateReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActivityUpdateReply_descriptor_;
}

const ActivityUpdateReply& ActivityUpdateReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ActivityPacket_2eproto();
  return *default_instance_;
}

ActivityUpdateReply* ActivityUpdateReply::default_instance_ = NULL;

ActivityUpdateReply* ActivityUpdateReply::New() const {
  return new ActivityUpdateReply;
}

void ActivityUpdateReply::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_activity()) {
      if (activity_ != NULL) activity_->::Packet::Activity::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
  SetDirty();
}

bool ActivityUpdateReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Packet.Activity activity = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activity()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  SetDirty();
  return true;
#undef DO_
}

void ActivityUpdateReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .Packet.Activity activity = 1;
  if (has_activity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->activity(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ActivityUpdateReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .Packet.Activity activity = 1;
  if (has_activity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->activity(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ActivityUpdateReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Packet.Activity activity = 1;
    if (has_activity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->activity());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityUpdateReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActivityUpdateReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActivityUpdateReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
  SetDirty();
}

void ActivityUpdateReply::MergeFrom(const ActivityUpdateReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity()) {
      mutable_activity()->::Packet::Activity::MergeFrom(from.activity());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  SetDirty();
}

void ActivityUpdateReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

void ActivityUpdateReply::CopyFrom(const ActivityUpdateReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

bool ActivityUpdateReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_activity()) {
    if (!this->activity().IsInitialized()) return false;
  }
  return true;
}

void ActivityUpdateReply::SetInitialized() {
  _has_bits_[0] |= 0x00000001;

  if (has_activity()) {
    this->mutable_activity()->SetInitialized();
  }
  return;
}

void ActivityUpdateReply::Swap(ActivityUpdateReply* other) {
  if (other != this) {
    std::swap(activity_, other->activity_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    SetDirty(), other->SetDirty();
  }
}

::google::protobuf::Metadata ActivityUpdateReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActivityUpdateReply_descriptor_;
  metadata.reflection = ActivityUpdateReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActivityListReply::kActivityListFieldNumber;
#endif  // !_MSC_VER

ActivityListReply::ActivityListReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ActivityListReply::InitAsDefaultInstance() {
}

ActivityListReply::ActivityListReply(const ActivityListReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ActivityListReply::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActivityListReply::~ActivityListReply() {
  SharedDtor();
}

void ActivityListReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActivityListReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityListReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActivityListReply_descriptor_;
}

const ActivityListReply& ActivityListReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ActivityPacket_2eproto();
  return *default_instance_;
}

ActivityListReply* ActivityListReply::default_instance_ = NULL;

ActivityListReply* ActivityListReply::New() const {
  return new ActivityListReply;
}

void ActivityListReply::Clear() {
  activity_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
  SetDirty();
}

bool ActivityListReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Packet.Activity activity_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_activity_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activity_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_activity_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  SetDirty();
  return true;
#undef DO_
}

void ActivityListReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .Packet.Activity activity_list = 1;
  for (int i = 0; i < this->activity_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->activity_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ActivityListReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Packet.Activity activity_list = 1;
  for (int i = 0; i < this->activity_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->activity_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ActivityListReply::ByteSize() const {
  int total_size = 0;

  // repeated .Packet.Activity activity_list = 1;
  total_size += 1 * this->activity_list_size();
  for (int i = 0; i < this->activity_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->activity_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityListReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActivityListReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActivityListReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
  SetDirty();
}

void ActivityListReply::MergeFrom(const ActivityListReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  activity_list_.MergeFrom(from.activity_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  SetDirty();
}

void ActivityListReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

void ActivityListReply::CopyFrom(const ActivityListReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

bool ActivityListReply::IsInitialized() const {

  for (int i = 0; i < activity_list_size(); i++) {
    if (!this->activity_list(i).IsInitialized()) return false;
  }
  return true;
}

void ActivityListReply::SetInitialized() {

  for (int i = 0; i < activity_list_size(); i++) {
    this->mutable_activity_list(i)->SetInitialized();
  }
  return;
}

void ActivityListReply::Swap(ActivityListReply* other) {
  if (other != this) {
    activity_list_.Swap(&other->activity_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    SetDirty(), other->SetDirty();
  }
}

::google::protobuf::Metadata ActivityListReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActivityListReply_descriptor_;
  metadata.reflection = ActivityListReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LuaReplyPacketList::kRewardsFieldNumber;
#endif  // !_MSC_VER

LuaReplyPacketList::LuaReplyPacketList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LuaReplyPacketList::InitAsDefaultInstance() {
}

LuaReplyPacketList::LuaReplyPacketList(const LuaReplyPacketList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LuaReplyPacketList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LuaReplyPacketList::~LuaReplyPacketList() {
  SharedDtor();
}

void LuaReplyPacketList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LuaReplyPacketList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LuaReplyPacketList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LuaReplyPacketList_descriptor_;
}

const LuaReplyPacketList& LuaReplyPacketList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ActivityPacket_2eproto();
  return *default_instance_;
}

LuaReplyPacketList* LuaReplyPacketList::default_instance_ = NULL;

LuaReplyPacketList* LuaReplyPacketList::New() const {
  return new LuaReplyPacketList;
}

void LuaReplyPacketList::Clear() {
  rewards_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
  SetDirty();
}

bool LuaReplyPacketList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Packet.LuaReplyPacket rewards = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rewards:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewards()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rewards;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  SetDirty();
  return true;
#undef DO_
}

void LuaReplyPacketList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .Packet.LuaReplyPacket rewards = 1;
  for (int i = 0; i < this->rewards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewards(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LuaReplyPacketList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Packet.LuaReplyPacket rewards = 1;
  for (int i = 0; i < this->rewards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewards(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LuaReplyPacketList::ByteSize() const {
  int total_size = 0;

  // repeated .Packet.LuaReplyPacket rewards = 1;
  total_size += 1 * this->rewards_size();
  for (int i = 0; i < this->rewards_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewards(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LuaReplyPacketList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LuaReplyPacketList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LuaReplyPacketList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
  SetDirty();
}

void LuaReplyPacketList::MergeFrom(const LuaReplyPacketList& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewards_.MergeFrom(from.rewards_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  SetDirty();
}

void LuaReplyPacketList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

void LuaReplyPacketList::CopyFrom(const LuaReplyPacketList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

bool LuaReplyPacketList::IsInitialized() const {

  for (int i = 0; i < rewards_size(); i++) {
    if (!this->rewards(i).IsInitialized()) return false;
  }
  return true;
}

void LuaReplyPacketList::SetInitialized() {

  for (int i = 0; i < rewards_size(); i++) {
    this->mutable_rewards(i)->SetInitialized();
  }
  return;
}

void LuaReplyPacketList::Swap(LuaReplyPacketList* other) {
  if (other != this) {
    rewards_.Swap(&other->rewards_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    SetDirty(), other->SetDirty();
  }
}

::google::protobuf::Metadata LuaReplyPacketList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LuaReplyPacketList_descriptor_;
  metadata.reflection = LuaReplyPacketList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LuaReplyPacket::kReplyNameFieldNumber;
const int LuaReplyPacket::kInt32ParamsFieldNumber;
const int LuaReplyPacket::kInt64ParamsFieldNumber;
const int LuaReplyPacket::kStringParamsFieldNumber;
#endif  // !_MSC_VER

LuaReplyPacket::LuaReplyPacket()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LuaReplyPacket::InitAsDefaultInstance() {
}

LuaReplyPacket::LuaReplyPacket(const LuaReplyPacket& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LuaReplyPacket::SharedCtor() {
  _cached_size_ = 0;
  reply_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LuaReplyPacket::~LuaReplyPacket() {
  SharedDtor();
}

void LuaReplyPacket::SharedDtor() {
  if (reply_name_ != &::google::protobuf::internal::kEmptyString) {
    delete reply_name_;
  }
  if (this != default_instance_) {
  }
}

void LuaReplyPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LuaReplyPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LuaReplyPacket_descriptor_;
}

const LuaReplyPacket& LuaReplyPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ActivityPacket_2eproto();
  return *default_instance_;
}

LuaReplyPacket* LuaReplyPacket::default_instance_ = NULL;

LuaReplyPacket* LuaReplyPacket::New() const {
  return new LuaReplyPacket;
}

void LuaReplyPacket::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_reply_name()) {
      if (reply_name_ != &::google::protobuf::internal::kEmptyString) {
        reply_name_->clear();
      }
    }
  }
  int32_params_.Clear();
  int64_params_.Clear();
  string_params_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
  SetDirty();
}

bool LuaReplyPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string reply_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reply_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->reply_name().data(), this->reply_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_int32_params;
        break;
      }

      // repeated int32 int32_params = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_int32_params:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_int32_params())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_int32_params())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_int32_params;
        if (input->ExpectTag(25)) goto parse_int64_params;
        break;
      }

      // repeated fixed64 int64_params = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_int64_params:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 25, input, this->mutable_int64_params())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_int64_params())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(25)) goto parse_int64_params;
        if (input->ExpectTag(34)) goto parse_string_params;
        break;
      }

      // repeated string string_params = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_string_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_string_params()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->string_params(this->string_params_size() - 1).data(),
            this->string_params(this->string_params_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_string_params;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  SetDirty();
  return true;
#undef DO_
}

void LuaReplyPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string reply_name = 1;
  if (has_reply_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reply_name().data(), this->reply_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->reply_name(), output);
  }

  // repeated int32 int32_params = 2;
  for (int i = 0; i < this->int32_params_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->int32_params(i), output);
  }

  // repeated fixed64 int64_params = 3;
  for (int i = 0; i < this->int64_params_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      3, this->int64_params(i), output);
  }

  // repeated string string_params = 4;
  for (int i = 0; i < this->string_params_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->string_params(i).data(), this->string_params(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->string_params(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LuaReplyPacket::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string reply_name = 1;
  if (has_reply_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reply_name().data(), this->reply_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->reply_name(), target);
  }

  // repeated int32 int32_params = 2;
  for (int i = 0; i < this->int32_params_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->int32_params(i), target);
  }

  // repeated fixed64 int64_params = 3;
  for (int i = 0; i < this->int64_params_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(3, this->int64_params(i), target);
  }

  // repeated string string_params = 4;
  for (int i = 0; i < this->string_params_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->string_params(i).data(), this->string_params(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->string_params(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LuaReplyPacket::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string reply_name = 1;
    if (has_reply_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reply_name());
    }

  }
  // repeated int32 int32_params = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->int32_params_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->int32_params(i));
    }
    total_size += 1 * this->int32_params_size() + data_size;
  }

  // repeated fixed64 int64_params = 3;
  {
    int data_size = 0;
    data_size = 8 * this->int64_params_size();
    total_size += 1 * this->int64_params_size() + data_size;
  }

  // repeated string string_params = 4;
  total_size += 1 * this->string_params_size();
  for (int i = 0; i < this->string_params_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->string_params(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LuaReplyPacket::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LuaReplyPacket* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LuaReplyPacket*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
  SetDirty();
}

void LuaReplyPacket::MergeFrom(const LuaReplyPacket& from) {
  GOOGLE_CHECK_NE(&from, this);
  int32_params_.MergeFrom(from.int32_params_);
  int64_params_.MergeFrom(from.int64_params_);
  string_params_.MergeFrom(from.string_params_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reply_name()) {
      set_reply_name(from.reply_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  SetDirty();
}

void LuaReplyPacket::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

void LuaReplyPacket::CopyFrom(const LuaReplyPacket& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

bool LuaReplyPacket::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LuaReplyPacket::SetInitialized() {
  _has_bits_[0] |= 0x00000001;

  return;
}

void LuaReplyPacket::Swap(LuaReplyPacket* other) {
  if (other != this) {
    std::swap(reply_name_, other->reply_name_);
    int32_params_.Swap(&other->int32_params_);
    int64_params_.Swap(&other->int64_params_);
    string_params_.Swap(&other->string_params_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    SetDirty(), other->SetDirty();
  }
}

::google::protobuf::Metadata LuaReplyPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LuaReplyPacket_descriptor_;
  metadata.reflection = LuaReplyPacket_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LuaRequestPacket::kRequestNameFieldNumber;
const int LuaRequestPacket::kInt32ParamsFieldNumber;
const int LuaRequestPacket::kInt64ParamsFieldNumber;
const int LuaRequestPacket::kStringParamsFieldNumber;
#endif  // !_MSC_VER

LuaRequestPacket::LuaRequestPacket()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LuaRequestPacket::InitAsDefaultInstance() {
}

LuaRequestPacket::LuaRequestPacket(const LuaRequestPacket& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LuaRequestPacket::SharedCtor() {
  _cached_size_ = 0;
  request_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LuaRequestPacket::~LuaRequestPacket() {
  SharedDtor();
}

void LuaRequestPacket::SharedDtor() {
  if (request_name_ != &::google::protobuf::internal::kEmptyString) {
    delete request_name_;
  }
  if (this != default_instance_) {
  }
}

void LuaRequestPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LuaRequestPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LuaRequestPacket_descriptor_;
}

const LuaRequestPacket& LuaRequestPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ActivityPacket_2eproto();
  return *default_instance_;
}

LuaRequestPacket* LuaRequestPacket::default_instance_ = NULL;

LuaRequestPacket* LuaRequestPacket::New() const {
  return new LuaRequestPacket;
}

void LuaRequestPacket::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_request_name()) {
      if (request_name_ != &::google::protobuf::internal::kEmptyString) {
        request_name_->clear();
      }
    }
  }
  int32_params_.Clear();
  int64_params_.Clear();
  string_params_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
  SetDirty();
}

bool LuaRequestPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string request_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->request_name().data(), this->request_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_int32_params;
        break;
      }

      // repeated int32 int32_params = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_int32_params:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_int32_params())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_int32_params())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_int32_params;
        if (input->ExpectTag(25)) goto parse_int64_params;
        break;
      }

      // repeated fixed64 int64_params = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_int64_params:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 25, input, this->mutable_int64_params())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_int64_params())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(25)) goto parse_int64_params;
        if (input->ExpectTag(34)) goto parse_string_params;
        break;
      }

      // repeated string string_params = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_string_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_string_params()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->string_params(this->string_params_size() - 1).data(),
            this->string_params(this->string_params_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_string_params;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  SetDirty();
  return true;
#undef DO_
}

void LuaRequestPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string request_name = 1;
  if (has_request_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->request_name().data(), this->request_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->request_name(), output);
  }

  // repeated int32 int32_params = 2;
  for (int i = 0; i < this->int32_params_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->int32_params(i), output);
  }

  // repeated fixed64 int64_params = 3;
  for (int i = 0; i < this->int64_params_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      3, this->int64_params(i), output);
  }

  // repeated string string_params = 4;
  for (int i = 0; i < this->string_params_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->string_params(i).data(), this->string_params(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->string_params(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LuaRequestPacket::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string request_name = 1;
  if (has_request_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->request_name().data(), this->request_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_name(), target);
  }

  // repeated int32 int32_params = 2;
  for (int i = 0; i < this->int32_params_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->int32_params(i), target);
  }

  // repeated fixed64 int64_params = 3;
  for (int i = 0; i < this->int64_params_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(3, this->int64_params(i), target);
  }

  // repeated string string_params = 4;
  for (int i = 0; i < this->string_params_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->string_params(i).data(), this->string_params(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->string_params(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LuaRequestPacket::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string request_name = 1;
    if (has_request_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->request_name());
    }

  }
  // repeated int32 int32_params = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->int32_params_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->int32_params(i));
    }
    total_size += 1 * this->int32_params_size() + data_size;
  }

  // repeated fixed64 int64_params = 3;
  {
    int data_size = 0;
    data_size = 8 * this->int64_params_size();
    total_size += 1 * this->int64_params_size() + data_size;
  }

  // repeated string string_params = 4;
  total_size += 1 * this->string_params_size();
  for (int i = 0; i < this->string_params_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->string_params(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LuaRequestPacket::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LuaRequestPacket* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LuaRequestPacket*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
  SetDirty();
}

void LuaRequestPacket::MergeFrom(const LuaRequestPacket& from) {
  GOOGLE_CHECK_NE(&from, this);
  int32_params_.MergeFrom(from.int32_params_);
  int64_params_.MergeFrom(from.int64_params_);
  string_params_.MergeFrom(from.string_params_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_request_name()) {
      set_request_name(from.request_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  SetDirty();
}

void LuaRequestPacket::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

void LuaRequestPacket::CopyFrom(const LuaRequestPacket& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

bool LuaRequestPacket::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LuaRequestPacket::SetInitialized() {
  _has_bits_[0] |= 0x00000001;

  return;
}

void LuaRequestPacket::Swap(LuaRequestPacket* other) {
  if (other != this) {
    std::swap(request_name_, other->request_name_);
    int32_params_.Swap(&other->int32_params_);
    int64_params_.Swap(&other->int64_params_);
    string_params_.Swap(&other->string_params_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    SetDirty(), other->SetDirty();
  }
}

::google::protobuf::Metadata LuaRequestPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LuaRequestPacket_descriptor_;
  metadata.reflection = LuaRequestPacket_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Packet

// @@protoc_insertion_point(global_scope)

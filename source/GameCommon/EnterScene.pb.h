// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EnterScene.proto

#ifndef PROTOBUF_EnterScene_2eproto__INCLUDED
#define PROTOBUF_EnterScene_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Base.pb.h"
#include "PlayerBasicInfo.pb.h"
#include "ActorBasicInfo.pb.h"
// @@protoc_insertion_point(includes)

namespace Packet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_EnterScene_2eproto();
void protobuf_AssignDesc_EnterScene_2eproto();
void protobuf_ShutdownFile_EnterScene_2eproto();

class PlayerEnterScene;
class PlayerEnterGameRequest;
class ClientEnterSceneOk;
class PlayerChangeSceneRequest;
class PlayerRaidOver;
class PlayerEnterSceneReply;
class PlayerLeaveScene;
class PlayerLeaveSceneReply;
class SessionChanged;
class PlayerDisconnect;

// ===================================================================

class PlayerEnterScene : public ::google::protobuf::Message {
 public:
  PlayerEnterScene();
  virtual ~PlayerEnterScene();

  PlayerEnterScene(const PlayerEnterScene& from);

  inline PlayerEnterScene& operator=(const PlayerEnterScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerEnterScene& default_instance();

  void Swap(PlayerEnterScene* other);

  // implements Message ----------------------------------------------

  PlayerEnterScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerEnterScene& from);
  void MergeFrom(const PlayerEnterScene& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 scene_id = 1;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);

  // optional int32 pre_scene_id = 2;
  inline bool has_pre_scene_id() const;
  inline void clear_pre_scene_id();
  static const int kPreSceneIdFieldNumber = 2;
  inline ::google::protobuf::int32 pre_scene_id() const;
  inline void set_pre_scene_id(::google::protobuf::int32 value);

  // optional .Packet.Position init_pos = 3;
  inline bool has_init_pos() const;
  inline void clear_init_pos();
  static const int kInitPosFieldNumber = 3;
  inline const ::Packet::Position& init_pos() const;
  inline ::Packet::Position* mutable_init_pos();
  inline ::Packet::Position* release_init_pos();
  inline void set_allocated_init_pos(::Packet::Position* init_pos);

  // optional int32 script_id = 4;
  inline bool has_script_id() const;
  inline void clear_script_id();
  static const int kScriptIdFieldNumber = 4;
  inline ::google::protobuf::int32 script_id() const;
  inline void set_script_id(::google::protobuf::int32 value);

  // optional int32 rtid = 5;
  inline bool has_rtid() const;
  inline void clear_rtid();
  static const int kRtidFieldNumber = 5;
  inline ::google::protobuf::int32 rtid() const;
  inline void set_rtid(::google::protobuf::int32 value);

  // optional .Packet.Position portal_pos = 6;
  inline bool has_portal_pos() const;
  inline void clear_portal_pos();
  static const int kPortalPosFieldNumber = 6;
  inline const ::Packet::Position& portal_pos() const;
  inline ::Packet::Position* mutable_portal_pos();
  inline ::Packet::Position* release_portal_pos();
  inline void set_allocated_portal_pos(::Packet::Position* portal_pos);

  // optional int32 camp = 7;
  inline bool has_camp() const;
  inline void clear_camp();
  static const int kCampFieldNumber = 7;
  inline ::google::protobuf::int32 camp() const;
  inline void set_camp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.PlayerEnterScene)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_pre_scene_id();
  inline void clear_has_pre_scene_id();
  inline void set_has_init_pos();
  inline void clear_has_init_pos();
  inline void set_has_script_id();
  inline void clear_has_script_id();
  inline void set_has_rtid();
  inline void clear_has_rtid();
  inline void set_has_portal_pos();
  inline void clear_has_portal_pos();
  inline void set_has_camp();
  inline void clear_has_camp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::int32 pre_scene_id_;
  ::Packet::Position* init_pos_;
  ::google::protobuf::int32 script_id_;
  ::google::protobuf::int32 rtid_;
  ::Packet::Position* portal_pos_;
  ::google::protobuf::int32 camp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_EnterScene_2eproto();
  friend void protobuf_AssignDesc_EnterScene_2eproto();
  friend void protobuf_ShutdownFile_EnterScene_2eproto();

  void InitAsDefaultInstance();
  static PlayerEnterScene* default_instance_;
};
// -------------------------------------------------------------------

class PlayerEnterGameRequest : public ::google::protobuf::Message {
 public:
  PlayerEnterGameRequest();
  virtual ~PlayerEnterGameRequest();

  PlayerEnterGameRequest(const PlayerEnterGameRequest& from);

  inline PlayerEnterGameRequest& operator=(const PlayerEnterGameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerEnterGameRequest& default_instance();

  void Swap(PlayerEnterGameRequest* other);

  // implements Message ----------------------------------------------

  PlayerEnterGameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerEnterGameRequest& from);
  void MergeFrom(const PlayerEnterGameRequest& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.PlayerEnterGameRequest)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_EnterScene_2eproto();
  friend void protobuf_AssignDesc_EnterScene_2eproto();
  friend void protobuf_ShutdownFile_EnterScene_2eproto();

  void InitAsDefaultInstance();
  static PlayerEnterGameRequest* default_instance_;
};
// -------------------------------------------------------------------

class ClientEnterSceneOk : public ::google::protobuf::Message {
 public:
  ClientEnterSceneOk();
  virtual ~ClientEnterSceneOk();

  ClientEnterSceneOk(const ClientEnterSceneOk& from);

  inline ClientEnterSceneOk& operator=(const ClientEnterSceneOk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientEnterSceneOk& default_instance();

  void Swap(ClientEnterSceneOk* other);

  // implements Message ----------------------------------------------

  ClientEnterSceneOk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientEnterSceneOk& from);
  void MergeFrom(const ClientEnterSceneOk& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional bool login_init = 2;
  inline bool has_login_init() const;
  inline void clear_login_init();
  static const int kLoginInitFieldNumber = 2;
  inline bool login_init() const;
  inline void set_login_init(bool value);

  // @@protoc_insertion_point(class_scope:Packet.ClientEnterSceneOk)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_login_init();
  inline void clear_has_login_init();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  bool login_init_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_EnterScene_2eproto();
  friend void protobuf_AssignDesc_EnterScene_2eproto();
  friend void protobuf_ShutdownFile_EnterScene_2eproto();

  void InitAsDefaultInstance();
  static ClientEnterSceneOk* default_instance_;
};
// -------------------------------------------------------------------

class PlayerChangeSceneRequest : public ::google::protobuf::Message {
 public:
  PlayerChangeSceneRequest();
  virtual ~PlayerChangeSceneRequest();

  PlayerChangeSceneRequest(const PlayerChangeSceneRequest& from);

  inline PlayerChangeSceneRequest& operator=(const PlayerChangeSceneRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerChangeSceneRequest& default_instance();

  void Swap(PlayerChangeSceneRequest* other);

  // implements Message ----------------------------------------------

  PlayerChangeSceneRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerChangeSceneRequest& from);
  void MergeFrom(const PlayerChangeSceneRequest& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required int32 scene_id = 2;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.PlayerChangeSceneRequest)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 scene_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_EnterScene_2eproto();
  friend void protobuf_AssignDesc_EnterScene_2eproto();
  friend void protobuf_ShutdownFile_EnterScene_2eproto();

  void InitAsDefaultInstance();
  static PlayerChangeSceneRequest* default_instance_;
};
// -------------------------------------------------------------------

class PlayerRaidOver : public ::google::protobuf::Message {
 public:
  PlayerRaidOver();
  virtual ~PlayerRaidOver();

  PlayerRaidOver(const PlayerRaidOver& from);

  inline PlayerRaidOver& operator=(const PlayerRaidOver& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerRaidOver& default_instance();

  void Swap(PlayerRaidOver* other);

  // implements Message ----------------------------------------------

  PlayerRaidOver* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerRaidOver& from);
  void MergeFrom(const PlayerRaidOver& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 second = 1;
  inline bool has_second() const;
  inline void clear_second();
  static const int kSecondFieldNumber = 1;
  inline ::google::protobuf::int32 second() const;
  inline void set_second(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.PlayerRaidOver)
 private:
  inline void set_has_second();
  inline void clear_has_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 second_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_EnterScene_2eproto();
  friend void protobuf_AssignDesc_EnterScene_2eproto();
  friend void protobuf_ShutdownFile_EnterScene_2eproto();

  void InitAsDefaultInstance();
  static PlayerRaidOver* default_instance_;
};
// -------------------------------------------------------------------

class PlayerEnterSceneReply : public ::google::protobuf::Message {
 public:
  PlayerEnterSceneReply();
  virtual ~PlayerEnterSceneReply();

  PlayerEnterSceneReply(const PlayerEnterSceneReply& from);

  inline PlayerEnterSceneReply& operator=(const PlayerEnterSceneReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerEnterSceneReply& default_instance();

  void Swap(PlayerEnterSceneReply* other);

  // implements Message ----------------------------------------------

  PlayerEnterSceneReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerEnterSceneReply& from);
  void MergeFrom(const PlayerEnterSceneReply& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.PlayerBasicInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::Packet::PlayerBasicInfo& info() const;
  inline ::Packet::PlayerBasicInfo* mutable_info();
  inline ::Packet::PlayerBasicInfo* release_info();
  inline void set_allocated_info(::Packet::PlayerBasicInfo* info);

  // required .Packet.ActorBasicInfo main_actor = 2;
  inline bool has_main_actor() const;
  inline void clear_main_actor();
  static const int kMainActorFieldNumber = 2;
  inline const ::Packet::ActorBasicInfo& main_actor() const;
  inline ::Packet::ActorBasicInfo* mutable_main_actor();
  inline ::Packet::ActorBasicInfo* release_main_actor();
  inline void set_allocated_main_actor(::Packet::ActorBasicInfo* main_actor);

  // @@protoc_insertion_point(class_scope:Packet.PlayerEnterSceneReply)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_main_actor();
  inline void clear_has_main_actor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::PlayerBasicInfo* info_;
  ::Packet::ActorBasicInfo* main_actor_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_EnterScene_2eproto();
  friend void protobuf_AssignDesc_EnterScene_2eproto();
  friend void protobuf_ShutdownFile_EnterScene_2eproto();

  void InitAsDefaultInstance();
  static PlayerEnterSceneReply* default_instance_;
};
// -------------------------------------------------------------------

class PlayerLeaveScene : public ::google::protobuf::Message {
 public:
  PlayerLeaveScene();
  virtual ~PlayerLeaveScene();

  PlayerLeaveScene(const PlayerLeaveScene& from);

  inline PlayerLeaveScene& operator=(const PlayerLeaveScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLeaveScene& default_instance();

  void Swap(PlayerLeaveScene* other);

  // implements Message ----------------------------------------------

  PlayerLeaveScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerLeaveScene& from);
  void MergeFrom(const PlayerLeaveScene& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required int32 scene_id = 2;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.PlayerLeaveScene)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 scene_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_EnterScene_2eproto();
  friend void protobuf_AssignDesc_EnterScene_2eproto();
  friend void protobuf_ShutdownFile_EnterScene_2eproto();

  void InitAsDefaultInstance();
  static PlayerLeaveScene* default_instance_;
};
// -------------------------------------------------------------------

class PlayerLeaveSceneReply : public ::google::protobuf::Message {
 public:
  PlayerLeaveSceneReply();
  virtual ~PlayerLeaveSceneReply();

  PlayerLeaveSceneReply(const PlayerLeaveSceneReply& from);

  inline PlayerLeaveSceneReply& operator=(const PlayerLeaveSceneReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLeaveSceneReply& default_instance();

  void Swap(PlayerLeaveSceneReply* other);

  // implements Message ----------------------------------------------

  PlayerLeaveSceneReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerLeaveSceneReply& from);
  void MergeFrom(const PlayerLeaveSceneReply& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 scene_id = 1;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.PlayerLeaveSceneReply)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 scene_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_EnterScene_2eproto();
  friend void protobuf_AssignDesc_EnterScene_2eproto();
  friend void protobuf_ShutdownFile_EnterScene_2eproto();

  void InitAsDefaultInstance();
  static PlayerLeaveSceneReply* default_instance_;
};
// -------------------------------------------------------------------

class SessionChanged : public ::google::protobuf::Message {
 public:
  SessionChanged();
  virtual ~SessionChanged();

  SessionChanged(const SessionChanged& from);

  inline SessionChanged& operator=(const SessionChanged& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SessionChanged& default_instance();

  void Swap(SessionChanged* other);

  // implements Message ----------------------------------------------

  SessionChanged* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SessionChanged& from);
  void MergeFrom(const SessionChanged& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.SessionChanged)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_EnterScene_2eproto();
  friend void protobuf_AssignDesc_EnterScene_2eproto();
  friend void protobuf_ShutdownFile_EnterScene_2eproto();

  void InitAsDefaultInstance();
  static SessionChanged* default_instance_;
};
// -------------------------------------------------------------------

class PlayerDisconnect : public ::google::protobuf::Message {
 public:
  PlayerDisconnect();
  virtual ~PlayerDisconnect();

  PlayerDisconnect(const PlayerDisconnect& from);

  inline PlayerDisconnect& operator=(const PlayerDisconnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerDisconnect& default_instance();

  void Swap(PlayerDisconnect* other);

  // implements Message ----------------------------------------------

  PlayerDisconnect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerDisconnect& from);
  void MergeFrom(const PlayerDisconnect& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.PlayerDisconnect)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_EnterScene_2eproto();
  friend void protobuf_AssignDesc_EnterScene_2eproto();
  friend void protobuf_ShutdownFile_EnterScene_2eproto();

  void InitAsDefaultInstance();
  static PlayerDisconnect* default_instance_;
};
// ===================================================================


// ===================================================================

// PlayerEnterScene

// required int32 scene_id = 1;
inline bool PlayerEnterScene::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerEnterScene::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerEnterScene::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerEnterScene::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerEnterScene::scene_id() const {
  return scene_id_;
}
inline void PlayerEnterScene::set_scene_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_scene_id();
  scene_id_ = value;
}

// optional int32 pre_scene_id = 2;
inline bool PlayerEnterScene::has_pre_scene_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerEnterScene::set_has_pre_scene_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerEnterScene::clear_has_pre_scene_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerEnterScene::clear_pre_scene_id() {
  pre_scene_id_ = 0;
  clear_has_pre_scene_id();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerEnterScene::pre_scene_id() const {
  return pre_scene_id_;
}
inline void PlayerEnterScene::set_pre_scene_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_pre_scene_id();
  pre_scene_id_ = value;
}

// optional .Packet.Position init_pos = 3;
inline bool PlayerEnterScene::has_init_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerEnterScene::set_has_init_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerEnterScene::clear_has_init_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerEnterScene::clear_init_pos() {
  if (init_pos_ != NULL) init_pos_->::Packet::Position::Clear();
  clear_has_init_pos();
  SetDirty();
}
inline const ::Packet::Position& PlayerEnterScene::init_pos() const {
  return init_pos_ != NULL ? *init_pos_ : *default_instance_->init_pos_;
}
inline ::Packet::Position* PlayerEnterScene::mutable_init_pos() {
  SetDirty();
  set_has_init_pos();
  if (init_pos_ == NULL) init_pos_ = new ::Packet::Position;
  return init_pos_;
}
inline ::Packet::Position* PlayerEnterScene::release_init_pos() {
  SetDirty();
  clear_has_init_pos();
  ::Packet::Position* temp = init_pos_;
  init_pos_ = NULL;
  return temp;
}
inline void PlayerEnterScene::set_allocated_init_pos(::Packet::Position* init_pos) {
  SetDirty();
  delete init_pos_;
  init_pos_ = init_pos;
  if (init_pos) {
    set_has_init_pos();
  } else {
    clear_has_init_pos();
  }
}

// optional int32 script_id = 4;
inline bool PlayerEnterScene::has_script_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerEnterScene::set_has_script_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerEnterScene::clear_has_script_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerEnterScene::clear_script_id() {
  script_id_ = 0;
  clear_has_script_id();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerEnterScene::script_id() const {
  return script_id_;
}
inline void PlayerEnterScene::set_script_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_script_id();
  script_id_ = value;
}

// optional int32 rtid = 5;
inline bool PlayerEnterScene::has_rtid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerEnterScene::set_has_rtid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerEnterScene::clear_has_rtid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerEnterScene::clear_rtid() {
  rtid_ = 0;
  clear_has_rtid();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerEnterScene::rtid() const {
  return rtid_;
}
inline void PlayerEnterScene::set_rtid(::google::protobuf::int32 value) {
  SetDirty();
  set_has_rtid();
  rtid_ = value;
}

// optional .Packet.Position portal_pos = 6;
inline bool PlayerEnterScene::has_portal_pos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerEnterScene::set_has_portal_pos() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerEnterScene::clear_has_portal_pos() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerEnterScene::clear_portal_pos() {
  if (portal_pos_ != NULL) portal_pos_->::Packet::Position::Clear();
  clear_has_portal_pos();
  SetDirty();
}
inline const ::Packet::Position& PlayerEnterScene::portal_pos() const {
  return portal_pos_ != NULL ? *portal_pos_ : *default_instance_->portal_pos_;
}
inline ::Packet::Position* PlayerEnterScene::mutable_portal_pos() {
  SetDirty();
  set_has_portal_pos();
  if (portal_pos_ == NULL) portal_pos_ = new ::Packet::Position;
  return portal_pos_;
}
inline ::Packet::Position* PlayerEnterScene::release_portal_pos() {
  SetDirty();
  clear_has_portal_pos();
  ::Packet::Position* temp = portal_pos_;
  portal_pos_ = NULL;
  return temp;
}
inline void PlayerEnterScene::set_allocated_portal_pos(::Packet::Position* portal_pos) {
  SetDirty();
  delete portal_pos_;
  portal_pos_ = portal_pos;
  if (portal_pos) {
    set_has_portal_pos();
  } else {
    clear_has_portal_pos();
  }
}

// optional int32 camp = 7;
inline bool PlayerEnterScene::has_camp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerEnterScene::set_has_camp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerEnterScene::clear_has_camp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerEnterScene::clear_camp() {
  camp_ = 0;
  clear_has_camp();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerEnterScene::camp() const {
  return camp_;
}
inline void PlayerEnterScene::set_camp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_camp();
  camp_ = value;
}

// -------------------------------------------------------------------

// PlayerEnterGameRequest

// required fixed64 guid = 1;
inline bool PlayerEnterGameRequest::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerEnterGameRequest::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerEnterGameRequest::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerEnterGameRequest::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 PlayerEnterGameRequest::guid() const {
  return guid_;
}
inline void PlayerEnterGameRequest::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// -------------------------------------------------------------------

// ClientEnterSceneOk

// required fixed64 guid = 1;
inline bool ClientEnterSceneOk::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientEnterSceneOk::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientEnterSceneOk::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientEnterSceneOk::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ClientEnterSceneOk::guid() const {
  return guid_;
}
inline void ClientEnterSceneOk::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// optional bool login_init = 2;
inline bool ClientEnterSceneOk::has_login_init() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientEnterSceneOk::set_has_login_init() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientEnterSceneOk::clear_has_login_init() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientEnterSceneOk::clear_login_init() {
  login_init_ = false;
  clear_has_login_init();
  SetDirty();
}
inline bool ClientEnterSceneOk::login_init() const {
  return login_init_;
}
inline void ClientEnterSceneOk::set_login_init(bool value) {
  SetDirty();
  set_has_login_init();
  login_init_ = value;
}

// -------------------------------------------------------------------

// PlayerChangeSceneRequest

// required fixed64 guid = 1;
inline bool PlayerChangeSceneRequest::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerChangeSceneRequest::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerChangeSceneRequest::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerChangeSceneRequest::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 PlayerChangeSceneRequest::guid() const {
  return guid_;
}
inline void PlayerChangeSceneRequest::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required int32 scene_id = 2;
inline bool PlayerChangeSceneRequest::has_scene_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerChangeSceneRequest::set_has_scene_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerChangeSceneRequest::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerChangeSceneRequest::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerChangeSceneRequest::scene_id() const {
  return scene_id_;
}
inline void PlayerChangeSceneRequest::set_scene_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_scene_id();
  scene_id_ = value;
}

// -------------------------------------------------------------------

// PlayerRaidOver

// required int32 second = 1;
inline bool PlayerRaidOver::has_second() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerRaidOver::set_has_second() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerRaidOver::clear_has_second() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerRaidOver::clear_second() {
  second_ = 0;
  clear_has_second();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerRaidOver::second() const {
  return second_;
}
inline void PlayerRaidOver::set_second(::google::protobuf::int32 value) {
  SetDirty();
  set_has_second();
  second_ = value;
}

// -------------------------------------------------------------------

// PlayerEnterSceneReply

// required .Packet.PlayerBasicInfo info = 1;
inline bool PlayerEnterSceneReply::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerEnterSceneReply::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerEnterSceneReply::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerEnterSceneReply::clear_info() {
  if (info_ != NULL) info_->::Packet::PlayerBasicInfo::Clear();
  clear_has_info();
  SetDirty();
}
inline const ::Packet::PlayerBasicInfo& PlayerEnterSceneReply::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Packet::PlayerBasicInfo* PlayerEnterSceneReply::mutable_info() {
  SetDirty();
  set_has_info();
  if (info_ == NULL) info_ = new ::Packet::PlayerBasicInfo;
  return info_;
}
inline ::Packet::PlayerBasicInfo* PlayerEnterSceneReply::release_info() {
  SetDirty();
  clear_has_info();
  ::Packet::PlayerBasicInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void PlayerEnterSceneReply::set_allocated_info(::Packet::PlayerBasicInfo* info) {
  SetDirty();
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// required .Packet.ActorBasicInfo main_actor = 2;
inline bool PlayerEnterSceneReply::has_main_actor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerEnterSceneReply::set_has_main_actor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerEnterSceneReply::clear_has_main_actor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerEnterSceneReply::clear_main_actor() {
  if (main_actor_ != NULL) main_actor_->::Packet::ActorBasicInfo::Clear();
  clear_has_main_actor();
  SetDirty();
}
inline const ::Packet::ActorBasicInfo& PlayerEnterSceneReply::main_actor() const {
  return main_actor_ != NULL ? *main_actor_ : *default_instance_->main_actor_;
}
inline ::Packet::ActorBasicInfo* PlayerEnterSceneReply::mutable_main_actor() {
  SetDirty();
  set_has_main_actor();
  if (main_actor_ == NULL) main_actor_ = new ::Packet::ActorBasicInfo;
  return main_actor_;
}
inline ::Packet::ActorBasicInfo* PlayerEnterSceneReply::release_main_actor() {
  SetDirty();
  clear_has_main_actor();
  ::Packet::ActorBasicInfo* temp = main_actor_;
  main_actor_ = NULL;
  return temp;
}
inline void PlayerEnterSceneReply::set_allocated_main_actor(::Packet::ActorBasicInfo* main_actor) {
  SetDirty();
  delete main_actor_;
  main_actor_ = main_actor;
  if (main_actor) {
    set_has_main_actor();
  } else {
    clear_has_main_actor();
  }
}

// -------------------------------------------------------------------

// PlayerLeaveScene

// required fixed64 guid = 1;
inline bool PlayerLeaveScene::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerLeaveScene::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerLeaveScene::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerLeaveScene::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 PlayerLeaveScene::guid() const {
  return guid_;
}
inline void PlayerLeaveScene::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required int32 scene_id = 2;
inline bool PlayerLeaveScene::has_scene_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerLeaveScene::set_has_scene_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerLeaveScene::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerLeaveScene::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerLeaveScene::scene_id() const {
  return scene_id_;
}
inline void PlayerLeaveScene::set_scene_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_scene_id();
  scene_id_ = value;
}

// -------------------------------------------------------------------

// PlayerLeaveSceneReply

// required int32 scene_id = 1;
inline bool PlayerLeaveSceneReply::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerLeaveSceneReply::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerLeaveSceneReply::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerLeaveSceneReply::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerLeaveSceneReply::scene_id() const {
  return scene_id_;
}
inline void PlayerLeaveSceneReply::set_scene_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_scene_id();
  scene_id_ = value;
}

// -------------------------------------------------------------------

// SessionChanged

// -------------------------------------------------------------------

// PlayerDisconnect


// @@protoc_insertion_point(namespace_scope)

}  // namespace Packet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_EnterScene_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PackageConfig.proto
#include "PackageConfig.pb.h"
#include "PackageConfig.proto.fflua.h"
namespace Config {
bool ItemPackageElement_fflua_reg(lua_State* state)
{
//for decltype
	ItemPackageElement* message(nullptr);
	message;
	ff::fflua_register_t<ItemPackageElement, ctor()>(state, "ItemPackageElement", "google::protobuf::Message")
		// required int32 item_id = 1;
		.def(&ItemPackageElement::item_id, "item_id")
		.def(&ItemPackageElement::set_item_id, "set_item_id")
		// required int32 item_amount = 2;
		.def(&ItemPackageElement::item_amount, "item_amount")
		.def(&ItemPackageElement::set_item_amount, "set_item_amount")
		// required int32 item_weight = 3;
		.def(&ItemPackageElement::item_weight, "item_weight")
		.def(&ItemPackageElement::set_item_weight, "set_item_weight")
		.def(&ItemPackageElement::ByteSize, "ByteSize")
		.def(&ItemPackageElement::SetInitialized, "SetInitialized")
		;
	return true;
}
bool ItemDropGroup_fflua_reg(lua_State* state)
{
//for decltype
	ItemDropGroup* message(nullptr);
	message;
	ff::fflua_register_t<ItemDropGroup, ctor()>(state, "ItemDropGroup", "google::protobuf::Message")
		// required int32 group = 1;
		.def(&ItemDropGroup::group, "group")
		.def(&ItemDropGroup::set_group, "set_group")
		// required .Config.ItemPackageElement item = 2;
		.def(&ItemDropGroup::item, "item")
		.def(&ItemDropGroup::mutable_item, "mutable_item")
		.def(&ItemDropGroup::ByteSize, "ByteSize")
		.def(&ItemDropGroup::SetInitialized, "SetInitialized")
		;
	return true;
}
bool ItemPackageConfig_fflua_reg(lua_State* state)
{
//for decltype
	ItemPackageConfig* message(nullptr);
	message;
	ff::fflua_register_t<ItemPackageConfig, ctor()>(state, "ItemPackageConfig", "google::protobuf::Message")
		// required int32 id = 1;
		.def(&ItemPackageConfig::id, "id")
		.def(&ItemPackageConfig::set_id, "set_id")
		// required .Config.ItemPackageType type = 2;
		.def(&ItemPackageConfig::type, "type")
		.def(&ItemPackageConfig::set_type, "set_type")
		// required int32 player_exp = 3;
		.def(&ItemPackageConfig::player_exp, "player_exp")
		.def(&ItemPackageConfig::set_player_exp, "set_player_exp")
		// required int32 actor_exp = 4;
		.def(&ItemPackageConfig::actor_exp, "actor_exp")
		.def(&ItemPackageConfig::set_actor_exp, "set_actor_exp")
		// required int32 gold = 5;
		.def(&ItemPackageConfig::gold, "gold")
		.def(&ItemPackageConfig::set_gold, "set_gold")
		// required int32 gem = 6;
		.def(&ItemPackageConfig::gem, "gem")
		.def(&ItemPackageConfig::set_gem, "set_gem")
		// repeated .Config.ItemPackageElement items = 7;
		.def(&ItemPackageConfig::items_size, "items_size")
		.def<decltype(message->items(0)) (ItemPackageConfig::*)(int) const>(&ItemPackageConfig::items, "items")
		.def<decltype(message->mutable_items(0)) (ItemPackageConfig::*)(int)>(&ItemPackageConfig::mutable_items, "mutable_items")
		.def(&ItemPackageConfig::add_items, "add_items")
		// required .Packet.ActorFigthFormation formation = 8;
		.def(&ItemPackageConfig::formation, "formation")
		.def(&ItemPackageConfig::set_formation, "set_formation")
		// repeated int32 drop_group = 9;
		.def(&ItemPackageConfig::drop_group_size, "drop_group_size")
		.def<decltype(message->drop_group(0)) (ItemPackageConfig::*)(int) const>(&ItemPackageConfig::drop_group, "drop_group")
		.def<void(ItemPackageConfig::*)(int, const decltype(message->drop_group(0)))>(&ItemPackageConfig::set_drop_group, "set_drop_group")
		.def(&ItemPackageConfig::add_drop_group, "add_drop_group")
		// repeated int32 weight = 10;
		.def(&ItemPackageConfig::weight_size, "weight_size")
		.def<decltype(message->weight(0)) (ItemPackageConfig::*)(int) const>(&ItemPackageConfig::weight, "weight")
		.def<void(ItemPackageConfig::*)(int, const decltype(message->weight(0)))>(&ItemPackageConfig::set_weight, "set_weight")
		.def(&ItemPackageConfig::add_weight, "add_weight")
		// required int32 draw_limit = 11;
		.def(&ItemPackageConfig::draw_limit, "draw_limit")
		.def(&ItemPackageConfig::set_draw_limit, "set_draw_limit")
		.def(&ItemPackageConfig::ByteSize, "ByteSize")
		.def(&ItemPackageConfig::SetInitialized, "SetInitialized")
		;
	return true;
}
bool PackageConfig_fflua_regist_all(lua_State* state)
{
	ItemPackageElement_fflua_reg(state);
	ItemDropGroup_fflua_reg(state);
	ItemPackageConfig_fflua_reg(state);
	return true;
}
}

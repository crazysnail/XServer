// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PackageConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PackageConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Config {

namespace {

const ::google::protobuf::Descriptor* ItemPackageElement_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemPackageElement_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemDropGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemDropGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemPackageConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemPackageConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PackageConfig_2eproto() {
  protobuf_AddDesc_PackageConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PackageConfig.proto");
  GOOGLE_CHECK(file != NULL);
  ItemPackageElement_descriptor_ = file->message_type(0);
  static const int ItemPackageElement_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageElement, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageElement, item_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageElement, item_weight_),
  };
  ItemPackageElement_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemPackageElement_descriptor_,
      ItemPackageElement::default_instance_,
      ItemPackageElement_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageElement, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageElement, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemPackageElement));
  ItemDropGroup_descriptor_ = file->message_type(1);
  static const int ItemDropGroup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemDropGroup, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemDropGroup, item_),
  };
  ItemDropGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemDropGroup_descriptor_,
      ItemDropGroup::default_instance_,
      ItemDropGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemDropGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemDropGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemDropGroup));
  ItemPackageConfig_descriptor_ = file->message_type(2);
  static const int ItemPackageConfig_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageConfig, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageConfig, player_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageConfig, actor_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageConfig, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageConfig, gem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageConfig, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageConfig, formation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageConfig, drop_group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageConfig, weight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageConfig, draw_limit_),
  };
  ItemPackageConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemPackageConfig_descriptor_,
      ItemPackageConfig::default_instance_,
      ItemPackageConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPackageConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemPackageConfig));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PackageConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemPackageElement_descriptor_, &ItemPackageElement::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemDropGroup_descriptor_, &ItemDropGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemPackageConfig_descriptor_, &ItemPackageConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PackageConfig_2eproto() {
  delete ItemPackageElement::default_instance_;
  delete ItemPackageElement_reflection_;
  delete ItemDropGroup::default_instance_;
  delete ItemDropGroup_reflection_;
  delete ItemPackageConfig::default_instance_;
  delete ItemPackageConfig_reflection_;
}

void protobuf_AddDesc_PackageConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Config::protobuf_AddDesc_AllConfigEnum_2eproto();
  ::Packet::protobuf_AddDesc_AllPacketEnum_2eproto();
  ::Packet::protobuf_AddDesc_ActorBasicInfo_2eproto();
  ::Packet::protobuf_AddDesc_ProtoBufOption_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023PackageConfig.proto\022\006Config\032\023AllConfig"
    "Enum.proto\032\023AllPacketEnum.proto\032\024ActorBa"
    "sicInfo.proto\032\024ProtoBufOption.proto\"O\n\022I"
    "temPackageElement\022\017\n\007item_id\030\001 \002(\005\022\023\n\013it"
    "em_amount\030\002 \002(\005\022\023\n\013item_weight\030\003 \002(\005\"H\n\r"
    "ItemDropGroup\022\r\n\005group\030\001 \002(\005\022(\n\004item\030\002 \002"
    "(\0132\032.Config.ItemPackageElement\"\255\002\n\021ItemP"
    "ackageConfig\022\n\n\002id\030\001 \002(\005\022%\n\004type\030\002 \002(\0162\027"
    ".Config.ItemPackageType\022\022\n\nplayer_exp\030\003 "
    "\002(\005\022\021\n\tactor_exp\030\004 \002(\005\022\014\n\004gold\030\005 \002(\005\022\013\n\003"
    "gem\030\006 \002(\005\022/\n\005items\030\007 \003(\0132\032.Config.ItemPa"
    "ckageElementB\004\300\363\030\036\022.\n\tformation\030\010 \002(\0162\033."
    "Packet.ActorFigthFormation\022\030\n\ndrop_group"
    "\030\t \003(\005B\004\300\363\030\003\022\024\n\006weight\030\n \003(\005B\004\300\363\030\003\022\022\n\ndr"
    "aw_limit\030\013 \002(\005", 574);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PackageConfig.proto", &protobuf_RegisterTypes);
  ItemPackageElement::default_instance_ = new ItemPackageElement();
  ItemDropGroup::default_instance_ = new ItemDropGroup();
  ItemPackageConfig::default_instance_ = new ItemPackageConfig();
  ItemPackageElement::default_instance_->InitAsDefaultInstance();
  ItemDropGroup::default_instance_->InitAsDefaultInstance();
  ItemPackageConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PackageConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PackageConfig_2eproto {
  StaticDescriptorInitializer_PackageConfig_2eproto() {
    protobuf_AddDesc_PackageConfig_2eproto();
  }
} static_descriptor_initializer_PackageConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ItemPackageElement::kItemIdFieldNumber;
const int ItemPackageElement::kItemAmountFieldNumber;
const int ItemPackageElement::kItemWeightFieldNumber;
#endif  // !_MSC_VER

ItemPackageElement::ItemPackageElement()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemPackageElement::InitAsDefaultInstance() {
}

ItemPackageElement::ItemPackageElement(const ItemPackageElement& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemPackageElement::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  item_amount_ = 0;
  item_weight_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemPackageElement::~ItemPackageElement() {
  SharedDtor();
}

void ItemPackageElement::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemPackageElement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemPackageElement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemPackageElement_descriptor_;
}

const ItemPackageElement& ItemPackageElement::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PackageConfig_2eproto();
  return *default_instance_;
}

ItemPackageElement* ItemPackageElement::default_instance_ = NULL;

ItemPackageElement* ItemPackageElement::New() const {
  return new ItemPackageElement;
}

void ItemPackageElement::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    item_amount_ = 0;
    item_weight_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
  SetDirty();
}

bool ItemPackageElement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_amount;
        break;
      }

      // required int32 item_amount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_amount_)));
          set_has_item_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_weight;
        break;
      }

      // required int32 item_weight = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_weight_)));
          set_has_item_weight();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  SetDirty();
  return true;
#undef DO_
}

void ItemPackageElement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }

  // required int32 item_amount = 2;
  if (has_item_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_amount(), output);
  }

  // required int32 item_weight = 3;
  if (has_item_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_weight(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemPackageElement::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }

  // required int32 item_amount = 2;
  if (has_item_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_amount(), target);
  }

  // required int32 item_weight = 3;
  if (has_item_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_weight(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemPackageElement::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }

    // required int32 item_amount = 2;
    if (has_item_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_amount());
    }

    // required int32 item_weight = 3;
    if (has_item_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_weight());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemPackageElement::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemPackageElement* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemPackageElement*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
  SetDirty();
}

void ItemPackageElement::MergeFrom(const ItemPackageElement& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_amount()) {
      set_item_amount(from.item_amount());
    }
    if (from.has_item_weight()) {
      set_item_weight(from.item_weight());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  SetDirty();
}

void ItemPackageElement::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

void ItemPackageElement::CopyFrom(const ItemPackageElement& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

bool ItemPackageElement::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ItemPackageElement::SetInitialized() {
  _has_bits_[0] |= 0x00000007;

  return;
}

void ItemPackageElement::Swap(ItemPackageElement* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(item_amount_, other->item_amount_);
    std::swap(item_weight_, other->item_weight_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    SetDirty(), other->SetDirty();
  }
}

::google::protobuf::Metadata ItemPackageElement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemPackageElement_descriptor_;
  metadata.reflection = ItemPackageElement_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemDropGroup::kGroupFieldNumber;
const int ItemDropGroup::kItemFieldNumber;
#endif  // !_MSC_VER

ItemDropGroup::ItemDropGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemDropGroup::InitAsDefaultInstance() {
  item_ = const_cast< ::Config::ItemPackageElement*>(&::Config::ItemPackageElement::default_instance());
}

ItemDropGroup::ItemDropGroup(const ItemDropGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemDropGroup::SharedCtor() {
  _cached_size_ = 0;
  group_ = 0;
  item_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemDropGroup::~ItemDropGroup() {
  SharedDtor();
}

void ItemDropGroup::SharedDtor() {
  if (this != default_instance_) {
    delete item_;
  }
}

void ItemDropGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemDropGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemDropGroup_descriptor_;
}

const ItemDropGroup& ItemDropGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PackageConfig_2eproto();
  return *default_instance_;
}

ItemDropGroup* ItemDropGroup::default_instance_ = NULL;

ItemDropGroup* ItemDropGroup::New() const {
  return new ItemDropGroup;
}

void ItemDropGroup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    group_ = 0;
    if (has_item()) {
      if (item_ != NULL) item_->::Config::ItemPackageElement::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
  SetDirty();
}

bool ItemDropGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 group = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_)));
          set_has_group();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item;
        break;
      }

      // required .Config.ItemPackageElement item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  SetDirty();
  return true;
#undef DO_
}

void ItemDropGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 group = 1;
  if (has_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->group(), output);
  }

  // required .Config.ItemPackageElement item = 2;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemDropGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 group = 1;
  if (has_group()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->group(), target);
  }

  // required .Config.ItemPackageElement item = 2;
  if (has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemDropGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 group = 1;
    if (has_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->group());
    }

    // required .Config.ItemPackageElement item = 2;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemDropGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemDropGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemDropGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
  SetDirty();
}

void ItemDropGroup::MergeFrom(const ItemDropGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_group()) {
      set_group(from.group());
    }
    if (from.has_item()) {
      mutable_item()->::Config::ItemPackageElement::MergeFrom(from.item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  SetDirty();
}

void ItemDropGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

void ItemDropGroup::CopyFrom(const ItemDropGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

bool ItemDropGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_item()) {
    if (!this->item().IsInitialized()) return false;
  }
  return true;
}

void ItemDropGroup::SetInitialized() {
  _has_bits_[0] |= 0x00000003;

  if (has_item()) {
    this->mutable_item()->SetInitialized();
  }
  return;
}

void ItemDropGroup::Swap(ItemDropGroup* other) {
  if (other != this) {
    std::swap(group_, other->group_);
    std::swap(item_, other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    SetDirty(), other->SetDirty();
  }
}

::google::protobuf::Metadata ItemDropGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemDropGroup_descriptor_;
  metadata.reflection = ItemDropGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemPackageConfig::kIdFieldNumber;
const int ItemPackageConfig::kTypeFieldNumber;
const int ItemPackageConfig::kPlayerExpFieldNumber;
const int ItemPackageConfig::kActorExpFieldNumber;
const int ItemPackageConfig::kGoldFieldNumber;
const int ItemPackageConfig::kGemFieldNumber;
const int ItemPackageConfig::kItemsFieldNumber;
const int ItemPackageConfig::kFormationFieldNumber;
const int ItemPackageConfig::kDropGroupFieldNumber;
const int ItemPackageConfig::kWeightFieldNumber;
const int ItemPackageConfig::kDrawLimitFieldNumber;
#endif  // !_MSC_VER

ItemPackageConfig::ItemPackageConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemPackageConfig::InitAsDefaultInstance() {
}

ItemPackageConfig::ItemPackageConfig(const ItemPackageConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemPackageConfig::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  type_ = 1;
  player_exp_ = 0;
  actor_exp_ = 0;
  gold_ = 0;
  gem_ = 0;
  formation_ = 0;
  draw_limit_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemPackageConfig::~ItemPackageConfig() {
  SharedDtor();
}

void ItemPackageConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemPackageConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemPackageConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemPackageConfig_descriptor_;
}

const ItemPackageConfig& ItemPackageConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PackageConfig_2eproto();
  return *default_instance_;
}

ItemPackageConfig* ItemPackageConfig::default_instance_ = NULL;

ItemPackageConfig* ItemPackageConfig::New() const {
  return new ItemPackageConfig;
}

void ItemPackageConfig::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    type_ = 1;
    player_exp_ = 0;
    actor_exp_ = 0;
    gold_ = 0;
    gem_ = 0;
    formation_ = 0;
  }
  if (_has_bits_[10 / 32] & (0xffu << (10 % 32))) {
    draw_limit_ = 0;
  }
  items_.Clear();
  drop_group_.Clear();
  weight_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
  SetDirty();
}

bool ItemPackageConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .Config.ItemPackageType type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Config::ItemPackageType_IsValid(value)) {
            set_type(static_cast< ::Config::ItemPackageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_player_exp;
        break;
      }

      // required int32 player_exp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_exp_)));
          set_has_player_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_actor_exp;
        break;
      }

      // required int32 actor_exp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_actor_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actor_exp_)));
          set_has_actor_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_gold;
        break;
      }

      // required int32 gold = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_gem;
        break;
      }

      // required int32 gem = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gem_)));
          set_has_gem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_items;
        break;
      }

      // repeated .Config.ItemPackageElement items = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_items;
        if (input->ExpectTag(64)) goto parse_formation;
        break;
      }

      // required .Packet.ActorFigthFormation formation = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_formation:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Packet::ActorFigthFormation_IsValid(value)) {
            set_formation(static_cast< ::Packet::ActorFigthFormation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_drop_group;
        break;
      }

      // repeated int32 drop_group = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_drop_group:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 72, input, this->mutable_drop_group())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_drop_group())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_drop_group;
        if (input->ExpectTag(80)) goto parse_weight;
        break;
      }

      // repeated int32 weight = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 80, input, this->mutable_weight())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_weight())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_weight;
        if (input->ExpectTag(88)) goto parse_draw_limit;
        break;
      }

      // required int32 draw_limit = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_draw_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &draw_limit_)));
          set_has_draw_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  SetDirty();
  return true;
#undef DO_
}

void ItemPackageConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required .Config.ItemPackageType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // required int32 player_exp = 3;
  if (has_player_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->player_exp(), output);
  }

  // required int32 actor_exp = 4;
  if (has_actor_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->actor_exp(), output);
  }

  // required int32 gold = 5;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->gold(), output);
  }

  // required int32 gem = 6;
  if (has_gem()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->gem(), output);
  }

  // repeated .Config.ItemPackageElement items = 7;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->items(i), output);
  }

  // required .Packet.ActorFigthFormation formation = 8;
  if (has_formation()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->formation(), output);
  }

  // repeated int32 drop_group = 9;
  for (int i = 0; i < this->drop_group_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      9, this->drop_group(i), output);
  }

  // repeated int32 weight = 10;
  for (int i = 0; i < this->weight_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      10, this->weight(i), output);
  }

  // required int32 draw_limit = 11;
  if (has_draw_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->draw_limit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemPackageConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required .Config.ItemPackageType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // required int32 player_exp = 3;
  if (has_player_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->player_exp(), target);
  }

  // required int32 actor_exp = 4;
  if (has_actor_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->actor_exp(), target);
  }

  // required int32 gold = 5;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->gold(), target);
  }

  // required int32 gem = 6;
  if (has_gem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->gem(), target);
  }

  // repeated .Config.ItemPackageElement items = 7;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->items(i), target);
  }

  // required .Packet.ActorFigthFormation formation = 8;
  if (has_formation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->formation(), target);
  }

  // repeated int32 drop_group = 9;
  for (int i = 0; i < this->drop_group_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(9, this->drop_group(i), target);
  }

  // repeated int32 weight = 10;
  for (int i = 0; i < this->weight_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(10, this->weight(i), target);
  }

  // required int32 draw_limit = 11;
  if (has_draw_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->draw_limit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemPackageConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // required .Config.ItemPackageType type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // required int32 player_exp = 3;
    if (has_player_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_exp());
    }

    // required int32 actor_exp = 4;
    if (has_actor_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->actor_exp());
    }

    // required int32 gold = 5;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }

    // required int32 gem = 6;
    if (has_gem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gem());
    }

    // required .Packet.ActorFigthFormation formation = 8;
    if (has_formation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->formation());
    }

  }
  if (_has_bits_[10 / 32] & (0xffu << (10 % 32))) {
    // required int32 draw_limit = 11;
    if (has_draw_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->draw_limit());
    }

  }
  // repeated .Config.ItemPackageElement items = 7;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  // repeated int32 drop_group = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->drop_group_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->drop_group(i));
    }
    total_size += 1 * this->drop_group_size() + data_size;
  }

  // repeated int32 weight = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->weight_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->weight(i));
    }
    total_size += 1 * this->weight_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemPackageConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemPackageConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemPackageConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
  SetDirty();
}

void ItemPackageConfig::MergeFrom(const ItemPackageConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  drop_group_.MergeFrom(from.drop_group_);
  weight_.MergeFrom(from.weight_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_player_exp()) {
      set_player_exp(from.player_exp());
    }
    if (from.has_actor_exp()) {
      set_actor_exp(from.actor_exp());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_gem()) {
      set_gem(from.gem());
    }
    if (from.has_formation()) {
      set_formation(from.formation());
    }
  }
  if (from._has_bits_[10 / 32] & (0xffu << (10 % 32))) {
    if (from.has_draw_limit()) {
      set_draw_limit(from.draw_limit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  SetDirty();
}

void ItemPackageConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

void ItemPackageConfig::CopyFrom(const ItemPackageConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
  SetDirty();
}

bool ItemPackageConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x000004bf) != 0x000004bf) return false;

  for (int i = 0; i < items_size(); i++) {
    if (!this->items(i).IsInitialized()) return false;
  }
  return true;
}

void ItemPackageConfig::SetInitialized() {
  _has_bits_[0] |= 0x000004bf;

  for (int i = 0; i < items_size(); i++) {
    this->mutable_items(i)->SetInitialized();
  }
  return;
}

void ItemPackageConfig::Swap(ItemPackageConfig* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    std::swap(player_exp_, other->player_exp_);
    std::swap(actor_exp_, other->actor_exp_);
    std::swap(gold_, other->gold_);
    std::swap(gem_, other->gem_);
    items_.Swap(&other->items_);
    std::swap(formation_, other->formation_);
    drop_group_.Swap(&other->drop_group_);
    weight_.Swap(&other->weight_);
    std::swap(draw_limit_, other->draw_limit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    SetDirty(), other->SetDirty();
  }
}

::google::protobuf::Metadata ItemPackageConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemPackageConfig_descriptor_;
  metadata.reflection = ItemPackageConfig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config

// @@protoc_insertion_point(global_scope)

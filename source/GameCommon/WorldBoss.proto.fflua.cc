// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WorldBoss.proto
#include "WorldBoss.pb.h"
#include "WorldBoss.proto.fflua.h"
namespace Packet {
bool WorldBossInfo_fflua_reg(lua_State* state)
{
//for decltype
	WorldBossInfo* message(nullptr);
	message;
	ff::fflua_register_t<WorldBossInfo, ctor()>(state, "WorldBossInfo", "google::protobuf::Message")
		// required int32 bossid = 1;
		.def(&WorldBossInfo::bossid, "bossid")
		.def(&WorldBossInfo::set_bossid, "set_bossid")
		// required int32 bosslevel = 2;
		.def(&WorldBossInfo::bosslevel, "bosslevel")
		.def(&WorldBossInfo::set_bosslevel, "set_bosslevel")
		// required int32 monstergourpid = 3;
		.def(&WorldBossInfo::monstergourpid, "monstergourpid")
		.def(&WorldBossInfo::set_monstergourpid, "set_monstergourpid")
		// required fixed64 hp = 4;
		.def(&WorldBossInfo::hp, "hp")
		.def(&WorldBossInfo::set_hp, "set_hp")
		.def(&WorldBossInfo::ByteSize, "ByteSize")
		.def(&WorldBossInfo::SetInitialized, "SetInitialized")
		;
	return true;
}
bool WorldBossInfoReq_fflua_reg(lua_State* state)
{
//for decltype
	WorldBossInfoReq* message(nullptr);
	message;
	ff::fflua_register_t<WorldBossInfoReq, ctor()>(state, "WorldBossInfoReq", "google::protobuf::Message");
	return true;
}
bool WorldBossInfoReply_fflua_reg(lua_State* state)
{
//for decltype
	WorldBossInfoReply* message(nullptr);
	message;
	ff::fflua_register_t<WorldBossInfoReply, ctor()>(state, "WorldBossInfoReply", "google::protobuf::Message")
		// required .Packet.WorldBossInfo boss = 1;
		.def(&WorldBossInfoReply::boss, "boss")
		.def(&WorldBossInfoReply::mutable_boss, "mutable_boss")
		// required fixed64 allhp = 2;
		.def(&WorldBossInfoReply::allhp, "allhp")
		.def(&WorldBossInfoReply::set_allhp, "set_allhp")
		// required int32 boss_seriesid = 3;
		.def(&WorldBossInfoReply::boss_seriesid, "boss_seriesid")
		.def(&WorldBossInfoReply::set_boss_seriesid, "set_boss_seriesid")
		.def(&WorldBossInfoReply::ByteSize, "ByteSize")
		.def(&WorldBossInfoReply::SetInitialized, "SetInitialized")
		;
	return true;
}
bool WorldBossHpReq_fflua_reg(lua_State* state)
{
//for decltype
	WorldBossHpReq* message(nullptr);
	message;
	ff::fflua_register_t<WorldBossHpReq, ctor()>(state, "WorldBossHpReq", "google::protobuf::Message");
	return true;
}
bool WorldBossHpUpdate_fflua_reg(lua_State* state)
{
//for decltype
	WorldBossHpUpdate* message(nullptr);
	message;
	ff::fflua_register_t<WorldBossHpUpdate, ctor()>(state, "WorldBossHpUpdate", "google::protobuf::Message")
		// required fixed64 hp = 1;
		.def(&WorldBossHpUpdate::hp, "hp")
		.def(&WorldBossHpUpdate::set_hp, "set_hp")
		.def(&WorldBossHpUpdate::ByteSize, "ByteSize")
		.def(&WorldBossHpUpdate::SetInitialized, "SetInitialized")
		;
	return true;
}
bool WorldBossReliveCDUpdate_fflua_reg(lua_State* state)
{
//for decltype
	WorldBossReliveCDUpdate* message(nullptr);
	message;
	ff::fflua_register_t<WorldBossReliveCDUpdate, ctor()>(state, "WorldBossReliveCDUpdate", "google::protobuf::Message")
		// required int32 relivecd = 1;
		.def(&WorldBossReliveCDUpdate::relivecd, "relivecd")
		.def(&WorldBossReliveCDUpdate::set_relivecd, "set_relivecd")
		.def(&WorldBossReliveCDUpdate::ByteSize, "ByteSize")
		.def(&WorldBossReliveCDUpdate::SetInitialized, "SetInitialized")
		;
	return true;
}
bool WorldBossConfig_fflua_reg(lua_State* state)
{
//for decltype
	WorldBossConfig* message(nullptr);
	message;
	ff::fflua_register_t<WorldBossConfig, ctor()>(state, "WorldBossConfig", "google::protobuf::Message")
		// required int32 day = 1;
		.def(&WorldBossConfig::day, "day")
		.def(&WorldBossConfig::set_day, "set_day")
		// required int32 gourpid = 2;
		.def(&WorldBossConfig::gourpid, "gourpid")
		.def(&WorldBossConfig::set_gourpid, "set_gourpid")
		// required int32 reward = 3;
		.def(&WorldBossConfig::reward, "reward")
		.def(&WorldBossConfig::set_reward, "set_reward")
		// required int32 npcid = 4;
		.def(&WorldBossConfig::npcid, "npcid")
		.def(&WorldBossConfig::set_npcid, "set_npcid")
		// required int32 sceneid = 5;
		.def(&WorldBossConfig::sceneid, "sceneid")
		.def(&WorldBossConfig::set_sceneid, "set_sceneid")
		.def(&WorldBossConfig::ByteSize, "ByteSize")
		.def(&WorldBossConfig::SetInitialized, "SetInitialized")
		;
	return true;
}
bool WorldBossRelivenow_fflua_reg(lua_State* state)
{
//for decltype
	WorldBossRelivenow* message(nullptr);
	message;
	ff::fflua_register_t<WorldBossRelivenow, ctor()>(state, "WorldBossRelivenow", "google::protobuf::Message");
	return true;
}
bool WorldBossGoldInspire_fflua_reg(lua_State* state)
{
//for decltype
	WorldBossGoldInspire* message(nullptr);
	message;
	ff::fflua_register_t<WorldBossGoldInspire, ctor()>(state, "WorldBossGoldInspire", "google::protobuf::Message");
	return true;
}
bool WorldBossDiamondInspire_fflua_reg(lua_State* state)
{
//for decltype
	WorldBossDiamondInspire* message(nullptr);
	message;
	ff::fflua_register_t<WorldBossDiamondInspire, ctor()>(state, "WorldBossDiamondInspire", "google::protobuf::Message");
	return true;
}
bool WorldBossStatisticsInfo_fflua_reg(lua_State* state)
{
//for decltype
	WorldBossStatisticsInfo* message(nullptr);
	message;
	ff::fflua_register_t<WorldBossStatisticsInfo, ctor()>(state, "WorldBossStatisticsInfo", "google::protobuf::Message")
		// required fixed64 playerguid = 1;
		.def(&WorldBossStatisticsInfo::playerguid, "playerguid")
		.def(&WorldBossStatisticsInfo::set_playerguid, "set_playerguid")
		// required string playername = 2;
		.def(&WorldBossStatisticsInfo::playername, "playername")
		.def<void (WorldBossStatisticsInfo::*)(const std::string&)>(&WorldBossStatisticsInfo::set_playername, "set_playername")
		// required int32 damagevalue = 3;
		.def(&WorldBossStatisticsInfo::damagevalue, "damagevalue")
		.def(&WorldBossStatisticsInfo::set_damagevalue, "set_damagevalue")
		// required fixed64 allbosshp = 4;
		.def(&WorldBossStatisticsInfo::allbosshp, "allbosshp")
		.def(&WorldBossStatisticsInfo::set_allbosshp, "set_allbosshp")
		.def(&WorldBossStatisticsInfo::ByteSize, "ByteSize")
		.def(&WorldBossStatisticsInfo::SetInitialized, "SetInitialized")
		;
	return true;
}
bool WorldBossStatisticsReq_fflua_reg(lua_State* state)
{
//for decltype
	WorldBossStatisticsReq* message(nullptr);
	message;
	ff::fflua_register_t<WorldBossStatisticsReq, ctor()>(state, "WorldBossStatisticsReq", "google::protobuf::Message");
	return true;
}
bool WorldBossStatisticsReply_fflua_reg(lua_State* state)
{
//for decltype
	WorldBossStatisticsReply* message(nullptr);
	message;
	ff::fflua_register_t<WorldBossStatisticsReply, ctor()>(state, "WorldBossStatisticsReply", "google::protobuf::Message")
		// repeated .Packet.WorldBossStatisticsInfo infos = 1;
		.def(&WorldBossStatisticsReply::infos_size, "infos_size")
		.def<decltype(message->infos(0)) (WorldBossStatisticsReply::*)(int) const>(&WorldBossStatisticsReply::infos, "infos")
		.def<decltype(message->mutable_infos(0)) (WorldBossStatisticsReply::*)(int)>(&WorldBossStatisticsReply::mutable_infos, "mutable_infos")
		.def(&WorldBossStatisticsReply::add_infos, "add_infos")
		// repeated .Packet.ActorDamage selfactordamage = 2;
		.def(&WorldBossStatisticsReply::selfactordamage_size, "selfactordamage_size")
		.def<decltype(message->selfactordamage(0)) (WorldBossStatisticsReply::*)(int) const>(&WorldBossStatisticsReply::selfactordamage, "selfactordamage")
		.def<decltype(message->mutable_selfactordamage(0)) (WorldBossStatisticsReply::*)(int)>(&WorldBossStatisticsReply::mutable_selfactordamage, "mutable_selfactordamage")
		.def(&WorldBossStatisticsReply::add_selfactordamage, "add_selfactordamage")
		.def(&WorldBossStatisticsReply::ByteSize, "ByteSize")
		.def(&WorldBossStatisticsReply::SetInitialized, "SetInitialized")
		;
	return true;
}
bool SetWorldBossAutoFightReq_fflua_reg(lua_State* state)
{
//for decltype
	SetWorldBossAutoFightReq* message(nullptr);
	message;
	ff::fflua_register_t<SetWorldBossAutoFightReq, ctor()>(state, "SetWorldBossAutoFightReq", "google::protobuf::Message")
		// required bool autofight = 1;
		.def(&SetWorldBossAutoFightReq::autofight, "autofight")
		.def(&SetWorldBossAutoFightReq::set_autofight, "set_autofight")
		.def(&SetWorldBossAutoFightReq::ByteSize, "ByteSize")
		.def(&SetWorldBossAutoFightReq::SetInitialized, "SetInitialized")
		;
	return true;
}
bool LeaveWorldBossReq_fflua_reg(lua_State* state)
{
//for decltype
	LeaveWorldBossReq* message(nullptr);
	message;
	ff::fflua_register_t<LeaveWorldBossReq, ctor()>(state, "LeaveWorldBossReq", "google::protobuf::Message");
	return true;
}
bool WorldBoss_fflua_regist_all(lua_State* state)
{
	WorldBossInfo_fflua_reg(state);
	WorldBossInfoReq_fflua_reg(state);
	WorldBossInfoReply_fflua_reg(state);
	WorldBossHpReq_fflua_reg(state);
	WorldBossHpUpdate_fflua_reg(state);
	WorldBossReliveCDUpdate_fflua_reg(state);
	WorldBossConfig_fflua_reg(state);
	WorldBossRelivenow_fflua_reg(state);
	WorldBossGoldInspire_fflua_reg(state);
	WorldBossDiamondInspire_fflua_reg(state);
	WorldBossStatisticsInfo_fflua_reg(state);
	WorldBossStatisticsReq_fflua_reg(state);
	WorldBossStatisticsReply_fflua_reg(state);
	SetWorldBossAutoFightReq_fflua_reg(state);
	LeaveWorldBossReq_fflua_reg(state);
	return true;
}
}

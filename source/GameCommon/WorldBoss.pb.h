// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WorldBoss.proto

#ifndef PROTOBUF_WorldBoss_2eproto__INCLUDED
#define PROTOBUF_WorldBoss_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PlayerBasicInfo.pb.h"
#include "ItemAndEquip.pb.h"
#include "BattleExpression.pb.h"
#include "ProtoBufOption.pb.h"
// @@protoc_insertion_point(includes)

namespace Packet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_WorldBoss_2eproto();
void protobuf_AssignDesc_WorldBoss_2eproto();
void protobuf_ShutdownFile_WorldBoss_2eproto();

class WorldBossInfo;
class WorldBossInfoReq;
class WorldBossInfoReply;
class WorldBossHpReq;
class WorldBossHpUpdate;
class WorldBossReliveCDUpdate;
class WorldBossConfig;
class WorldBossRelivenow;
class WorldBossGoldInspire;
class WorldBossDiamondInspire;
class WorldBossStatisticsInfo;
class WorldBossStatisticsReq;
class WorldBossStatisticsReply;
class SetWorldBossAutoFightReq;
class LeaveWorldBossReq;

// ===================================================================

class WorldBossInfo : public ::google::protobuf::Message {
 public:
  WorldBossInfo();
  virtual ~WorldBossInfo();

  WorldBossInfo(const WorldBossInfo& from);

  inline WorldBossInfo& operator=(const WorldBossInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossInfo& default_instance();

  void Swap(WorldBossInfo* other);

  // implements Message ----------------------------------------------

  WorldBossInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBossInfo& from);
  void MergeFrom(const WorldBossInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 bossid = 1;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossidFieldNumber = 1;
  inline ::google::protobuf::int32 bossid() const;
  inline void set_bossid(::google::protobuf::int32 value);

  // required int32 bosslevel = 2;
  inline bool has_bosslevel() const;
  inline void clear_bosslevel();
  static const int kBosslevelFieldNumber = 2;
  inline ::google::protobuf::int32 bosslevel() const;
  inline void set_bosslevel(::google::protobuf::int32 value);

  // required int32 monstergourpid = 3;
  inline bool has_monstergourpid() const;
  inline void clear_monstergourpid();
  static const int kMonstergourpidFieldNumber = 3;
  inline ::google::protobuf::int32 monstergourpid() const;
  inline void set_monstergourpid(::google::protobuf::int32 value);

  // required fixed64 hp = 4;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 4;
  inline ::google::protobuf::uint64 hp() const;
  inline void set_hp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.WorldBossInfo)
 private:
  inline void set_has_bossid();
  inline void clear_has_bossid();
  inline void set_has_bosslevel();
  inline void clear_has_bosslevel();
  inline void set_has_monstergourpid();
  inline void clear_has_monstergourpid();
  inline void set_has_hp();
  inline void clear_has_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bossid_;
  ::google::protobuf::int32 bosslevel_;
  ::google::protobuf::uint64 hp_;
  ::google::protobuf::int32 monstergourpid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_WorldBoss_2eproto();
  friend void protobuf_AssignDesc_WorldBoss_2eproto();
  friend void protobuf_ShutdownFile_WorldBoss_2eproto();

  void InitAsDefaultInstance();
  static WorldBossInfo* default_instance_;
};
// -------------------------------------------------------------------

class WorldBossInfoReq : public ::google::protobuf::Message {
 public:
  WorldBossInfoReq();
  virtual ~WorldBossInfoReq();

  WorldBossInfoReq(const WorldBossInfoReq& from);

  inline WorldBossInfoReq& operator=(const WorldBossInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossInfoReq& default_instance();

  void Swap(WorldBossInfoReq* other);

  // implements Message ----------------------------------------------

  WorldBossInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBossInfoReq& from);
  void MergeFrom(const WorldBossInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.WorldBossInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_WorldBoss_2eproto();
  friend void protobuf_AssignDesc_WorldBoss_2eproto();
  friend void protobuf_ShutdownFile_WorldBoss_2eproto();

  void InitAsDefaultInstance();
  static WorldBossInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class WorldBossInfoReply : public ::google::protobuf::Message {
 public:
  WorldBossInfoReply();
  virtual ~WorldBossInfoReply();

  WorldBossInfoReply(const WorldBossInfoReply& from);

  inline WorldBossInfoReply& operator=(const WorldBossInfoReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossInfoReply& default_instance();

  void Swap(WorldBossInfoReply* other);

  // implements Message ----------------------------------------------

  WorldBossInfoReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBossInfoReply& from);
  void MergeFrom(const WorldBossInfoReply& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.WorldBossInfo boss = 1;
  inline bool has_boss() const;
  inline void clear_boss();
  static const int kBossFieldNumber = 1;
  inline const ::Packet::WorldBossInfo& boss() const;
  inline ::Packet::WorldBossInfo* mutable_boss();
  inline ::Packet::WorldBossInfo* release_boss();
  inline void set_allocated_boss(::Packet::WorldBossInfo* boss);

  // required fixed64 allhp = 2;
  inline bool has_allhp() const;
  inline void clear_allhp();
  static const int kAllhpFieldNumber = 2;
  inline ::google::protobuf::uint64 allhp() const;
  inline void set_allhp(::google::protobuf::uint64 value);

  // required int32 boss_seriesid = 3;
  inline bool has_boss_seriesid() const;
  inline void clear_boss_seriesid();
  static const int kBossSeriesidFieldNumber = 3;
  inline ::google::protobuf::int32 boss_seriesid() const;
  inline void set_boss_seriesid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.WorldBossInfoReply)
 private:
  inline void set_has_boss();
  inline void clear_has_boss();
  inline void set_has_allhp();
  inline void clear_has_allhp();
  inline void set_has_boss_seriesid();
  inline void clear_has_boss_seriesid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::WorldBossInfo* boss_;
  ::google::protobuf::uint64 allhp_;
  ::google::protobuf::int32 boss_seriesid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_WorldBoss_2eproto();
  friend void protobuf_AssignDesc_WorldBoss_2eproto();
  friend void protobuf_ShutdownFile_WorldBoss_2eproto();

  void InitAsDefaultInstance();
  static WorldBossInfoReply* default_instance_;
};
// -------------------------------------------------------------------

class WorldBossHpReq : public ::google::protobuf::Message {
 public:
  WorldBossHpReq();
  virtual ~WorldBossHpReq();

  WorldBossHpReq(const WorldBossHpReq& from);

  inline WorldBossHpReq& operator=(const WorldBossHpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossHpReq& default_instance();

  void Swap(WorldBossHpReq* other);

  // implements Message ----------------------------------------------

  WorldBossHpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBossHpReq& from);
  void MergeFrom(const WorldBossHpReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.WorldBossHpReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_WorldBoss_2eproto();
  friend void protobuf_AssignDesc_WorldBoss_2eproto();
  friend void protobuf_ShutdownFile_WorldBoss_2eproto();

  void InitAsDefaultInstance();
  static WorldBossHpReq* default_instance_;
};
// -------------------------------------------------------------------

class WorldBossHpUpdate : public ::google::protobuf::Message {
 public:
  WorldBossHpUpdate();
  virtual ~WorldBossHpUpdate();

  WorldBossHpUpdate(const WorldBossHpUpdate& from);

  inline WorldBossHpUpdate& operator=(const WorldBossHpUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossHpUpdate& default_instance();

  void Swap(WorldBossHpUpdate* other);

  // implements Message ----------------------------------------------

  WorldBossHpUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBossHpUpdate& from);
  void MergeFrom(const WorldBossHpUpdate& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 hp = 1;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 1;
  inline ::google::protobuf::uint64 hp() const;
  inline void set_hp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.WorldBossHpUpdate)
 private:
  inline void set_has_hp();
  inline void clear_has_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 hp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_WorldBoss_2eproto();
  friend void protobuf_AssignDesc_WorldBoss_2eproto();
  friend void protobuf_ShutdownFile_WorldBoss_2eproto();

  void InitAsDefaultInstance();
  static WorldBossHpUpdate* default_instance_;
};
// -------------------------------------------------------------------

class WorldBossReliveCDUpdate : public ::google::protobuf::Message {
 public:
  WorldBossReliveCDUpdate();
  virtual ~WorldBossReliveCDUpdate();

  WorldBossReliveCDUpdate(const WorldBossReliveCDUpdate& from);

  inline WorldBossReliveCDUpdate& operator=(const WorldBossReliveCDUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossReliveCDUpdate& default_instance();

  void Swap(WorldBossReliveCDUpdate* other);

  // implements Message ----------------------------------------------

  WorldBossReliveCDUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBossReliveCDUpdate& from);
  void MergeFrom(const WorldBossReliveCDUpdate& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 relivecd = 1;
  inline bool has_relivecd() const;
  inline void clear_relivecd();
  static const int kRelivecdFieldNumber = 1;
  inline ::google::protobuf::int32 relivecd() const;
  inline void set_relivecd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.WorldBossReliveCDUpdate)
 private:
  inline void set_has_relivecd();
  inline void clear_has_relivecd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 relivecd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_WorldBoss_2eproto();
  friend void protobuf_AssignDesc_WorldBoss_2eproto();
  friend void protobuf_ShutdownFile_WorldBoss_2eproto();

  void InitAsDefaultInstance();
  static WorldBossReliveCDUpdate* default_instance_;
};
// -------------------------------------------------------------------

class WorldBossConfig : public ::google::protobuf::Message {
 public:
  WorldBossConfig();
  virtual ~WorldBossConfig();

  WorldBossConfig(const WorldBossConfig& from);

  inline WorldBossConfig& operator=(const WorldBossConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossConfig& default_instance();

  void Swap(WorldBossConfig* other);

  // implements Message ----------------------------------------------

  WorldBossConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBossConfig& from);
  void MergeFrom(const WorldBossConfig& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::int32 day() const;
  inline void set_day(::google::protobuf::int32 value);

  // required int32 gourpid = 2;
  inline bool has_gourpid() const;
  inline void clear_gourpid();
  static const int kGourpidFieldNumber = 2;
  inline ::google::protobuf::int32 gourpid() const;
  inline void set_gourpid(::google::protobuf::int32 value);

  // required int32 reward = 3;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline ::google::protobuf::int32 reward() const;
  inline void set_reward(::google::protobuf::int32 value);

  // required int32 npcid = 4;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcidFieldNumber = 4;
  inline ::google::protobuf::int32 npcid() const;
  inline void set_npcid(::google::protobuf::int32 value);

  // required int32 sceneid = 5;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 5;
  inline ::google::protobuf::int32 sceneid() const;
  inline void set_sceneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.WorldBossConfig)
 private:
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_gourpid();
  inline void clear_has_gourpid();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_npcid();
  inline void clear_has_npcid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 day_;
  ::google::protobuf::int32 gourpid_;
  ::google::protobuf::int32 reward_;
  ::google::protobuf::int32 npcid_;
  ::google::protobuf::int32 sceneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_WorldBoss_2eproto();
  friend void protobuf_AssignDesc_WorldBoss_2eproto();
  friend void protobuf_ShutdownFile_WorldBoss_2eproto();

  void InitAsDefaultInstance();
  static WorldBossConfig* default_instance_;
};
// -------------------------------------------------------------------

class WorldBossRelivenow : public ::google::protobuf::Message {
 public:
  WorldBossRelivenow();
  virtual ~WorldBossRelivenow();

  WorldBossRelivenow(const WorldBossRelivenow& from);

  inline WorldBossRelivenow& operator=(const WorldBossRelivenow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossRelivenow& default_instance();

  void Swap(WorldBossRelivenow* other);

  // implements Message ----------------------------------------------

  WorldBossRelivenow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBossRelivenow& from);
  void MergeFrom(const WorldBossRelivenow& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.WorldBossRelivenow)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_WorldBoss_2eproto();
  friend void protobuf_AssignDesc_WorldBoss_2eproto();
  friend void protobuf_ShutdownFile_WorldBoss_2eproto();

  void InitAsDefaultInstance();
  static WorldBossRelivenow* default_instance_;
};
// -------------------------------------------------------------------

class WorldBossGoldInspire : public ::google::protobuf::Message {
 public:
  WorldBossGoldInspire();
  virtual ~WorldBossGoldInspire();

  WorldBossGoldInspire(const WorldBossGoldInspire& from);

  inline WorldBossGoldInspire& operator=(const WorldBossGoldInspire& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossGoldInspire& default_instance();

  void Swap(WorldBossGoldInspire* other);

  // implements Message ----------------------------------------------

  WorldBossGoldInspire* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBossGoldInspire& from);
  void MergeFrom(const WorldBossGoldInspire& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.WorldBossGoldInspire)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_WorldBoss_2eproto();
  friend void protobuf_AssignDesc_WorldBoss_2eproto();
  friend void protobuf_ShutdownFile_WorldBoss_2eproto();

  void InitAsDefaultInstance();
  static WorldBossGoldInspire* default_instance_;
};
// -------------------------------------------------------------------

class WorldBossDiamondInspire : public ::google::protobuf::Message {
 public:
  WorldBossDiamondInspire();
  virtual ~WorldBossDiamondInspire();

  WorldBossDiamondInspire(const WorldBossDiamondInspire& from);

  inline WorldBossDiamondInspire& operator=(const WorldBossDiamondInspire& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossDiamondInspire& default_instance();

  void Swap(WorldBossDiamondInspire* other);

  // implements Message ----------------------------------------------

  WorldBossDiamondInspire* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBossDiamondInspire& from);
  void MergeFrom(const WorldBossDiamondInspire& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.WorldBossDiamondInspire)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_WorldBoss_2eproto();
  friend void protobuf_AssignDesc_WorldBoss_2eproto();
  friend void protobuf_ShutdownFile_WorldBoss_2eproto();

  void InitAsDefaultInstance();
  static WorldBossDiamondInspire* default_instance_;
};
// -------------------------------------------------------------------

class WorldBossStatisticsInfo : public ::google::protobuf::Message {
 public:
  WorldBossStatisticsInfo();
  virtual ~WorldBossStatisticsInfo();

  WorldBossStatisticsInfo(const WorldBossStatisticsInfo& from);

  inline WorldBossStatisticsInfo& operator=(const WorldBossStatisticsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossStatisticsInfo& default_instance();

  void Swap(WorldBossStatisticsInfo* other);

  // implements Message ----------------------------------------------

  WorldBossStatisticsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBossStatisticsInfo& from);
  void MergeFrom(const WorldBossStatisticsInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 playerguid = 1;
  inline bool has_playerguid() const;
  inline void clear_playerguid();
  static const int kPlayerguidFieldNumber = 1;
  inline ::google::protobuf::uint64 playerguid() const;
  inline void set_playerguid(::google::protobuf::uint64 value);

  // required string playername = 2;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 2;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // required int32 damagevalue = 3;
  inline bool has_damagevalue() const;
  inline void clear_damagevalue();
  static const int kDamagevalueFieldNumber = 3;
  inline ::google::protobuf::int32 damagevalue() const;
  inline void set_damagevalue(::google::protobuf::int32 value);

  // required fixed64 allbosshp = 4;
  inline bool has_allbosshp() const;
  inline void clear_allbosshp();
  static const int kAllbosshpFieldNumber = 4;
  inline ::google::protobuf::uint64 allbosshp() const;
  inline void set_allbosshp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Packet.WorldBossStatisticsInfo)
 private:
  inline void set_has_playerguid();
  inline void clear_has_playerguid();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_damagevalue();
  inline void clear_has_damagevalue();
  inline void set_has_allbosshp();
  inline void clear_has_allbosshp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerguid_;
  ::std::string* playername_;
  ::google::protobuf::uint64 allbosshp_;
  ::google::protobuf::int32 damagevalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_WorldBoss_2eproto();
  friend void protobuf_AssignDesc_WorldBoss_2eproto();
  friend void protobuf_ShutdownFile_WorldBoss_2eproto();

  void InitAsDefaultInstance();
  static WorldBossStatisticsInfo* default_instance_;
};
// -------------------------------------------------------------------

class WorldBossStatisticsReq : public ::google::protobuf::Message {
 public:
  WorldBossStatisticsReq();
  virtual ~WorldBossStatisticsReq();

  WorldBossStatisticsReq(const WorldBossStatisticsReq& from);

  inline WorldBossStatisticsReq& operator=(const WorldBossStatisticsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossStatisticsReq& default_instance();

  void Swap(WorldBossStatisticsReq* other);

  // implements Message ----------------------------------------------

  WorldBossStatisticsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBossStatisticsReq& from);
  void MergeFrom(const WorldBossStatisticsReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.WorldBossStatisticsReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_WorldBoss_2eproto();
  friend void protobuf_AssignDesc_WorldBoss_2eproto();
  friend void protobuf_ShutdownFile_WorldBoss_2eproto();

  void InitAsDefaultInstance();
  static WorldBossStatisticsReq* default_instance_;
};
// -------------------------------------------------------------------

class WorldBossStatisticsReply : public ::google::protobuf::Message {
 public:
  WorldBossStatisticsReply();
  virtual ~WorldBossStatisticsReply();

  WorldBossStatisticsReply(const WorldBossStatisticsReply& from);

  inline WorldBossStatisticsReply& operator=(const WorldBossStatisticsReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossStatisticsReply& default_instance();

  void Swap(WorldBossStatisticsReply* other);

  // implements Message ----------------------------------------------

  WorldBossStatisticsReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBossStatisticsReply& from);
  void MergeFrom(const WorldBossStatisticsReply& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.WorldBossStatisticsInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::Packet::WorldBossStatisticsInfo& infos(int index) const;
  inline ::Packet::WorldBossStatisticsInfo* mutable_infos(int index);
  inline ::Packet::WorldBossStatisticsInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::WorldBossStatisticsInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::WorldBossStatisticsInfo >*
      mutable_infos();

  // repeated .Packet.ActorDamage selfactordamage = 2;
  inline int selfactordamage_size() const;
  inline void clear_selfactordamage();
  static const int kSelfactordamageFieldNumber = 2;
  inline const ::Packet::ActorDamage& selfactordamage(int index) const;
  inline ::Packet::ActorDamage* mutable_selfactordamage(int index);
  inline ::Packet::ActorDamage* add_selfactordamage();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorDamage >&
      selfactordamage() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorDamage >*
      mutable_selfactordamage();

  // @@protoc_insertion_point(class_scope:Packet.WorldBossStatisticsReply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::WorldBossStatisticsInfo > infos_;
  ::google::protobuf::RepeatedPtrField< ::Packet::ActorDamage > selfactordamage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_WorldBoss_2eproto();
  friend void protobuf_AssignDesc_WorldBoss_2eproto();
  friend void protobuf_ShutdownFile_WorldBoss_2eproto();

  void InitAsDefaultInstance();
  static WorldBossStatisticsReply* default_instance_;
};
// -------------------------------------------------------------------

class SetWorldBossAutoFightReq : public ::google::protobuf::Message {
 public:
  SetWorldBossAutoFightReq();
  virtual ~SetWorldBossAutoFightReq();

  SetWorldBossAutoFightReq(const SetWorldBossAutoFightReq& from);

  inline SetWorldBossAutoFightReq& operator=(const SetWorldBossAutoFightReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetWorldBossAutoFightReq& default_instance();

  void Swap(SetWorldBossAutoFightReq* other);

  // implements Message ----------------------------------------------

  SetWorldBossAutoFightReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetWorldBossAutoFightReq& from);
  void MergeFrom(const SetWorldBossAutoFightReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool autofight = 1;
  inline bool has_autofight() const;
  inline void clear_autofight();
  static const int kAutofightFieldNumber = 1;
  inline bool autofight() const;
  inline void set_autofight(bool value);

  // @@protoc_insertion_point(class_scope:Packet.SetWorldBossAutoFightReq)
 private:
  inline void set_has_autofight();
  inline void clear_has_autofight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool autofight_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_WorldBoss_2eproto();
  friend void protobuf_AssignDesc_WorldBoss_2eproto();
  friend void protobuf_ShutdownFile_WorldBoss_2eproto();

  void InitAsDefaultInstance();
  static SetWorldBossAutoFightReq* default_instance_;
};
// -------------------------------------------------------------------

class LeaveWorldBossReq : public ::google::protobuf::Message {
 public:
  LeaveWorldBossReq();
  virtual ~LeaveWorldBossReq();

  LeaveWorldBossReq(const LeaveWorldBossReq& from);

  inline LeaveWorldBossReq& operator=(const LeaveWorldBossReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveWorldBossReq& default_instance();

  void Swap(LeaveWorldBossReq* other);

  // implements Message ----------------------------------------------

  LeaveWorldBossReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaveWorldBossReq& from);
  void MergeFrom(const LeaveWorldBossReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.LeaveWorldBossReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_WorldBoss_2eproto();
  friend void protobuf_AssignDesc_WorldBoss_2eproto();
  friend void protobuf_ShutdownFile_WorldBoss_2eproto();

  void InitAsDefaultInstance();
  static LeaveWorldBossReq* default_instance_;
};
// ===================================================================


// ===================================================================

// WorldBossInfo

// required int32 bossid = 1;
inline bool WorldBossInfo::has_bossid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldBossInfo::set_has_bossid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldBossInfo::clear_has_bossid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldBossInfo::clear_bossid() {
  bossid_ = 0;
  clear_has_bossid();
  SetDirty();
}
inline ::google::protobuf::int32 WorldBossInfo::bossid() const {
  return bossid_;
}
inline void WorldBossInfo::set_bossid(::google::protobuf::int32 value) {
  SetDirty();
  set_has_bossid();
  bossid_ = value;
}

// required int32 bosslevel = 2;
inline bool WorldBossInfo::has_bosslevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldBossInfo::set_has_bosslevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldBossInfo::clear_has_bosslevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldBossInfo::clear_bosslevel() {
  bosslevel_ = 0;
  clear_has_bosslevel();
  SetDirty();
}
inline ::google::protobuf::int32 WorldBossInfo::bosslevel() const {
  return bosslevel_;
}
inline void WorldBossInfo::set_bosslevel(::google::protobuf::int32 value) {
  SetDirty();
  set_has_bosslevel();
  bosslevel_ = value;
}

// required int32 monstergourpid = 3;
inline bool WorldBossInfo::has_monstergourpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldBossInfo::set_has_monstergourpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldBossInfo::clear_has_monstergourpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldBossInfo::clear_monstergourpid() {
  monstergourpid_ = 0;
  clear_has_monstergourpid();
  SetDirty();
}
inline ::google::protobuf::int32 WorldBossInfo::monstergourpid() const {
  return monstergourpid_;
}
inline void WorldBossInfo::set_monstergourpid(::google::protobuf::int32 value) {
  SetDirty();
  set_has_monstergourpid();
  monstergourpid_ = value;
}

// required fixed64 hp = 4;
inline bool WorldBossInfo::has_hp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldBossInfo::set_has_hp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldBossInfo::clear_has_hp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldBossInfo::clear_hp() {
  hp_ = GOOGLE_ULONGLONG(0);
  clear_has_hp();
  SetDirty();
}
inline ::google::protobuf::uint64 WorldBossInfo::hp() const {
  return hp_;
}
inline void WorldBossInfo::set_hp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_hp();
  hp_ = value;
}

// -------------------------------------------------------------------

// WorldBossInfoReq

// -------------------------------------------------------------------

// WorldBossInfoReply

// required .Packet.WorldBossInfo boss = 1;
inline bool WorldBossInfoReply::has_boss() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldBossInfoReply::set_has_boss() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldBossInfoReply::clear_has_boss() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldBossInfoReply::clear_boss() {
  if (boss_ != NULL) boss_->::Packet::WorldBossInfo::Clear();
  clear_has_boss();
  SetDirty();
}
inline const ::Packet::WorldBossInfo& WorldBossInfoReply::boss() const {
  return boss_ != NULL ? *boss_ : *default_instance_->boss_;
}
inline ::Packet::WorldBossInfo* WorldBossInfoReply::mutable_boss() {
  SetDirty();
  set_has_boss();
  if (boss_ == NULL) boss_ = new ::Packet::WorldBossInfo;
  return boss_;
}
inline ::Packet::WorldBossInfo* WorldBossInfoReply::release_boss() {
  SetDirty();
  clear_has_boss();
  ::Packet::WorldBossInfo* temp = boss_;
  boss_ = NULL;
  return temp;
}
inline void WorldBossInfoReply::set_allocated_boss(::Packet::WorldBossInfo* boss) {
  SetDirty();
  delete boss_;
  boss_ = boss;
  if (boss) {
    set_has_boss();
  } else {
    clear_has_boss();
  }
}

// required fixed64 allhp = 2;
inline bool WorldBossInfoReply::has_allhp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldBossInfoReply::set_has_allhp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldBossInfoReply::clear_has_allhp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldBossInfoReply::clear_allhp() {
  allhp_ = GOOGLE_ULONGLONG(0);
  clear_has_allhp();
  SetDirty();
}
inline ::google::protobuf::uint64 WorldBossInfoReply::allhp() const {
  return allhp_;
}
inline void WorldBossInfoReply::set_allhp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_allhp();
  allhp_ = value;
}

// required int32 boss_seriesid = 3;
inline bool WorldBossInfoReply::has_boss_seriesid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldBossInfoReply::set_has_boss_seriesid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldBossInfoReply::clear_has_boss_seriesid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldBossInfoReply::clear_boss_seriesid() {
  boss_seriesid_ = 0;
  clear_has_boss_seriesid();
  SetDirty();
}
inline ::google::protobuf::int32 WorldBossInfoReply::boss_seriesid() const {
  return boss_seriesid_;
}
inline void WorldBossInfoReply::set_boss_seriesid(::google::protobuf::int32 value) {
  SetDirty();
  set_has_boss_seriesid();
  boss_seriesid_ = value;
}

// -------------------------------------------------------------------

// WorldBossHpReq

// -------------------------------------------------------------------

// WorldBossHpUpdate

// required fixed64 hp = 1;
inline bool WorldBossHpUpdate::has_hp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldBossHpUpdate::set_has_hp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldBossHpUpdate::clear_has_hp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldBossHpUpdate::clear_hp() {
  hp_ = GOOGLE_ULONGLONG(0);
  clear_has_hp();
  SetDirty();
}
inline ::google::protobuf::uint64 WorldBossHpUpdate::hp() const {
  return hp_;
}
inline void WorldBossHpUpdate::set_hp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_hp();
  hp_ = value;
}

// -------------------------------------------------------------------

// WorldBossReliveCDUpdate

// required int32 relivecd = 1;
inline bool WorldBossReliveCDUpdate::has_relivecd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldBossReliveCDUpdate::set_has_relivecd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldBossReliveCDUpdate::clear_has_relivecd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldBossReliveCDUpdate::clear_relivecd() {
  relivecd_ = 0;
  clear_has_relivecd();
  SetDirty();
}
inline ::google::protobuf::int32 WorldBossReliveCDUpdate::relivecd() const {
  return relivecd_;
}
inline void WorldBossReliveCDUpdate::set_relivecd(::google::protobuf::int32 value) {
  SetDirty();
  set_has_relivecd();
  relivecd_ = value;
}

// -------------------------------------------------------------------

// WorldBossConfig

// required int32 day = 1;
inline bool WorldBossConfig::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldBossConfig::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldBossConfig::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldBossConfig::clear_day() {
  day_ = 0;
  clear_has_day();
  SetDirty();
}
inline ::google::protobuf::int32 WorldBossConfig::day() const {
  return day_;
}
inline void WorldBossConfig::set_day(::google::protobuf::int32 value) {
  SetDirty();
  set_has_day();
  day_ = value;
}

// required int32 gourpid = 2;
inline bool WorldBossConfig::has_gourpid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldBossConfig::set_has_gourpid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldBossConfig::clear_has_gourpid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldBossConfig::clear_gourpid() {
  gourpid_ = 0;
  clear_has_gourpid();
  SetDirty();
}
inline ::google::protobuf::int32 WorldBossConfig::gourpid() const {
  return gourpid_;
}
inline void WorldBossConfig::set_gourpid(::google::protobuf::int32 value) {
  SetDirty();
  set_has_gourpid();
  gourpid_ = value;
}

// required int32 reward = 3;
inline bool WorldBossConfig::has_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldBossConfig::set_has_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldBossConfig::clear_has_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldBossConfig::clear_reward() {
  reward_ = 0;
  clear_has_reward();
  SetDirty();
}
inline ::google::protobuf::int32 WorldBossConfig::reward() const {
  return reward_;
}
inline void WorldBossConfig::set_reward(::google::protobuf::int32 value) {
  SetDirty();
  set_has_reward();
  reward_ = value;
}

// required int32 npcid = 4;
inline bool WorldBossConfig::has_npcid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldBossConfig::set_has_npcid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldBossConfig::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldBossConfig::clear_npcid() {
  npcid_ = 0;
  clear_has_npcid();
  SetDirty();
}
inline ::google::protobuf::int32 WorldBossConfig::npcid() const {
  return npcid_;
}
inline void WorldBossConfig::set_npcid(::google::protobuf::int32 value) {
  SetDirty();
  set_has_npcid();
  npcid_ = value;
}

// required int32 sceneid = 5;
inline bool WorldBossConfig::has_sceneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldBossConfig::set_has_sceneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldBossConfig::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldBossConfig::clear_sceneid() {
  sceneid_ = 0;
  clear_has_sceneid();
  SetDirty();
}
inline ::google::protobuf::int32 WorldBossConfig::sceneid() const {
  return sceneid_;
}
inline void WorldBossConfig::set_sceneid(::google::protobuf::int32 value) {
  SetDirty();
  set_has_sceneid();
  sceneid_ = value;
}

// -------------------------------------------------------------------

// WorldBossRelivenow

// -------------------------------------------------------------------

// WorldBossGoldInspire

// -------------------------------------------------------------------

// WorldBossDiamondInspire

// -------------------------------------------------------------------

// WorldBossStatisticsInfo

// required fixed64 playerguid = 1;
inline bool WorldBossStatisticsInfo::has_playerguid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldBossStatisticsInfo::set_has_playerguid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldBossStatisticsInfo::clear_has_playerguid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldBossStatisticsInfo::clear_playerguid() {
  playerguid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerguid();
  SetDirty();
}
inline ::google::protobuf::uint64 WorldBossStatisticsInfo::playerguid() const {
  return playerguid_;
}
inline void WorldBossStatisticsInfo::set_playerguid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_playerguid();
  playerguid_ = value;
}

// required string playername = 2;
inline bool WorldBossStatisticsInfo::has_playername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldBossStatisticsInfo::set_has_playername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldBossStatisticsInfo::clear_has_playername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldBossStatisticsInfo::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
  SetDirty();
}
inline const ::std::string& WorldBossStatisticsInfo::playername() const {
  return *playername_;
}
inline void WorldBossStatisticsInfo::set_playername(const ::std::string& value) {
  SetDirty();
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void WorldBossStatisticsInfo::set_playername(const char* value) {
  SetDirty();
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void WorldBossStatisticsInfo::set_playername(const char* value, size_t size) {
  SetDirty();
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WorldBossStatisticsInfo::mutable_playername() {
  SetDirty();
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* WorldBossStatisticsInfo::release_playername() {
  SetDirty();
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WorldBossStatisticsInfo::set_allocated_playername(::std::string* playername) {
  SetDirty();
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 damagevalue = 3;
inline bool WorldBossStatisticsInfo::has_damagevalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldBossStatisticsInfo::set_has_damagevalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldBossStatisticsInfo::clear_has_damagevalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldBossStatisticsInfo::clear_damagevalue() {
  damagevalue_ = 0;
  clear_has_damagevalue();
  SetDirty();
}
inline ::google::protobuf::int32 WorldBossStatisticsInfo::damagevalue() const {
  return damagevalue_;
}
inline void WorldBossStatisticsInfo::set_damagevalue(::google::protobuf::int32 value) {
  SetDirty();
  set_has_damagevalue();
  damagevalue_ = value;
}

// required fixed64 allbosshp = 4;
inline bool WorldBossStatisticsInfo::has_allbosshp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldBossStatisticsInfo::set_has_allbosshp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldBossStatisticsInfo::clear_has_allbosshp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldBossStatisticsInfo::clear_allbosshp() {
  allbosshp_ = GOOGLE_ULONGLONG(0);
  clear_has_allbosshp();
  SetDirty();
}
inline ::google::protobuf::uint64 WorldBossStatisticsInfo::allbosshp() const {
  return allbosshp_;
}
inline void WorldBossStatisticsInfo::set_allbosshp(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_allbosshp();
  allbosshp_ = value;
}

// -------------------------------------------------------------------

// WorldBossStatisticsReq

// -------------------------------------------------------------------

// WorldBossStatisticsReply

// repeated .Packet.WorldBossStatisticsInfo infos = 1;
inline int WorldBossStatisticsReply::infos_size() const {
  return infos_.size();
}
inline void WorldBossStatisticsReply::clear_infos() {
  infos_.Clear();
  SetDirty();
}
inline const ::Packet::WorldBossStatisticsInfo& WorldBossStatisticsReply::infos(int index) const {
  return infos_.Get(index);
}
inline ::Packet::WorldBossStatisticsInfo* WorldBossStatisticsReply::mutable_infos(int index) {
  SetDirty();
  return infos_.Mutable(index);
}
inline ::Packet::WorldBossStatisticsInfo* WorldBossStatisticsReply::add_infos() {
  SetDirty();
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::WorldBossStatisticsInfo >&
WorldBossStatisticsReply::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::WorldBossStatisticsInfo >*
WorldBossStatisticsReply::mutable_infos() {
  SetDirty();
  return &infos_;
}

// repeated .Packet.ActorDamage selfactordamage = 2;
inline int WorldBossStatisticsReply::selfactordamage_size() const {
  return selfactordamage_.size();
}
inline void WorldBossStatisticsReply::clear_selfactordamage() {
  selfactordamage_.Clear();
  SetDirty();
}
inline const ::Packet::ActorDamage& WorldBossStatisticsReply::selfactordamage(int index) const {
  return selfactordamage_.Get(index);
}
inline ::Packet::ActorDamage* WorldBossStatisticsReply::mutable_selfactordamage(int index) {
  SetDirty();
  return selfactordamage_.Mutable(index);
}
inline ::Packet::ActorDamage* WorldBossStatisticsReply::add_selfactordamage() {
  SetDirty();
  return selfactordamage_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorDamage >&
WorldBossStatisticsReply::selfactordamage() const {
  return selfactordamage_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorDamage >*
WorldBossStatisticsReply::mutable_selfactordamage() {
  SetDirty();
  return &selfactordamage_;
}

// -------------------------------------------------------------------

// SetWorldBossAutoFightReq

// required bool autofight = 1;
inline bool SetWorldBossAutoFightReq::has_autofight() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetWorldBossAutoFightReq::set_has_autofight() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetWorldBossAutoFightReq::clear_has_autofight() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetWorldBossAutoFightReq::clear_autofight() {
  autofight_ = false;
  clear_has_autofight();
  SetDirty();
}
inline bool SetWorldBossAutoFightReq::autofight() const {
  return autofight_;
}
inline void SetWorldBossAutoFightReq::set_autofight(bool value) {
  SetDirty();
  set_has_autofight();
  autofight_ = value;
}

// -------------------------------------------------------------------

// LeaveWorldBossReq


// @@protoc_insertion_point(namespace_scope)

}  // namespace Packet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_WorldBoss_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: G2SMessage.proto
#include "G2SMessage.pb.h"
#include "G2SMessage.proto.fflua.h"
namespace G2S {
bool CacheAllNotify_fflua_reg(lua_State* state)
{
//for decltype
	CacheAllNotify* message(nullptr);
	message;
	ff::fflua_register_t<CacheAllNotify, ctor()>(state, "CacheAllNotify", "google::protobuf::Message");
	return true;
}
bool NewDayNotify_fflua_reg(lua_State* state)
{
//for decltype
	NewDayNotify* message(nullptr);
	message;
	ff::fflua_register_t<NewDayNotify, ctor()>(state, "NewDayNotify", "google::protobuf::Message");
	return true;
}
bool NewWeekNotify_fflua_reg(lua_State* state)
{
//for decltype
	NewWeekNotify* message(nullptr);
	message;
	ff::fflua_register_t<NewWeekNotify, ctor()>(state, "NewWeekNotify", "google::protobuf::Message");
	return true;
}
bool XLuaRegNotify_fflua_reg(lua_State* state)
{
//for decltype
	XLuaRegNotify* message(nullptr);
	message;
	ff::fflua_register_t<XLuaRegNotify, ctor()>(state, "XLuaRegNotify", "google::protobuf::Message");
	return true;
}
bool LuaLoadNotify_fflua_reg(lua_State* state)
{
//for decltype
	LuaLoadNotify* message(nullptr);
	message;
	ff::fflua_register_t<LuaLoadNotify, ctor()>(state, "LuaLoadNotify", "google::protobuf::Message")
		// repeated int32 ids = 1;
		.def(&LuaLoadNotify::ids_size, "ids_size")
		.def<decltype(message->ids(0)) (LuaLoadNotify::*)(int) const>(&LuaLoadNotify::ids, "ids")
		.def<void(LuaLoadNotify::*)(int, const decltype(message->ids(0)))>(&LuaLoadNotify::set_ids, "set_ids")
		.def(&LuaLoadNotify::add_ids, "add_ids")
		.def(&LuaLoadNotify::ByteSize, "ByteSize")
		.def(&LuaLoadNotify::SetInitialized, "SetInitialized")
		;
	return true;
}
bool PlayerOnline_fflua_reg(lua_State* state)
{
//for decltype
	PlayerOnline* message(nullptr);
	message;
	ff::fflua_register_t<PlayerOnline, ctor()>(state, "PlayerOnline", "google::protobuf::Message");
	return true;
}
bool SyncPlayerTeamData_fflua_reg(lua_State* state)
{
//for decltype
	SyncPlayerTeamData* message(nullptr);
	message;
	ff::fflua_register_t<SyncPlayerTeamData, ctor()>(state, "SyncPlayerTeamData", "google::protobuf::Message")
		// required .Packet.PlayerTeamData team = 1;
		.def(&SyncPlayerTeamData::team, "team")
		.def(&SyncPlayerTeamData::mutable_team, "mutable_team")
		.def(&SyncPlayerTeamData::ByteSize, "ByteSize")
		.def(&SyncPlayerTeamData::SetInitialized, "SetInitialized")
		;
	return true;
}
bool ResetPlayerTeamData_fflua_reg(lua_State* state)
{
//for decltype
	ResetPlayerTeamData* message(nullptr);
	message;
	ff::fflua_register_t<ResetPlayerTeamData, ctor()>(state, "ResetPlayerTeamData", "google::protobuf::Message");
	return true;
}
bool SyncPlayerGuildData_fflua_reg(lua_State* state)
{
//for decltype
	SyncPlayerGuildData* message(nullptr);
	message;
	ff::fflua_register_t<SyncPlayerGuildData, ctor()>(state, "SyncPlayerGuildData", "google::protobuf::Message")
		// required .Packet.PlayerGuildUserData guild = 1;
		.def(&SyncPlayerGuildData::guild, "guild")
		.def(&SyncPlayerGuildData::mutable_guild, "mutable_guild")
		.def(&SyncPlayerGuildData::ByteSize, "ByteSize")
		.def(&SyncPlayerGuildData::SetInitialized, "SetInitialized")
		;
	return true;
}
bool GS2SAddMailToPlayer_fflua_reg(lua_State* state)
{
//for decltype
	GS2SAddMailToPlayer* message(nullptr);
	message;
	ff::fflua_register_t<GS2SAddMailToPlayer, ctor()>(state, "GS2SAddMailToPlayer", "google::protobuf::Message")
		// required .Packet.MessageInfo mail = 1;
		.def(&GS2SAddMailToPlayer::mail, "mail")
		.def(&GS2SAddMailToPlayer::mutable_mail, "mutable_mail")
		// required int32 addtype = 2;
		.def(&GS2SAddMailToPlayer::addtype, "addtype")
		.def(&GS2SAddMailToPlayer::set_addtype, "set_addtype")
		.def(&GS2SAddMailToPlayer::ByteSize, "ByteSize")
		.def(&GS2SAddMailToPlayer::SetInitialized, "SetInitialized")
		;
	return true;
}
bool G2SCodeCheckDone_fflua_reg(lua_State* state)
{
//for decltype
	G2SCodeCheckDone* message(nullptr);
	message;
	ff::fflua_register_t<G2SCodeCheckDone, ctor()>(state, "G2SCodeCheckDone", "google::protobuf::Message")
		// required int32 ret = 1;
		.def(&G2SCodeCheckDone::ret, "ret")
		.def(&G2SCodeCheckDone::set_ret, "set_ret")
		// repeated .Packet.ItemCount items = 2;
		.def(&G2SCodeCheckDone::items_size, "items_size")
		.def<decltype(message->items(0)) (G2SCodeCheckDone::*)(int) const>(&G2SCodeCheckDone::items, "items")
		.def<decltype(message->mutable_items(0)) (G2SCodeCheckDone::*)(int)>(&G2SCodeCheckDone::mutable_items, "mutable_items")
		.def(&G2SCodeCheckDone::add_items, "add_items")
		.def(&G2SCodeCheckDone::ByteSize, "ByteSize")
		.def(&G2SCodeCheckDone::SetInitialized, "SetInitialized")
		;
	return true;
}
bool G2SCommonMessage_fflua_reg(lua_State* state)
{
//for decltype
	G2SCommonMessage* message(nullptr);
	message;
	ff::fflua_register_t<G2SCommonMessage, ctor()>(state, "G2SCommonMessage", "google::protobuf::Message")
		// required string request_name = 1;
		.def(&G2SCommonMessage::request_name, "request_name")
		.def<void (G2SCommonMessage::*)(const std::string&)>(&G2SCommonMessage::set_request_name, "set_request_name")
		// repeated int32 int32_params = 2;
		.def(&G2SCommonMessage::int32_params_size, "int32_params_size")
		.def<decltype(message->int32_params(0)) (G2SCommonMessage::*)(int) const>(&G2SCommonMessage::int32_params, "int32_params")
		.def<void(G2SCommonMessage::*)(int, const decltype(message->int32_params(0)))>(&G2SCommonMessage::set_int32_params, "set_int32_params")
		.def(&G2SCommonMessage::add_int32_params, "add_int32_params")
		// repeated fixed64 int64_params = 3;
		.def(&G2SCommonMessage::int64_params_size, "int64_params_size")
		.def<decltype(message->int64_params(0)) (G2SCommonMessage::*)(int) const>(&G2SCommonMessage::int64_params, "int64_params")
		.def<void(G2SCommonMessage::*)(int, const decltype(message->int64_params(0)))>(&G2SCommonMessage::set_int64_params, "set_int64_params")
		.def(&G2SCommonMessage::add_int64_params, "add_int64_params")
		// repeated string string_params = 4;
		.def(&G2SCommonMessage::string_params_size, "string_params_size")
		.def<const std::string& (G2SCommonMessage::*)(int) const>(&G2SCommonMessage::string_params, "string_params")
		.def<void (G2SCommonMessage::*)(int, const std::string&)>(&G2SCommonMessage::set_string_params, "set_string_params")
		.def<void (G2SCommonMessage::*)(const std::string&)>(&G2SCommonMessage::add_string_params, "add_string_params")
		.def(&G2SCommonMessage::ByteSize, "ByteSize")
		.def(&G2SCommonMessage::SetInitialized, "SetInitialized")
		;
	return true;
}
bool G2SMessage_fflua_regist_all(lua_State* state)
{
	CacheAllNotify_fflua_reg(state);
	NewDayNotify_fflua_reg(state);
	NewWeekNotify_fflua_reg(state);
	XLuaRegNotify_fflua_reg(state);
	LuaLoadNotify_fflua_reg(state);
	PlayerOnline_fflua_reg(state);
	SyncPlayerTeamData_fflua_reg(state);
	ResetPlayerTeamData_fflua_reg(state);
	SyncPlayerGuildData_fflua_reg(state);
	GS2SAddMailToPlayer_fflua_reg(state);
	G2SCodeCheckDone_fflua_reg(state);
	G2SCommonMessage_fflua_reg(state);
	return true;
}
}

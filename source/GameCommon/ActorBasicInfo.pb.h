// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActorBasicInfo.proto

#ifndef PROTOBUF_ActorBasicInfo_2eproto__INCLUDED
#define PROTOBUF_ActorBasicInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "AllPacketEnum.pb.h"
#include "ProtoBufOption.pb.h"
#include "PlayerBasicInfo.pb.h"
#include "BattleInfo.pb.h"
#include "ItemAndEquip.pb.h"
// @@protoc_insertion_point(includes)

namespace Packet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ActorBasicInfo_2eproto();
void protobuf_AssignDesc_ActorBasicInfo_2eproto();
void protobuf_ShutdownFile_ActorBasicInfo_2eproto();

class ActorList;
class ActorFullInfo;
class ActorListReply;
class NewActorNotify;
class ActorBasicInfo;
class ActorFormationPull;
class ActorFormation;
class ActorFormationAll;
class SetActorFightReq;
class ActorLevelAndExpUpdate;
class ActorBattleInfoNotify;
class ActorSkillRefresh;
class ReNameRequest;
class ActorSkill;

// ===================================================================

class ActorList : public ::google::protobuf::Message {
 public:
  ActorList();
  virtual ~ActorList();

  ActorList(const ActorList& from);

  inline ActorList& operator=(const ActorList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorList& default_instance();

  void Swap(ActorList* other);

  // implements Message ----------------------------------------------

  ActorList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorList& from);
  void MergeFrom(const ActorList& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.ActorList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ActorBasicInfo_2eproto();
  friend void protobuf_AssignDesc_ActorBasicInfo_2eproto();
  friend void protobuf_ShutdownFile_ActorBasicInfo_2eproto();

  void InitAsDefaultInstance();
  static ActorList* default_instance_;
};
// -------------------------------------------------------------------

class ActorFullInfo : public ::google::protobuf::Message {
 public:
  ActorFullInfo();
  virtual ~ActorFullInfo();

  ActorFullInfo(const ActorFullInfo& from);

  inline ActorFullInfo& operator=(const ActorFullInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorFullInfo& default_instance();

  void Swap(ActorFullInfo* other);

  // implements Message ----------------------------------------------

  ActorFullInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorFullInfo& from);
  void MergeFrom(const ActorFullInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.ActorBasicInfo actor = 1;
  inline bool has_actor() const;
  inline void clear_actor();
  static const int kActorFieldNumber = 1;
  inline const ::Packet::ActorBasicInfo& actor() const;
  inline ::Packet::ActorBasicInfo* mutable_actor();
  inline ::Packet::ActorBasicInfo* release_actor();
  inline void set_allocated_actor(::Packet::ActorBasicInfo* actor);

  // repeated .Packet.EquipItem equips = 2;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 2;
  inline const ::Packet::EquipItem& equips(int index) const;
  inline ::Packet::EquipItem* mutable_equips(int index);
  inline ::Packet::EquipItem* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::EquipItem >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::EquipItem >*
      mutable_equips();

  // repeated .Packet.ActorSkill skills = 3;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 3;
  inline const ::Packet::ActorSkill& skills(int index) const;
  inline ::Packet::ActorSkill* mutable_skills(int index);
  inline ::Packet::ActorSkill* add_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorSkill >&
      skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorSkill >*
      mutable_skills();

  // @@protoc_insertion_point(class_scope:Packet.ActorFullInfo)
 private:
  inline void set_has_actor();
  inline void clear_has_actor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::ActorBasicInfo* actor_;
  ::google::protobuf::RepeatedPtrField< ::Packet::EquipItem > equips_;
  ::google::protobuf::RepeatedPtrField< ::Packet::ActorSkill > skills_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ActorBasicInfo_2eproto();
  friend void protobuf_AssignDesc_ActorBasicInfo_2eproto();
  friend void protobuf_ShutdownFile_ActorBasicInfo_2eproto();

  void InitAsDefaultInstance();
  static ActorFullInfo* default_instance_;
};
// -------------------------------------------------------------------

class ActorListReply : public ::google::protobuf::Message {
 public:
  ActorListReply();
  virtual ~ActorListReply();

  ActorListReply(const ActorListReply& from);

  inline ActorListReply& operator=(const ActorListReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorListReply& default_instance();

  void Swap(ActorListReply* other);

  // implements Message ----------------------------------------------

  ActorListReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorListReply& from);
  void MergeFrom(const ActorListReply& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.ActorFullInfo actors = 1;
  inline int actors_size() const;
  inline void clear_actors();
  static const int kActorsFieldNumber = 1;
  inline const ::Packet::ActorFullInfo& actors(int index) const;
  inline ::Packet::ActorFullInfo* mutable_actors(int index);
  inline ::Packet::ActorFullInfo* add_actors();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo >&
      actors() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo >*
      mutable_actors();

  // @@protoc_insertion_point(class_scope:Packet.ActorListReply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo > actors_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ActorBasicInfo_2eproto();
  friend void protobuf_AssignDesc_ActorBasicInfo_2eproto();
  friend void protobuf_ShutdownFile_ActorBasicInfo_2eproto();

  void InitAsDefaultInstance();
  static ActorListReply* default_instance_;
};
// -------------------------------------------------------------------

class NewActorNotify : public ::google::protobuf::Message {
 public:
  NewActorNotify();
  virtual ~NewActorNotify();

  NewActorNotify(const NewActorNotify& from);

  inline NewActorNotify& operator=(const NewActorNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewActorNotify& default_instance();

  void Swap(NewActorNotify* other);

  // implements Message ----------------------------------------------

  NewActorNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewActorNotify& from);
  void MergeFrom(const NewActorNotify& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.ActorFullInfo actor_lsit = 1;
  inline int actor_lsit_size() const;
  inline void clear_actor_lsit();
  static const int kActorLsitFieldNumber = 1;
  inline const ::Packet::ActorFullInfo& actor_lsit(int index) const;
  inline ::Packet::ActorFullInfo* mutable_actor_lsit(int index);
  inline ::Packet::ActorFullInfo* add_actor_lsit();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo >&
      actor_lsit() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo >*
      mutable_actor_lsit();

  // required string source = 2;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 2;
  inline const ::std::string& source() const;
  inline void set_source(const ::std::string& value);
  inline void set_source(const char* value);
  inline void set_source(const char* value, size_t size);
  inline ::std::string* mutable_source();
  inline ::std::string* release_source();
  inline void set_allocated_source(::std::string* source);

  // @@protoc_insertion_point(class_scope:Packet.NewActorNotify)
 private:
  inline void set_has_source();
  inline void clear_has_source();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo > actor_lsit_;
  ::std::string* source_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ActorBasicInfo_2eproto();
  friend void protobuf_AssignDesc_ActorBasicInfo_2eproto();
  friend void protobuf_ShutdownFile_ActorBasicInfo_2eproto();

  void InitAsDefaultInstance();
  static NewActorNotify* default_instance_;
};
// -------------------------------------------------------------------

class ActorBasicInfo : public ::google::protobuf::Message {
 public:
  ActorBasicInfo();
  virtual ~ActorBasicInfo();

  ActorBasicInfo(const ActorBasicInfo& from);

  inline ActorBasicInfo& operator=(const ActorBasicInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorBasicInfo& default_instance();

  void Swap(ActorBasicInfo* other);

  // implements Message ----------------------------------------------

  ActorBasicInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorBasicInfo& from);
  void MergeFrom(const ActorBasicInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required fixed64 player_guid = 2;
  inline bool has_player_guid() const;
  inline void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 player_guid() const;
  inline void set_player_guid(::google::protobuf::uint64 value);

  // required .Packet.Race race = 3;
  inline bool has_race() const;
  inline void clear_race();
  static const int kRaceFieldNumber = 3;
  inline ::Packet::Race race() const;
  inline void set_race(::Packet::Race value);

  // required .Packet.Professions profession = 4;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 4;
  inline ::Packet::Professions profession() const;
  inline void set_profession(::Packet::Professions value);

  // required .Packet.Talent talent = 5;
  inline bool has_talent() const;
  inline void clear_talent();
  static const int kTalentFieldNumber = 5;
  inline ::Packet::Talent talent() const;
  inline void set_talent(::Packet::Talent value);

  // required .Packet.Gender gender = 6;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 6;
  inline ::Packet::Gender gender() const;
  inline void set_gender(::Packet::Gender value);

  // required int32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required .Packet.BattleInfo battle_info = 8;
  inline bool has_battle_info() const;
  inline void clear_battle_info();
  static const int kBattleInfoFieldNumber = 8;
  inline const ::Packet::BattleInfo& battle_info() const;
  inline ::Packet::BattleInfo* mutable_battle_info();
  inline ::Packet::BattleInfo* release_battle_info();
  inline void set_allocated_battle_info(::Packet::BattleInfo* battle_info);

  // required .Packet.ActorType type = 9;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 9;
  inline ::Packet::ActorType type() const;
  inline void set_type(::Packet::ActorType value);

  // required int32 exp = 10;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 10;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // required .Packet.ActorStar star = 11;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 11;
  inline ::Packet::ActorStar star() const;
  inline void set_star(::Packet::ActorStar value);

  // required .Packet.ActorColor color = 12;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 12;
  inline ::Packet::ActorColor color() const;
  inline void set_color(::Packet::ActorColor value);

  // required int32 level_2 = 13;
  inline bool has_level_2() const;
  inline void clear_level_2();
  static const int kLevel2FieldNumber = 13;
  inline ::google::protobuf::int32 level_2() const;
  inline void set_level_2(::google::protobuf::int32 value);

  // required int32 exp_2 = 14;
  inline bool has_exp_2() const;
  inline void clear_exp_2();
  static const int kExp2FieldNumber = 14;
  inline ::google::protobuf::int32 exp_2() const;
  inline void set_exp_2(::google::protobuf::int32 value);

  // required string name = 15;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 15;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 client_res_id = 16;
  inline bool has_client_res_id() const;
  inline void clear_client_res_id();
  static const int kClientResIdFieldNumber = 16;
  inline ::google::protobuf::int32 client_res_id() const;
  inline void set_client_res_id(::google::protobuf::int32 value);

  // required .Packet.ActorBattleType battle_type = 17;
  inline bool has_battle_type() const;
  inline void clear_battle_type();
  static const int kBattleTypeFieldNumber = 17;
  inline ::Packet::ActorBattleType battle_type() const;
  inline void set_battle_type(::Packet::ActorBattleType value);

  // required int32 actor_config_id = 18;
  inline bool has_actor_config_id() const;
  inline void clear_actor_config_id();
  static const int kActorConfigIdFieldNumber = 18;
  inline ::google::protobuf::int32 actor_config_id() const;
  inline void set_actor_config_id(::google::protobuf::int32 value);

  // required int32 score = 20;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 20;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // repeated int32 last_hp = 21;
  inline int last_hp_size() const;
  inline void clear_last_hp();
  static const int kLastHpFieldNumber = 21;
  inline ::google::protobuf::int32 last_hp(int index) const;
  inline void set_last_hp(int index, ::google::protobuf::int32 value);
  inline void add_last_hp(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      last_hp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_last_hp();

  // required int32 hair = 22;
  inline bool has_hair() const;
  inline void clear_hair();
  static const int kHairFieldNumber = 22;
  inline ::google::protobuf::int32 hair() const;
  inline void set_hair(::google::protobuf::int32 value);

  // required int32 gem_master_lv = 23;
  inline bool has_gem_master_lv() const;
  inline void clear_gem_master_lv();
  static const int kGemMasterLvFieldNumber = 23;
  inline ::google::protobuf::int32 gem_master_lv() const;
  inline void set_gem_master_lv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorBasicInfo)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_player_guid();
  inline void clear_has_player_guid();
  inline void set_has_race();
  inline void clear_has_race();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_talent();
  inline void clear_has_talent();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_battle_info();
  inline void clear_has_battle_info();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_level_2();
  inline void clear_has_level_2();
  inline void set_has_exp_2();
  inline void clear_has_exp_2();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_client_res_id();
  inline void clear_has_client_res_id();
  inline void set_has_battle_type();
  inline void clear_has_battle_type();
  inline void set_has_actor_config_id();
  inline void clear_has_actor_config_id();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_hair();
  inline void clear_has_hair();
  inline void set_has_gem_master_lv();
  inline void clear_has_gem_master_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 player_guid_;
  int race_;
  int profession_;
  int talent_;
  int gender_;
  ::Packet::BattleInfo* battle_info_;
  ::google::protobuf::int32 level_;
  int type_;
  ::google::protobuf::int32 exp_;
  int star_;
  int color_;
  ::google::protobuf::int32 level_2_;
  ::std::string* name_;
  ::google::protobuf::int32 exp_2_;
  ::google::protobuf::int32 client_res_id_;
  int battle_type_;
  ::google::protobuf::int32 actor_config_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > last_hp_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 hair_;
  ::google::protobuf::int32 gem_master_lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(22 + 31) / 32];

  friend void  protobuf_AddDesc_ActorBasicInfo_2eproto();
  friend void protobuf_AssignDesc_ActorBasicInfo_2eproto();
  friend void protobuf_ShutdownFile_ActorBasicInfo_2eproto();

  void InitAsDefaultInstance();
  static ActorBasicInfo* default_instance_;
};
// -------------------------------------------------------------------

class ActorFormationPull : public ::google::protobuf::Message {
 public:
  ActorFormationPull();
  virtual ~ActorFormationPull();

  ActorFormationPull(const ActorFormationPull& from);

  inline ActorFormationPull& operator=(const ActorFormationPull& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorFormationPull& default_instance();

  void Swap(ActorFormationPull* other);

  // implements Message ----------------------------------------------

  ActorFormationPull* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorFormationPull& from);
  void MergeFrom(const ActorFormationPull& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet.ActorFormationPull)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ActorBasicInfo_2eproto();
  friend void protobuf_AssignDesc_ActorBasicInfo_2eproto();
  friend void protobuf_ShutdownFile_ActorBasicInfo_2eproto();

  void InitAsDefaultInstance();
  static ActorFormationPull* default_instance_;
};
// -------------------------------------------------------------------

class ActorFormation : public ::google::protobuf::Message {
 public:
  ActorFormation();
  virtual ~ActorFormation();

  ActorFormation(const ActorFormation& from);

  inline ActorFormation& operator=(const ActorFormation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorFormation& default_instance();

  void Swap(ActorFormation* other);

  // implements Message ----------------------------------------------

  ActorFormation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorFormation& from);
  void MergeFrom(const ActorFormation& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 player_guid = 1;
  inline bool has_player_guid() const;
  inline void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 player_guid() const;
  inline void set_player_guid(::google::protobuf::uint64 value);

  // required .Packet.ActorFigthFormation type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::Packet::ActorFigthFormation type() const;
  inline void set_type(::Packet::ActorFigthFormation value);

  // repeated fixed64 actor_guids = 3;
  inline int actor_guids_size() const;
  inline void clear_actor_guids();
  static const int kActorGuidsFieldNumber = 3;
  inline ::google::protobuf::uint64 actor_guids(int index) const;
  inline void set_actor_guids(int index, ::google::protobuf::uint64 value);
  inline void add_actor_guids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      actor_guids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_actor_guids();

  // @@protoc_insertion_point(class_scope:Packet.ActorFormation)
 private:
  inline void set_has_player_guid();
  inline void clear_has_player_guid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_guid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > actor_guids_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ActorBasicInfo_2eproto();
  friend void protobuf_AssignDesc_ActorBasicInfo_2eproto();
  friend void protobuf_ShutdownFile_ActorBasicInfo_2eproto();

  void InitAsDefaultInstance();
  static ActorFormation* default_instance_;
};
// -------------------------------------------------------------------

class ActorFormationAll : public ::google::protobuf::Message {
 public:
  ActorFormationAll();
  virtual ~ActorFormationAll();

  ActorFormationAll(const ActorFormationAll& from);

  inline ActorFormationAll& operator=(const ActorFormationAll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorFormationAll& default_instance();

  void Swap(ActorFormationAll* other);

  // implements Message ----------------------------------------------

  ActorFormationAll* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorFormationAll& from);
  void MergeFrom(const ActorFormationAll& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.ActorFormation all_formations = 1;
  inline int all_formations_size() const;
  inline void clear_all_formations();
  static const int kAllFormationsFieldNumber = 1;
  inline const ::Packet::ActorFormation& all_formations(int index) const;
  inline ::Packet::ActorFormation* mutable_all_formations(int index);
  inline ::Packet::ActorFormation* add_all_formations();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorFormation >&
      all_formations() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorFormation >*
      mutable_all_formations();

  // @@protoc_insertion_point(class_scope:Packet.ActorFormationAll)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::ActorFormation > all_formations_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ActorBasicInfo_2eproto();
  friend void protobuf_AssignDesc_ActorBasicInfo_2eproto();
  friend void protobuf_ShutdownFile_ActorBasicInfo_2eproto();

  void InitAsDefaultInstance();
  static ActorFormationAll* default_instance_;
};
// -------------------------------------------------------------------

class SetActorFightReq : public ::google::protobuf::Message {
 public:
  SetActorFightReq();
  virtual ~SetActorFightReq();

  SetActorFightReq(const SetActorFightReq& from);

  inline SetActorFightReq& operator=(const SetActorFightReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetActorFightReq& default_instance();

  void Swap(SetActorFightReq* other);

  // implements Message ----------------------------------------------

  SetActorFightReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetActorFightReq& from);
  void MergeFrom(const SetActorFightReq& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.ActorFigthFormation type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Packet::ActorFigthFormation type() const;
  inline void set_type(::Packet::ActorFigthFormation value);

  // repeated fixed64 guids = 2;
  inline int guids_size() const;
  inline void clear_guids();
  static const int kGuidsFieldNumber = 2;
  inline ::google::protobuf::uint64 guids(int index) const;
  inline void set_guids(int index, ::google::protobuf::uint64 value);
  inline void add_guids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guids();

  // @@protoc_insertion_point(class_scope:Packet.SetActorFightReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guids_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ActorBasicInfo_2eproto();
  friend void protobuf_AssignDesc_ActorBasicInfo_2eproto();
  friend void protobuf_ShutdownFile_ActorBasicInfo_2eproto();

  void InitAsDefaultInstance();
  static SetActorFightReq* default_instance_;
};
// -------------------------------------------------------------------

class ActorLevelAndExpUpdate : public ::google::protobuf::Message {
 public:
  ActorLevelAndExpUpdate();
  virtual ~ActorLevelAndExpUpdate();

  ActorLevelAndExpUpdate(const ActorLevelAndExpUpdate& from);

  inline ActorLevelAndExpUpdate& operator=(const ActorLevelAndExpUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorLevelAndExpUpdate& default_instance();

  void Swap(ActorLevelAndExpUpdate* other);

  // implements Message ----------------------------------------------

  ActorLevelAndExpUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorLevelAndExpUpdate& from);
  void MergeFrom(const ActorLevelAndExpUpdate& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required int32 new_level = 2;
  inline bool has_new_level() const;
  inline void clear_new_level();
  static const int kNewLevelFieldNumber = 2;
  inline ::google::protobuf::int32 new_level() const;
  inline void set_new_level(::google::protobuf::int32 value);

  // required int32 new_exp = 3;
  inline bool has_new_exp() const;
  inline void clear_new_exp();
  static const int kNewExpFieldNumber = 3;
  inline ::google::protobuf::int32 new_exp() const;
  inline void set_new_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorLevelAndExpUpdate)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_new_level();
  inline void clear_has_new_level();
  inline void set_has_new_exp();
  inline void clear_has_new_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 new_level_;
  ::google::protobuf::int32 new_exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ActorBasicInfo_2eproto();
  friend void protobuf_AssignDesc_ActorBasicInfo_2eproto();
  friend void protobuf_ShutdownFile_ActorBasicInfo_2eproto();

  void InitAsDefaultInstance();
  static ActorLevelAndExpUpdate* default_instance_;
};
// -------------------------------------------------------------------

class ActorBattleInfoNotify : public ::google::protobuf::Message {
 public:
  ActorBattleInfoNotify();
  virtual ~ActorBattleInfoNotify();

  ActorBattleInfoNotify(const ActorBattleInfoNotify& from);

  inline ActorBattleInfoNotify& operator=(const ActorBattleInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorBattleInfoNotify& default_instance();

  void Swap(ActorBattleInfoNotify* other);

  // implements Message ----------------------------------------------

  ActorBattleInfoNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorBattleInfoNotify& from);
  void MergeFrom(const ActorBattleInfoNotify& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required .Packet.BattleInfo battle_info = 2;
  inline bool has_battle_info() const;
  inline void clear_battle_info();
  static const int kBattleInfoFieldNumber = 2;
  inline const ::Packet::BattleInfo& battle_info() const;
  inline ::Packet::BattleInfo* mutable_battle_info();
  inline ::Packet::BattleInfo* release_battle_info();
  inline void set_allocated_battle_info(::Packet::BattleInfo* battle_info);

  // required int32 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorBattleInfoNotify)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_battle_info();
  inline void clear_has_battle_info();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::Packet::BattleInfo* battle_info_;
  ::google::protobuf::int32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ActorBasicInfo_2eproto();
  friend void protobuf_AssignDesc_ActorBasicInfo_2eproto();
  friend void protobuf_ShutdownFile_ActorBasicInfo_2eproto();

  void InitAsDefaultInstance();
  static ActorBattleInfoNotify* default_instance_;
};
// -------------------------------------------------------------------

class ActorSkillRefresh : public ::google::protobuf::Message {
 public:
  ActorSkillRefresh();
  virtual ~ActorSkillRefresh();

  ActorSkillRefresh(const ActorSkillRefresh& from);

  inline ActorSkillRefresh& operator=(const ActorSkillRefresh& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorSkillRefresh& default_instance();

  void Swap(ActorSkillRefresh* other);

  // implements Message ----------------------------------------------

  ActorSkillRefresh* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorSkillRefresh& from);
  void MergeFrom(const ActorSkillRefresh& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 actor_guid = 1;
  inline bool has_actor_guid() const;
  inline void clear_actor_guid();
  static const int kActorGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 actor_guid() const;
  inline void set_actor_guid(::google::protobuf::uint64 value);

  // repeated .Packet.ActorSkill skills = 2;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 2;
  inline const ::Packet::ActorSkill& skills(int index) const;
  inline ::Packet::ActorSkill* mutable_skills(int index);
  inline ::Packet::ActorSkill* add_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorSkill >&
      skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorSkill >*
      mutable_skills();

  // @@protoc_insertion_point(class_scope:Packet.ActorSkillRefresh)
 private:
  inline void set_has_actor_guid();
  inline void clear_has_actor_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 actor_guid_;
  ::google::protobuf::RepeatedPtrField< ::Packet::ActorSkill > skills_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ActorBasicInfo_2eproto();
  friend void protobuf_AssignDesc_ActorBasicInfo_2eproto();
  friend void protobuf_ShutdownFile_ActorBasicInfo_2eproto();

  void InitAsDefaultInstance();
  static ActorSkillRefresh* default_instance_;
};
// -------------------------------------------------------------------

class ReNameRequest : public ::google::protobuf::Message {
 public:
  ReNameRequest();
  virtual ~ReNameRequest();

  ReNameRequest(const ReNameRequest& from);

  inline ReNameRequest& operator=(const ReNameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReNameRequest& default_instance();

  void Swap(ReNameRequest* other);

  // implements Message ----------------------------------------------

  ReNameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReNameRequest& from);
  void MergeFrom(const ReNameRequest& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Packet.ReNameRequest)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ActorBasicInfo_2eproto();
  friend void protobuf_AssignDesc_ActorBasicInfo_2eproto();
  friend void protobuf_ShutdownFile_ActorBasicInfo_2eproto();

  void InitAsDefaultInstance();
  static ReNameRequest* default_instance_;
};
// -------------------------------------------------------------------

class ActorSkill : public ::google::protobuf::Message {
 public:
  ActorSkill();
  virtual ~ActorSkill();

  ActorSkill(const ActorSkill& from);

  inline ActorSkill& operator=(const ActorSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorSkill& default_instance();

  void Swap(ActorSkill* other);

  // implements Message ----------------------------------------------

  ActorSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorSkill& from);
  void MergeFrom(const ActorSkill& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required fixed64 actor_guid = 2;
  inline bool has_actor_guid() const;
  inline void clear_actor_guid();
  static const int kActorGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 actor_guid() const;
  inline void set_actor_guid(::google::protobuf::uint64 value);

  // required int32 skill_id = 3;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 3;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // required int32 skill_level = 4;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 4;
  inline ::google::protobuf::int32 skill_level() const;
  inline void set_skill_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.ActorSkill)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_actor_guid();
  inline void clear_has_actor_guid();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 actor_guid_;
  ::google::protobuf::int32 skill_id_;
  ::google::protobuf::int32 skill_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ActorBasicInfo_2eproto();
  friend void protobuf_AssignDesc_ActorBasicInfo_2eproto();
  friend void protobuf_ShutdownFile_ActorBasicInfo_2eproto();

  void InitAsDefaultInstance();
  static ActorSkill* default_instance_;
};
// ===================================================================


// ===================================================================

// ActorList

// -------------------------------------------------------------------

// ActorFullInfo

// required .Packet.ActorBasicInfo actor = 1;
inline bool ActorFullInfo::has_actor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorFullInfo::set_has_actor() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorFullInfo::clear_has_actor() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorFullInfo::clear_actor() {
  if (actor_ != NULL) actor_->::Packet::ActorBasicInfo::Clear();
  clear_has_actor();
  SetDirty();
}
inline const ::Packet::ActorBasicInfo& ActorFullInfo::actor() const {
  return actor_ != NULL ? *actor_ : *default_instance_->actor_;
}
inline ::Packet::ActorBasicInfo* ActorFullInfo::mutable_actor() {
  SetDirty();
  set_has_actor();
  if (actor_ == NULL) actor_ = new ::Packet::ActorBasicInfo;
  return actor_;
}
inline ::Packet::ActorBasicInfo* ActorFullInfo::release_actor() {
  SetDirty();
  clear_has_actor();
  ::Packet::ActorBasicInfo* temp = actor_;
  actor_ = NULL;
  return temp;
}
inline void ActorFullInfo::set_allocated_actor(::Packet::ActorBasicInfo* actor) {
  SetDirty();
  delete actor_;
  actor_ = actor;
  if (actor) {
    set_has_actor();
  } else {
    clear_has_actor();
  }
}

// repeated .Packet.EquipItem equips = 2;
inline int ActorFullInfo::equips_size() const {
  return equips_.size();
}
inline void ActorFullInfo::clear_equips() {
  equips_.Clear();
  SetDirty();
}
inline const ::Packet::EquipItem& ActorFullInfo::equips(int index) const {
  return equips_.Get(index);
}
inline ::Packet::EquipItem* ActorFullInfo::mutable_equips(int index) {
  SetDirty();
  return equips_.Mutable(index);
}
inline ::Packet::EquipItem* ActorFullInfo::add_equips() {
  SetDirty();
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::EquipItem >&
ActorFullInfo::equips() const {
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::EquipItem >*
ActorFullInfo::mutable_equips() {
  SetDirty();
  return &equips_;
}

// repeated .Packet.ActorSkill skills = 3;
inline int ActorFullInfo::skills_size() const {
  return skills_.size();
}
inline void ActorFullInfo::clear_skills() {
  skills_.Clear();
  SetDirty();
}
inline const ::Packet::ActorSkill& ActorFullInfo::skills(int index) const {
  return skills_.Get(index);
}
inline ::Packet::ActorSkill* ActorFullInfo::mutable_skills(int index) {
  SetDirty();
  return skills_.Mutable(index);
}
inline ::Packet::ActorSkill* ActorFullInfo::add_skills() {
  SetDirty();
  return skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorSkill >&
ActorFullInfo::skills() const {
  return skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorSkill >*
ActorFullInfo::mutable_skills() {
  SetDirty();
  return &skills_;
}

// -------------------------------------------------------------------

// ActorListReply

// repeated .Packet.ActorFullInfo actors = 1;
inline int ActorListReply::actors_size() const {
  return actors_.size();
}
inline void ActorListReply::clear_actors() {
  actors_.Clear();
  SetDirty();
}
inline const ::Packet::ActorFullInfo& ActorListReply::actors(int index) const {
  return actors_.Get(index);
}
inline ::Packet::ActorFullInfo* ActorListReply::mutable_actors(int index) {
  SetDirty();
  return actors_.Mutable(index);
}
inline ::Packet::ActorFullInfo* ActorListReply::add_actors() {
  SetDirty();
  return actors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo >&
ActorListReply::actors() const {
  return actors_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo >*
ActorListReply::mutable_actors() {
  SetDirty();
  return &actors_;
}

// -------------------------------------------------------------------

// NewActorNotify

// repeated .Packet.ActorFullInfo actor_lsit = 1;
inline int NewActorNotify::actor_lsit_size() const {
  return actor_lsit_.size();
}
inline void NewActorNotify::clear_actor_lsit() {
  actor_lsit_.Clear();
  SetDirty();
}
inline const ::Packet::ActorFullInfo& NewActorNotify::actor_lsit(int index) const {
  return actor_lsit_.Get(index);
}
inline ::Packet::ActorFullInfo* NewActorNotify::mutable_actor_lsit(int index) {
  SetDirty();
  return actor_lsit_.Mutable(index);
}
inline ::Packet::ActorFullInfo* NewActorNotify::add_actor_lsit() {
  SetDirty();
  return actor_lsit_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo >&
NewActorNotify::actor_lsit() const {
  return actor_lsit_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo >*
NewActorNotify::mutable_actor_lsit() {
  SetDirty();
  return &actor_lsit_;
}

// required string source = 2;
inline bool NewActorNotify::has_source() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewActorNotify::set_has_source() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewActorNotify::clear_has_source() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewActorNotify::clear_source() {
  if (source_ != &::google::protobuf::internal::kEmptyString) {
    source_->clear();
  }
  clear_has_source();
  SetDirty();
}
inline const ::std::string& NewActorNotify::source() const {
  return *source_;
}
inline void NewActorNotify::set_source(const ::std::string& value) {
  SetDirty();
  set_has_source();
  if (source_ == &::google::protobuf::internal::kEmptyString) {
    source_ = new ::std::string;
  }
  source_->assign(value);
}
inline void NewActorNotify::set_source(const char* value) {
  SetDirty();
  set_has_source();
  if (source_ == &::google::protobuf::internal::kEmptyString) {
    source_ = new ::std::string;
  }
  source_->assign(value);
}
inline void NewActorNotify::set_source(const char* value, size_t size) {
  SetDirty();
  set_has_source();
  if (source_ == &::google::protobuf::internal::kEmptyString) {
    source_ = new ::std::string;
  }
  source_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NewActorNotify::mutable_source() {
  SetDirty();
  set_has_source();
  if (source_ == &::google::protobuf::internal::kEmptyString) {
    source_ = new ::std::string;
  }
  return source_;
}
inline ::std::string* NewActorNotify::release_source() {
  SetDirty();
  clear_has_source();
  if (source_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = source_;
    source_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NewActorNotify::set_allocated_source(::std::string* source) {
  SetDirty();
  if (source_ != &::google::protobuf::internal::kEmptyString) {
    delete source_;
  }
  if (source) {
    set_has_source();
    source_ = source;
  } else {
    clear_has_source();
    source_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ActorBasicInfo

// required fixed64 guid = 1;
inline bool ActorBasicInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorBasicInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorBasicInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorBasicInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorBasicInfo::guid() const {
  return guid_;
}
inline void ActorBasicInfo::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required fixed64 player_guid = 2;
inline bool ActorBasicInfo::has_player_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorBasicInfo::set_has_player_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorBasicInfo::clear_has_player_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorBasicInfo::clear_player_guid() {
  player_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_player_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorBasicInfo::player_guid() const {
  return player_guid_;
}
inline void ActorBasicInfo::set_player_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_player_guid();
  player_guid_ = value;
}

// required .Packet.Race race = 3;
inline bool ActorBasicInfo::has_race() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorBasicInfo::set_has_race() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorBasicInfo::clear_has_race() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorBasicInfo::clear_race() {
  race_ = 0;
  clear_has_race();
  SetDirty();
}
inline ::Packet::Race ActorBasicInfo::race() const {
  return static_cast< ::Packet::Race >(race_);
}
inline void ActorBasicInfo::set_race(::Packet::Race value) {
  assert(::Packet::Race_IsValid(value));
  SetDirty();
  set_has_race();
  race_ = value;
}

// required .Packet.Professions profession = 4;
inline bool ActorBasicInfo::has_profession() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActorBasicInfo::set_has_profession() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActorBasicInfo::clear_has_profession() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActorBasicInfo::clear_profession() {
  profession_ = 0;
  clear_has_profession();
  SetDirty();
}
inline ::Packet::Professions ActorBasicInfo::profession() const {
  return static_cast< ::Packet::Professions >(profession_);
}
inline void ActorBasicInfo::set_profession(::Packet::Professions value) {
  assert(::Packet::Professions_IsValid(value));
  SetDirty();
  set_has_profession();
  profession_ = value;
}

// required .Packet.Talent talent = 5;
inline bool ActorBasicInfo::has_talent() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActorBasicInfo::set_has_talent() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActorBasicInfo::clear_has_talent() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActorBasicInfo::clear_talent() {
  talent_ = 0;
  clear_has_talent();
  SetDirty();
}
inline ::Packet::Talent ActorBasicInfo::talent() const {
  return static_cast< ::Packet::Talent >(talent_);
}
inline void ActorBasicInfo::set_talent(::Packet::Talent value) {
  assert(::Packet::Talent_IsValid(value));
  SetDirty();
  set_has_talent();
  talent_ = value;
}

// required .Packet.Gender gender = 6;
inline bool ActorBasicInfo::has_gender() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ActorBasicInfo::set_has_gender() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ActorBasicInfo::clear_has_gender() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ActorBasicInfo::clear_gender() {
  gender_ = 1;
  clear_has_gender();
  SetDirty();
}
inline ::Packet::Gender ActorBasicInfo::gender() const {
  return static_cast< ::Packet::Gender >(gender_);
}
inline void ActorBasicInfo::set_gender(::Packet::Gender value) {
  assert(::Packet::Gender_IsValid(value));
  SetDirty();
  set_has_gender();
  gender_ = value;
}

// required int32 level = 7;
inline bool ActorBasicInfo::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ActorBasicInfo::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ActorBasicInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ActorBasicInfo::clear_level() {
  level_ = 0;
  clear_has_level();
  SetDirty();
}
inline ::google::protobuf::int32 ActorBasicInfo::level() const {
  return level_;
}
inline void ActorBasicInfo::set_level(::google::protobuf::int32 value) {
  SetDirty();
  set_has_level();
  level_ = value;
}

// required .Packet.BattleInfo battle_info = 8;
inline bool ActorBasicInfo::has_battle_info() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ActorBasicInfo::set_has_battle_info() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ActorBasicInfo::clear_has_battle_info() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ActorBasicInfo::clear_battle_info() {
  if (battle_info_ != NULL) battle_info_->::Packet::BattleInfo::Clear();
  clear_has_battle_info();
  SetDirty();
}
inline const ::Packet::BattleInfo& ActorBasicInfo::battle_info() const {
  return battle_info_ != NULL ? *battle_info_ : *default_instance_->battle_info_;
}
inline ::Packet::BattleInfo* ActorBasicInfo::mutable_battle_info() {
  SetDirty();
  set_has_battle_info();
  if (battle_info_ == NULL) battle_info_ = new ::Packet::BattleInfo;
  return battle_info_;
}
inline ::Packet::BattleInfo* ActorBasicInfo::release_battle_info() {
  SetDirty();
  clear_has_battle_info();
  ::Packet::BattleInfo* temp = battle_info_;
  battle_info_ = NULL;
  return temp;
}
inline void ActorBasicInfo::set_allocated_battle_info(::Packet::BattleInfo* battle_info) {
  SetDirty();
  delete battle_info_;
  battle_info_ = battle_info;
  if (battle_info) {
    set_has_battle_info();
  } else {
    clear_has_battle_info();
  }
}

// required .Packet.ActorType type = 9;
inline bool ActorBasicInfo::has_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ActorBasicInfo::set_has_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ActorBasicInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ActorBasicInfo::clear_type() {
  type_ = 1;
  clear_has_type();
  SetDirty();
}
inline ::Packet::ActorType ActorBasicInfo::type() const {
  return static_cast< ::Packet::ActorType >(type_);
}
inline void ActorBasicInfo::set_type(::Packet::ActorType value) {
  assert(::Packet::ActorType_IsValid(value));
  SetDirty();
  set_has_type();
  type_ = value;
}

// required int32 exp = 10;
inline bool ActorBasicInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ActorBasicInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ActorBasicInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ActorBasicInfo::clear_exp() {
  exp_ = 0;
  clear_has_exp();
  SetDirty();
}
inline ::google::protobuf::int32 ActorBasicInfo::exp() const {
  return exp_;
}
inline void ActorBasicInfo::set_exp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_exp();
  exp_ = value;
}

// required .Packet.ActorStar star = 11;
inline bool ActorBasicInfo::has_star() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ActorBasicInfo::set_has_star() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ActorBasicInfo::clear_has_star() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ActorBasicInfo::clear_star() {
  star_ = 1;
  clear_has_star();
  SetDirty();
}
inline ::Packet::ActorStar ActorBasicInfo::star() const {
  return static_cast< ::Packet::ActorStar >(star_);
}
inline void ActorBasicInfo::set_star(::Packet::ActorStar value) {
  assert(::Packet::ActorStar_IsValid(value));
  SetDirty();
  set_has_star();
  star_ = value;
}

// required .Packet.ActorColor color = 12;
inline bool ActorBasicInfo::has_color() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ActorBasicInfo::set_has_color() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ActorBasicInfo::clear_has_color() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ActorBasicInfo::clear_color() {
  color_ = 1;
  clear_has_color();
  SetDirty();
}
inline ::Packet::ActorColor ActorBasicInfo::color() const {
  return static_cast< ::Packet::ActorColor >(color_);
}
inline void ActorBasicInfo::set_color(::Packet::ActorColor value) {
  assert(::Packet::ActorColor_IsValid(value));
  SetDirty();
  set_has_color();
  color_ = value;
}

// required int32 level_2 = 13;
inline bool ActorBasicInfo::has_level_2() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ActorBasicInfo::set_has_level_2() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ActorBasicInfo::clear_has_level_2() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ActorBasicInfo::clear_level_2() {
  level_2_ = 0;
  clear_has_level_2();
  SetDirty();
}
inline ::google::protobuf::int32 ActorBasicInfo::level_2() const {
  return level_2_;
}
inline void ActorBasicInfo::set_level_2(::google::protobuf::int32 value) {
  SetDirty();
  set_has_level_2();
  level_2_ = value;
}

// required int32 exp_2 = 14;
inline bool ActorBasicInfo::has_exp_2() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ActorBasicInfo::set_has_exp_2() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ActorBasicInfo::clear_has_exp_2() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ActorBasicInfo::clear_exp_2() {
  exp_2_ = 0;
  clear_has_exp_2();
  SetDirty();
}
inline ::google::protobuf::int32 ActorBasicInfo::exp_2() const {
  return exp_2_;
}
inline void ActorBasicInfo::set_exp_2(::google::protobuf::int32 value) {
  SetDirty();
  set_has_exp_2();
  exp_2_ = value;
}

// required string name = 15;
inline bool ActorBasicInfo::has_name() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ActorBasicInfo::set_has_name() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ActorBasicInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ActorBasicInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
  SetDirty();
}
inline const ::std::string& ActorBasicInfo::name() const {
  return *name_;
}
inline void ActorBasicInfo::set_name(const ::std::string& value) {
  SetDirty();
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ActorBasicInfo::set_name(const char* value) {
  SetDirty();
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ActorBasicInfo::set_name(const char* value, size_t size) {
  SetDirty();
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ActorBasicInfo::mutable_name() {
  SetDirty();
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ActorBasicInfo::release_name() {
  SetDirty();
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ActorBasicInfo::set_allocated_name(::std::string* name) {
  SetDirty();
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 client_res_id = 16;
inline bool ActorBasicInfo::has_client_res_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ActorBasicInfo::set_has_client_res_id() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ActorBasicInfo::clear_has_client_res_id() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ActorBasicInfo::clear_client_res_id() {
  client_res_id_ = 0;
  clear_has_client_res_id();
  SetDirty();
}
inline ::google::protobuf::int32 ActorBasicInfo::client_res_id() const {
  return client_res_id_;
}
inline void ActorBasicInfo::set_client_res_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_client_res_id();
  client_res_id_ = value;
}

// required .Packet.ActorBattleType battle_type = 17;
inline bool ActorBasicInfo::has_battle_type() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ActorBasicInfo::set_has_battle_type() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ActorBasicInfo::clear_has_battle_type() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ActorBasicInfo::clear_battle_type() {
  battle_type_ = 1;
  clear_has_battle_type();
  SetDirty();
}
inline ::Packet::ActorBattleType ActorBasicInfo::battle_type() const {
  return static_cast< ::Packet::ActorBattleType >(battle_type_);
}
inline void ActorBasicInfo::set_battle_type(::Packet::ActorBattleType value) {
  assert(::Packet::ActorBattleType_IsValid(value));
  SetDirty();
  set_has_battle_type();
  battle_type_ = value;
}

// required int32 actor_config_id = 18;
inline bool ActorBasicInfo::has_actor_config_id() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ActorBasicInfo::set_has_actor_config_id() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ActorBasicInfo::clear_has_actor_config_id() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ActorBasicInfo::clear_actor_config_id() {
  actor_config_id_ = 0;
  clear_has_actor_config_id();
  SetDirty();
}
inline ::google::protobuf::int32 ActorBasicInfo::actor_config_id() const {
  return actor_config_id_;
}
inline void ActorBasicInfo::set_actor_config_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_actor_config_id();
  actor_config_id_ = value;
}

// required int32 score = 20;
inline bool ActorBasicInfo::has_score() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ActorBasicInfo::set_has_score() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ActorBasicInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ActorBasicInfo::clear_score() {
  score_ = 0;
  clear_has_score();
  SetDirty();
}
inline ::google::protobuf::int32 ActorBasicInfo::score() const {
  return score_;
}
inline void ActorBasicInfo::set_score(::google::protobuf::int32 value) {
  SetDirty();
  set_has_score();
  score_ = value;
}

// repeated int32 last_hp = 21;
inline int ActorBasicInfo::last_hp_size() const {
  return last_hp_.size();
}
inline void ActorBasicInfo::clear_last_hp() {
  last_hp_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 ActorBasicInfo::last_hp(int index) const {
  return last_hp_.Get(index);
}
inline void ActorBasicInfo::set_last_hp(int index, ::google::protobuf::int32 value) {
  SetDirty();
  last_hp_.Set(index, value);
}
inline void ActorBasicInfo::add_last_hp(::google::protobuf::int32 value) {
  SetDirty();
  last_hp_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ActorBasicInfo::last_hp() const {
  return last_hp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ActorBasicInfo::mutable_last_hp() {
  SetDirty();
  return &last_hp_;
}

// required int32 hair = 22;
inline bool ActorBasicInfo::has_hair() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ActorBasicInfo::set_has_hair() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ActorBasicInfo::clear_has_hair() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ActorBasicInfo::clear_hair() {
  hair_ = 0;
  clear_has_hair();
  SetDirty();
}
inline ::google::protobuf::int32 ActorBasicInfo::hair() const {
  return hair_;
}
inline void ActorBasicInfo::set_hair(::google::protobuf::int32 value) {
  SetDirty();
  set_has_hair();
  hair_ = value;
}

// required int32 gem_master_lv = 23;
inline bool ActorBasicInfo::has_gem_master_lv() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ActorBasicInfo::set_has_gem_master_lv() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ActorBasicInfo::clear_has_gem_master_lv() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ActorBasicInfo::clear_gem_master_lv() {
  gem_master_lv_ = 0;
  clear_has_gem_master_lv();
  SetDirty();
}
inline ::google::protobuf::int32 ActorBasicInfo::gem_master_lv() const {
  return gem_master_lv_;
}
inline void ActorBasicInfo::set_gem_master_lv(::google::protobuf::int32 value) {
  SetDirty();
  set_has_gem_master_lv();
  gem_master_lv_ = value;
}

// -------------------------------------------------------------------

// ActorFormationPull

// -------------------------------------------------------------------

// ActorFormation

// required fixed64 player_guid = 1;
inline bool ActorFormation::has_player_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorFormation::set_has_player_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorFormation::clear_has_player_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorFormation::clear_player_guid() {
  player_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_player_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorFormation::player_guid() const {
  return player_guid_;
}
inline void ActorFormation::set_player_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_player_guid();
  player_guid_ = value;
}

// required .Packet.ActorFigthFormation type = 2;
inline bool ActorFormation::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorFormation::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorFormation::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorFormation::clear_type() {
  type_ = 0;
  clear_has_type();
  SetDirty();
}
inline ::Packet::ActorFigthFormation ActorFormation::type() const {
  return static_cast< ::Packet::ActorFigthFormation >(type_);
}
inline void ActorFormation::set_type(::Packet::ActorFigthFormation value) {
  assert(::Packet::ActorFigthFormation_IsValid(value));
  SetDirty();
  set_has_type();
  type_ = value;
}

// repeated fixed64 actor_guids = 3;
inline int ActorFormation::actor_guids_size() const {
  return actor_guids_.size();
}
inline void ActorFormation::clear_actor_guids() {
  actor_guids_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorFormation::actor_guids(int index) const {
  return actor_guids_.Get(index);
}
inline void ActorFormation::set_actor_guids(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  actor_guids_.Set(index, value);
}
inline void ActorFormation::add_actor_guids(::google::protobuf::uint64 value) {
  SetDirty();
  actor_guids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ActorFormation::actor_guids() const {
  return actor_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ActorFormation::mutable_actor_guids() {
  SetDirty();
  return &actor_guids_;
}

// -------------------------------------------------------------------

// ActorFormationAll

// repeated .Packet.ActorFormation all_formations = 1;
inline int ActorFormationAll::all_formations_size() const {
  return all_formations_.size();
}
inline void ActorFormationAll::clear_all_formations() {
  all_formations_.Clear();
  SetDirty();
}
inline const ::Packet::ActorFormation& ActorFormationAll::all_formations(int index) const {
  return all_formations_.Get(index);
}
inline ::Packet::ActorFormation* ActorFormationAll::mutable_all_formations(int index) {
  SetDirty();
  return all_formations_.Mutable(index);
}
inline ::Packet::ActorFormation* ActorFormationAll::add_all_formations() {
  SetDirty();
  return all_formations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorFormation >&
ActorFormationAll::all_formations() const {
  return all_formations_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorFormation >*
ActorFormationAll::mutable_all_formations() {
  SetDirty();
  return &all_formations_;
}

// -------------------------------------------------------------------

// SetActorFightReq

// required .Packet.ActorFigthFormation type = 1;
inline bool SetActorFightReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetActorFightReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetActorFightReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetActorFightReq::clear_type() {
  type_ = 0;
  clear_has_type();
  SetDirty();
}
inline ::Packet::ActorFigthFormation SetActorFightReq::type() const {
  return static_cast< ::Packet::ActorFigthFormation >(type_);
}
inline void SetActorFightReq::set_type(::Packet::ActorFigthFormation value) {
  assert(::Packet::ActorFigthFormation_IsValid(value));
  SetDirty();
  set_has_type();
  type_ = value;
}

// repeated fixed64 guids = 2;
inline int SetActorFightReq::guids_size() const {
  return guids_.size();
}
inline void SetActorFightReq::clear_guids() {
  guids_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 SetActorFightReq::guids(int index) const {
  return guids_.Get(index);
}
inline void SetActorFightReq::set_guids(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  guids_.Set(index, value);
}
inline void SetActorFightReq::add_guids(::google::protobuf::uint64 value) {
  SetDirty();
  guids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SetActorFightReq::guids() const {
  return guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SetActorFightReq::mutable_guids() {
  SetDirty();
  return &guids_;
}

// -------------------------------------------------------------------

// ActorLevelAndExpUpdate

// required fixed64 guid = 1;
inline bool ActorLevelAndExpUpdate::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorLevelAndExpUpdate::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorLevelAndExpUpdate::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorLevelAndExpUpdate::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorLevelAndExpUpdate::guid() const {
  return guid_;
}
inline void ActorLevelAndExpUpdate::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required int32 new_level = 2;
inline bool ActorLevelAndExpUpdate::has_new_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorLevelAndExpUpdate::set_has_new_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorLevelAndExpUpdate::clear_has_new_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorLevelAndExpUpdate::clear_new_level() {
  new_level_ = 0;
  clear_has_new_level();
  SetDirty();
}
inline ::google::protobuf::int32 ActorLevelAndExpUpdate::new_level() const {
  return new_level_;
}
inline void ActorLevelAndExpUpdate::set_new_level(::google::protobuf::int32 value) {
  SetDirty();
  set_has_new_level();
  new_level_ = value;
}

// required int32 new_exp = 3;
inline bool ActorLevelAndExpUpdate::has_new_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorLevelAndExpUpdate::set_has_new_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorLevelAndExpUpdate::clear_has_new_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorLevelAndExpUpdate::clear_new_exp() {
  new_exp_ = 0;
  clear_has_new_exp();
  SetDirty();
}
inline ::google::protobuf::int32 ActorLevelAndExpUpdate::new_exp() const {
  return new_exp_;
}
inline void ActorLevelAndExpUpdate::set_new_exp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_new_exp();
  new_exp_ = value;
}

// -------------------------------------------------------------------

// ActorBattleInfoNotify

// required fixed64 guid = 1;
inline bool ActorBattleInfoNotify::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorBattleInfoNotify::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorBattleInfoNotify::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorBattleInfoNotify::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorBattleInfoNotify::guid() const {
  return guid_;
}
inline void ActorBattleInfoNotify::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required .Packet.BattleInfo battle_info = 2;
inline bool ActorBattleInfoNotify::has_battle_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorBattleInfoNotify::set_has_battle_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorBattleInfoNotify::clear_has_battle_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorBattleInfoNotify::clear_battle_info() {
  if (battle_info_ != NULL) battle_info_->::Packet::BattleInfo::Clear();
  clear_has_battle_info();
  SetDirty();
}
inline const ::Packet::BattleInfo& ActorBattleInfoNotify::battle_info() const {
  return battle_info_ != NULL ? *battle_info_ : *default_instance_->battle_info_;
}
inline ::Packet::BattleInfo* ActorBattleInfoNotify::mutable_battle_info() {
  SetDirty();
  set_has_battle_info();
  if (battle_info_ == NULL) battle_info_ = new ::Packet::BattleInfo;
  return battle_info_;
}
inline ::Packet::BattleInfo* ActorBattleInfoNotify::release_battle_info() {
  SetDirty();
  clear_has_battle_info();
  ::Packet::BattleInfo* temp = battle_info_;
  battle_info_ = NULL;
  return temp;
}
inline void ActorBattleInfoNotify::set_allocated_battle_info(::Packet::BattleInfo* battle_info) {
  SetDirty();
  delete battle_info_;
  battle_info_ = battle_info;
  if (battle_info) {
    set_has_battle_info();
  } else {
    clear_has_battle_info();
  }
}

// required int32 score = 3;
inline bool ActorBattleInfoNotify::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorBattleInfoNotify::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorBattleInfoNotify::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorBattleInfoNotify::clear_score() {
  score_ = 0;
  clear_has_score();
  SetDirty();
}
inline ::google::protobuf::int32 ActorBattleInfoNotify::score() const {
  return score_;
}
inline void ActorBattleInfoNotify::set_score(::google::protobuf::int32 value) {
  SetDirty();
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// ActorSkillRefresh

// required fixed64 actor_guid = 1;
inline bool ActorSkillRefresh::has_actor_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorSkillRefresh::set_has_actor_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorSkillRefresh::clear_has_actor_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorSkillRefresh::clear_actor_guid() {
  actor_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_actor_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorSkillRefresh::actor_guid() const {
  return actor_guid_;
}
inline void ActorSkillRefresh::set_actor_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_actor_guid();
  actor_guid_ = value;
}

// repeated .Packet.ActorSkill skills = 2;
inline int ActorSkillRefresh::skills_size() const {
  return skills_.size();
}
inline void ActorSkillRefresh::clear_skills() {
  skills_.Clear();
  SetDirty();
}
inline const ::Packet::ActorSkill& ActorSkillRefresh::skills(int index) const {
  return skills_.Get(index);
}
inline ::Packet::ActorSkill* ActorSkillRefresh::mutable_skills(int index) {
  SetDirty();
  return skills_.Mutable(index);
}
inline ::Packet::ActorSkill* ActorSkillRefresh::add_skills() {
  SetDirty();
  return skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorSkill >&
ActorSkillRefresh::skills() const {
  return skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorSkill >*
ActorSkillRefresh::mutable_skills() {
  SetDirty();
  return &skills_;
}

// -------------------------------------------------------------------

// ReNameRequest

// required string name = 1;
inline bool ReNameRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReNameRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReNameRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReNameRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
  SetDirty();
}
inline const ::std::string& ReNameRequest::name() const {
  return *name_;
}
inline void ReNameRequest::set_name(const ::std::string& value) {
  SetDirty();
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ReNameRequest::set_name(const char* value) {
  SetDirty();
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ReNameRequest::set_name(const char* value, size_t size) {
  SetDirty();
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReNameRequest::mutable_name() {
  SetDirty();
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ReNameRequest::release_name() {
  SetDirty();
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ReNameRequest::set_allocated_name(::std::string* name) {
  SetDirty();
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ActorSkill

// required fixed64 guid = 1;
inline bool ActorSkill::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorSkill::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorSkill::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorSkill::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorSkill::guid() const {
  return guid_;
}
inline void ActorSkill::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required fixed64 actor_guid = 2;
inline bool ActorSkill::has_actor_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorSkill::set_has_actor_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorSkill::clear_has_actor_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorSkill::clear_actor_guid() {
  actor_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_actor_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 ActorSkill::actor_guid() const {
  return actor_guid_;
}
inline void ActorSkill::set_actor_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_actor_guid();
  actor_guid_ = value;
}

// required int32 skill_id = 3;
inline bool ActorSkill::has_skill_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorSkill::set_has_skill_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorSkill::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorSkill::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
  SetDirty();
}
inline ::google::protobuf::int32 ActorSkill::skill_id() const {
  return skill_id_;
}
inline void ActorSkill::set_skill_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_skill_id();
  skill_id_ = value;
}

// required int32 skill_level = 4;
inline bool ActorSkill::has_skill_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActorSkill::set_has_skill_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActorSkill::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActorSkill::clear_skill_level() {
  skill_level_ = 0;
  clear_has_skill_level();
  SetDirty();
}
inline ::google::protobuf::int32 ActorSkill::skill_level() const {
  return skill_level_;
}
inline void ActorSkill::set_skill_level(::google::protobuf::int32 value) {
  SetDirty();
  set_has_skill_level();
  skill_level_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Packet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ActorBasicInfo_2eproto__INCLUDED

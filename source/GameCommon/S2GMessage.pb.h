// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: S2GMessage.proto

#ifndef PROTOBUF_S2GMessage_2eproto__INCLUDED
#define PROTOBUF_S2GMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Base.pb.h"
#include "ChatMessage.pb.h"
#include "ClientMove.pb.h"
#include "PlayerBasicInfo.pb.h"
#include "SceneStage.pb.h"
#include "ActorBasicInfo.pb.h"
#include "Guild.pb.h"
#include "BattleReply.pb.h"
// @@protoc_insertion_point(includes)

namespace S2G {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_S2GMessage_2eproto();
void protobuf_AssignDesc_S2GMessage_2eproto();
void protobuf_ShutdownFile_S2GMessage_2eproto();

class S2GCommonMessage;
class SaveBattleReply;
class TeamMemberChangeScene;
class TeamChat;
class GuildChat;
class WorldChat;
class InsertScenePlayer;
class GetOperateInfo;
class DestroyRoom;
class PlayerAutoMatch;
class EndGuildBoss;
class RefreshTarget;
class CheckOffLine;
class GuildBattleWeekRank;
class GuildBattleAllRank;
class XLuaRegNotify;
class LuaLoadNotify;
class BuffPoint;
class PlayerCaptureStatge;
class PlayerHookDataUpdate;
class HookStageDistributeUpdate;
class PlayerUpdateCaptureForm;
class AddGuildMoney;

// ===================================================================

class S2GCommonMessage : public ::google::protobuf::Message {
 public:
  S2GCommonMessage();
  virtual ~S2GCommonMessage();

  S2GCommonMessage(const S2GCommonMessage& from);

  inline S2GCommonMessage& operator=(const S2GCommonMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2GCommonMessage& default_instance();

  void Swap(S2GCommonMessage* other);

  // implements Message ----------------------------------------------

  S2GCommonMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2GCommonMessage& from);
  void MergeFrom(const S2GCommonMessage& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string request_name = 1;
  inline bool has_request_name() const;
  inline void clear_request_name();
  static const int kRequestNameFieldNumber = 1;
  inline const ::std::string& request_name() const;
  inline void set_request_name(const ::std::string& value);
  inline void set_request_name(const char* value);
  inline void set_request_name(const char* value, size_t size);
  inline ::std::string* mutable_request_name();
  inline ::std::string* release_request_name();
  inline void set_allocated_request_name(::std::string* request_name);

  // repeated int32 int32_params = 2;
  inline int int32_params_size() const;
  inline void clear_int32_params();
  static const int kInt32ParamsFieldNumber = 2;
  inline ::google::protobuf::int32 int32_params(int index) const;
  inline void set_int32_params(int index, ::google::protobuf::int32 value);
  inline void add_int32_params(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      int32_params() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_int32_params();

  // repeated fixed64 int64_params = 3;
  inline int int64_params_size() const;
  inline void clear_int64_params();
  static const int kInt64ParamsFieldNumber = 3;
  inline ::google::protobuf::uint64 int64_params(int index) const;
  inline void set_int64_params(int index, ::google::protobuf::uint64 value);
  inline void add_int64_params(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      int64_params() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_int64_params();

  // repeated string string_params = 4;
  inline int string_params_size() const;
  inline void clear_string_params();
  static const int kStringParamsFieldNumber = 4;
  inline const ::std::string& string_params(int index) const;
  inline ::std::string* mutable_string_params(int index);
  inline void set_string_params(int index, const ::std::string& value);
  inline void set_string_params(int index, const char* value);
  inline void set_string_params(int index, const char* value, size_t size);
  inline ::std::string* add_string_params();
  inline void add_string_params(const ::std::string& value);
  inline void add_string_params(const char* value);
  inline void add_string_params(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& string_params() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_string_params();

  // @@protoc_insertion_point(class_scope:S2G.S2GCommonMessage)
 private:
  inline void set_has_request_name();
  inline void clear_has_request_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* request_name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > int32_params_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > int64_params_;
  ::google::protobuf::RepeatedPtrField< ::std::string> string_params_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static S2GCommonMessage* default_instance_;
};
// -------------------------------------------------------------------

class SaveBattleReply : public ::google::protobuf::Message {
 public:
  SaveBattleReply();
  virtual ~SaveBattleReply();

  SaveBattleReply(const SaveBattleReply& from);

  inline SaveBattleReply& operator=(const SaveBattleReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveBattleReply& default_instance();

  void Swap(SaveBattleReply* other);

  // implements Message ----------------------------------------------

  SaveBattleReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SaveBattleReply& from);
  void MergeFrom(const SaveBattleReply& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.BattleReply reply = 1;
  inline bool has_reply() const;
  inline void clear_reply();
  static const int kReplyFieldNumber = 1;
  inline const ::Packet::BattleReply& reply() const;
  inline ::Packet::BattleReply* mutable_reply();
  inline ::Packet::BattleReply* release_reply();
  inline void set_allocated_reply(::Packet::BattleReply* reply);

  // @@protoc_insertion_point(class_scope:S2G.SaveBattleReply)
 private:
  inline void set_has_reply();
  inline void clear_has_reply();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::BattleReply* reply_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static SaveBattleReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamMemberChangeScene : public ::google::protobuf::Message {
 public:
  TeamMemberChangeScene();
  virtual ~TeamMemberChangeScene();

  TeamMemberChangeScene(const TeamMemberChangeScene& from);

  inline TeamMemberChangeScene& operator=(const TeamMemberChangeScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamMemberChangeScene& default_instance();

  void Swap(TeamMemberChangeScene* other);

  // implements Message ----------------------------------------------

  TeamMemberChangeScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamMemberChangeScene& from);
  void MergeFrom(const TeamMemberChangeScene& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 scene_id = 1;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);

  // optional .Packet.Position init_pos = 2;
  inline bool has_init_pos() const;
  inline void clear_init_pos();
  static const int kInitPosFieldNumber = 2;
  inline const ::Packet::Position& init_pos() const;
  inline ::Packet::Position* mutable_init_pos();
  inline ::Packet::Position* release_init_pos();
  inline void set_allocated_init_pos(::Packet::Position* init_pos);

  // optional int32 script_id = 3;
  inline bool has_script_id() const;
  inline void clear_script_id();
  static const int kScriptIdFieldNumber = 3;
  inline ::google::protobuf::int32 script_id() const;
  inline void set_script_id(::google::protobuf::int32 value);

  // optional int32 rtid = 4;
  inline bool has_rtid() const;
  inline void clear_rtid();
  static const int kRtidFieldNumber = 4;
  inline ::google::protobuf::int32 rtid() const;
  inline void set_rtid(::google::protobuf::int32 value);

  // optional int32 camp = 5;
  inline bool has_camp() const;
  inline void clear_camp();
  static const int kCampFieldNumber = 5;
  inline ::google::protobuf::int32 camp() const;
  inline void set_camp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2G.TeamMemberChangeScene)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_init_pos();
  inline void clear_has_init_pos();
  inline void set_has_script_id();
  inline void clear_has_script_id();
  inline void set_has_rtid();
  inline void clear_has_rtid();
  inline void set_has_camp();
  inline void clear_has_camp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::Position* init_pos_;
  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::int32 script_id_;
  ::google::protobuf::int32 rtid_;
  ::google::protobuf::int32 camp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static TeamMemberChangeScene* default_instance_;
};
// -------------------------------------------------------------------

class TeamChat : public ::google::protobuf::Message {
 public:
  TeamChat();
  virtual ~TeamChat();

  TeamChat(const TeamChat& from);

  inline TeamChat& operator=(const TeamChat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamChat& default_instance();

  void Swap(TeamChat* other);

  // implements Message ----------------------------------------------

  TeamChat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamChat& from);
  void MergeFrom(const TeamChat& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // required .Packet.ChatMessage msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::Packet::ChatMessage& msg() const;
  inline ::Packet::ChatMessage* mutable_msg();
  inline ::Packet::ChatMessage* release_msg();
  inline void set_allocated_msg(::Packet::ChatMessage* msg);

  // @@protoc_insertion_point(class_scope:S2G.TeamChat)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 teamid_;
  ::Packet::ChatMessage* msg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static TeamChat* default_instance_;
};
// -------------------------------------------------------------------

class GuildChat : public ::google::protobuf::Message {
 public:
  GuildChat();
  virtual ~GuildChat();

  GuildChat(const GuildChat& from);

  inline GuildChat& operator=(const GuildChat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildChat& default_instance();

  void Swap(GuildChat* other);

  // implements Message ----------------------------------------------

  GuildChat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildChat& from);
  void MergeFrom(const GuildChat& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guildid = 1;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // required .Packet.ChatMessage msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::Packet::ChatMessage& msg() const;
  inline ::Packet::ChatMessage* mutable_msg();
  inline ::Packet::ChatMessage* release_msg();
  inline void set_allocated_msg(::Packet::ChatMessage* msg);

  // @@protoc_insertion_point(class_scope:S2G.GuildChat)
 private:
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guildid_;
  ::Packet::ChatMessage* msg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static GuildChat* default_instance_;
};
// -------------------------------------------------------------------

class WorldChat : public ::google::protobuf::Message {
 public:
  WorldChat();
  virtual ~WorldChat();

  WorldChat(const WorldChat& from);

  inline WorldChat& operator=(const WorldChat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldChat& default_instance();

  void Swap(WorldChat* other);

  // implements Message ----------------------------------------------

  WorldChat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldChat& from);
  void MergeFrom(const WorldChat& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.ChatMessage msg = 1;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 1;
  inline const ::Packet::ChatMessage& msg() const;
  inline ::Packet::ChatMessage* mutable_msg();
  inline ::Packet::ChatMessage* release_msg();
  inline void set_allocated_msg(::Packet::ChatMessage* msg);

  // @@protoc_insertion_point(class_scope:S2G.WorldChat)
 private:
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::ChatMessage* msg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static WorldChat* default_instance_;
};
// -------------------------------------------------------------------

class InsertScenePlayer : public ::google::protobuf::Message {
 public:
  InsertScenePlayer();
  virtual ~InsertScenePlayer();

  InsertScenePlayer(const InsertScenePlayer& from);

  inline InsertScenePlayer& operator=(const InsertScenePlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InsertScenePlayer& default_instance();

  void Swap(InsertScenePlayer* other);

  // implements Message ----------------------------------------------

  InsertScenePlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InsertScenePlayer& from);
  void MergeFrom(const InsertScenePlayer& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.ScenePlayerInfo msg = 1;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 1;
  inline const ::Packet::ScenePlayerInfo& msg() const;
  inline ::Packet::ScenePlayerInfo* mutable_msg();
  inline ::Packet::ScenePlayerInfo* release_msg();
  inline void set_allocated_msg(::Packet::ScenePlayerInfo* msg);

  // @@protoc_insertion_point(class_scope:S2G.InsertScenePlayer)
 private:
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::ScenePlayerInfo* msg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static InsertScenePlayer* default_instance_;
};
// -------------------------------------------------------------------

class GetOperateInfo : public ::google::protobuf::Message {
 public:
  GetOperateInfo();
  virtual ~GetOperateInfo();

  GetOperateInfo(const GetOperateInfo& from);

  inline GetOperateInfo& operator=(const GetOperateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOperateInfo& default_instance();

  void Swap(GetOperateInfo* other);

  // implements Message ----------------------------------------------

  GetOperateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetOperateInfo& from);
  void MergeFrom(const GetOperateInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:S2G.GetOperateInfo)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static GetOperateInfo* default_instance_;
};
// -------------------------------------------------------------------

class DestroyRoom : public ::google::protobuf::Message {
 public:
  DestroyRoom();
  virtual ~DestroyRoom();

  DestroyRoom(const DestroyRoom& from);

  inline DestroyRoom& operator=(const DestroyRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyRoom& default_instance();

  void Swap(DestroyRoom* other);

  // implements Message ----------------------------------------------

  DestroyRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestroyRoom& from);
  void MergeFrom(const DestroyRoom& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rtid = 1;
  inline bool has_rtid() const;
  inline void clear_rtid();
  static const int kRtidFieldNumber = 1;
  inline ::google::protobuf::int32 rtid() const;
  inline void set_rtid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2G.DestroyRoom)
 private:
  inline void set_has_rtid();
  inline void clear_has_rtid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 rtid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static DestroyRoom* default_instance_;
};
// -------------------------------------------------------------------

class PlayerAutoMatch : public ::google::protobuf::Message {
 public:
  PlayerAutoMatch();
  virtual ~PlayerAutoMatch();

  PlayerAutoMatch(const PlayerAutoMatch& from);

  inline PlayerAutoMatch& operator=(const PlayerAutoMatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerAutoMatch& default_instance();

  void Swap(PlayerAutoMatch* other);

  // implements Message ----------------------------------------------

  PlayerAutoMatch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerAutoMatch& from);
  void MergeFrom(const PlayerAutoMatch& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 purpose = 1;
  inline bool has_purpose() const;
  inline void clear_purpose();
  static const int kPurposeFieldNumber = 1;
  inline ::google::protobuf::int32 purpose() const;
  inline void set_purpose(::google::protobuf::int32 value);

  // required bool setauto = 2;
  inline bool has_setauto() const;
  inline void clear_setauto();
  static const int kSetautoFieldNumber = 2;
  inline bool setauto() const;
  inline void set_setauto(bool value);

  // @@protoc_insertion_point(class_scope:S2G.PlayerAutoMatch)
 private:
  inline void set_has_purpose();
  inline void clear_has_purpose();
  inline void set_has_setauto();
  inline void clear_has_setauto();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 purpose_;
  bool setauto_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static PlayerAutoMatch* default_instance_;
};
// -------------------------------------------------------------------

class EndGuildBoss : public ::google::protobuf::Message {
 public:
  EndGuildBoss();
  virtual ~EndGuildBoss();

  EndGuildBoss(const EndGuildBoss& from);

  inline EndGuildBoss& operator=(const EndGuildBoss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EndGuildBoss& default_instance();

  void Swap(EndGuildBoss* other);

  // implements Message ----------------------------------------------

  EndGuildBoss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EndGuildBoss& from);
  void MergeFrom(const EndGuildBoss& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required fixed64 guild_id = 2;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 2;
  inline ::google::protobuf::uint64 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint64 value);

  // required int32 damage = 3;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 3;
  inline ::google::protobuf::int32 damage() const;
  inline void set_damage(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2G.EndGuildBoss)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_damage();
  inline void clear_has_damage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 guild_id_;
  ::google::protobuf::int32 damage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static EndGuildBoss* default_instance_;
};
// -------------------------------------------------------------------

class RefreshTarget : public ::google::protobuf::Message {
 public:
  RefreshTarget();
  virtual ~RefreshTarget();

  RefreshTarget(const RefreshTarget& from);

  inline RefreshTarget& operator=(const RefreshTarget& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshTarget& default_instance();

  void Swap(RefreshTarget* other);

  // implements Message ----------------------------------------------

  RefreshTarget* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshTarget& from);
  void MergeFrom(const RefreshTarget& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required int32 wave = 2;
  inline bool has_wave() const;
  inline void clear_wave();
  static const int kWaveFieldNumber = 2;
  inline ::google::protobuf::int32 wave() const;
  inline void set_wave(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2G.RefreshTarget)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_wave();
  inline void clear_has_wave();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 wave_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static RefreshTarget* default_instance_;
};
// -------------------------------------------------------------------

class CheckOffLine : public ::google::protobuf::Message {
 public:
  CheckOffLine();
  virtual ~CheckOffLine();

  CheckOffLine(const CheckOffLine& from);

  inline CheckOffLine& operator=(const CheckOffLine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckOffLine& default_instance();

  void Swap(CheckOffLine* other);

  // implements Message ----------------------------------------------

  CheckOffLine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckOffLine& from);
  void MergeFrom(const CheckOffLine& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 guid = 1;
  inline int guid_size() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid(int index) const;
  inline void set_guid(int index, ::google::protobuf::uint64 value);
  inline void add_guid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guid();

  // repeated uint32 stamp = 2;
  inline int stamp_size() const;
  inline void clear_stamp();
  static const int kStampFieldNumber = 2;
  inline ::google::protobuf::uint32 stamp(int index) const;
  inline void set_stamp(int index, ::google::protobuf::uint32 value);
  inline void add_stamp(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      stamp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_stamp();

  // @@protoc_insertion_point(class_scope:S2G.CheckOffLine)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > stamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static CheckOffLine* default_instance_;
};
// -------------------------------------------------------------------

class GuildBattleWeekRank : public ::google::protobuf::Message {
 public:
  GuildBattleWeekRank();
  virtual ~GuildBattleWeekRank();

  GuildBattleWeekRank(const GuildBattleWeekRank& from);

  inline GuildBattleWeekRank& operator=(const GuildBattleWeekRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildBattleWeekRank& default_instance();

  void Swap(GuildBattleWeekRank* other);

  // implements Message ----------------------------------------------

  GuildBattleWeekRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildBattleWeekRank& from);
  void MergeFrom(const GuildBattleWeekRank& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.GuildBattleWeekRankInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::Packet::GuildBattleWeekRankInfo& info() const;
  inline ::Packet::GuildBattleWeekRankInfo* mutable_info();
  inline ::Packet::GuildBattleWeekRankInfo* release_info();
  inline void set_allocated_info(::Packet::GuildBattleWeekRankInfo* info);

  // @@protoc_insertion_point(class_scope:S2G.GuildBattleWeekRank)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::GuildBattleWeekRankInfo* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static GuildBattleWeekRank* default_instance_;
};
// -------------------------------------------------------------------

class GuildBattleAllRank : public ::google::protobuf::Message {
 public:
  GuildBattleAllRank();
  virtual ~GuildBattleAllRank();

  GuildBattleAllRank(const GuildBattleAllRank& from);

  inline GuildBattleAllRank& operator=(const GuildBattleAllRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildBattleAllRank& default_instance();

  void Swap(GuildBattleAllRank* other);

  // implements Message ----------------------------------------------

  GuildBattleAllRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildBattleAllRank& from);
  void MergeFrom(const GuildBattleAllRank& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.GuildBattleAllRankInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::Packet::GuildBattleAllRankInfo& info() const;
  inline ::Packet::GuildBattleAllRankInfo* mutable_info();
  inline ::Packet::GuildBattleAllRankInfo* release_info();
  inline void set_allocated_info(::Packet::GuildBattleAllRankInfo* info);

  // @@protoc_insertion_point(class_scope:S2G.GuildBattleAllRank)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::GuildBattleAllRankInfo* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static GuildBattleAllRank* default_instance_;
};
// -------------------------------------------------------------------

class XLuaRegNotify : public ::google::protobuf::Message {
 public:
  XLuaRegNotify();
  virtual ~XLuaRegNotify();

  XLuaRegNotify(const XLuaRegNotify& from);

  inline XLuaRegNotify& operator=(const XLuaRegNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XLuaRegNotify& default_instance();

  void Swap(XLuaRegNotify* other);

  // implements Message ----------------------------------------------

  XLuaRegNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const XLuaRegNotify& from);
  void MergeFrom(const XLuaRegNotify& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:S2G.XLuaRegNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static XLuaRegNotify* default_instance_;
};
// -------------------------------------------------------------------

class LuaLoadNotify : public ::google::protobuf::Message {
 public:
  LuaLoadNotify();
  virtual ~LuaLoadNotify();

  LuaLoadNotify(const LuaLoadNotify& from);

  inline LuaLoadNotify& operator=(const LuaLoadNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LuaLoadNotify& default_instance();

  void Swap(LuaLoadNotify* other);

  // implements Message ----------------------------------------------

  LuaLoadNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LuaLoadNotify& from);
  void MergeFrom(const LuaLoadNotify& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 ids = 1;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 1;
  inline ::google::protobuf::int32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::int32 value);
  inline void add_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:S2G.LuaLoadNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static LuaLoadNotify* default_instance_;
};
// -------------------------------------------------------------------

class BuffPoint : public ::google::protobuf::Message {
 public:
  BuffPoint();
  virtual ~BuffPoint();

  BuffPoint(const BuffPoint& from);

  inline BuffPoint& operator=(const BuffPoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffPoint& default_instance();

  void Swap(BuffPoint* other);

  // implements Message ----------------------------------------------

  BuffPoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffPoint& from);
  void MergeFrom(const BuffPoint& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 posindex = 1;
  inline bool has_posindex() const;
  inline void clear_posindex();
  static const int kPosindexFieldNumber = 1;
  inline ::google::protobuf::int32 posindex() const;
  inline void set_posindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2G.BuffPoint)
 private:
  inline void set_has_posindex();
  inline void clear_has_posindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 posindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static BuffPoint* default_instance_;
};
// -------------------------------------------------------------------

class PlayerCaptureStatge : public ::google::protobuf::Message {
 public:
  PlayerCaptureStatge();
  virtual ~PlayerCaptureStatge();

  PlayerCaptureStatge(const PlayerCaptureStatge& from);

  inline PlayerCaptureStatge& operator=(const PlayerCaptureStatge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCaptureStatge& default_instance();

  void Swap(PlayerCaptureStatge* other);

  // implements Message ----------------------------------------------

  PlayerCaptureStatge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerCaptureStatge& from);
  void MergeFrom(const PlayerCaptureStatge& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 stage_id = 1;
  inline bool has_stage_id() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 1;
  inline ::google::protobuf::int32 stage_id() const;
  inline void set_stage_id(::google::protobuf::int32 value);

  // required bool win_battle = 2;
  inline bool has_win_battle() const;
  inline void clear_win_battle();
  static const int kWinBattleFieldNumber = 2;
  inline bool win_battle() const;
  inline void set_win_battle(bool value);

  // optional .Packet.PlayerBasicInfo player_info = 3;
  inline bool has_player_info() const;
  inline void clear_player_info();
  static const int kPlayerInfoFieldNumber = 3;
  inline const ::Packet::PlayerBasicInfo& player_info() const;
  inline ::Packet::PlayerBasicInfo* mutable_player_info();
  inline ::Packet::PlayerBasicInfo* release_player_info();
  inline void set_allocated_player_info(::Packet::PlayerBasicInfo* player_info);

  // repeated .Packet.ActorFullInfo actors = 4;
  inline int actors_size() const;
  inline void clear_actors();
  static const int kActorsFieldNumber = 4;
  inline const ::Packet::ActorFullInfo& actors(int index) const;
  inline ::Packet::ActorFullInfo* mutable_actors(int index);
  inline ::Packet::ActorFullInfo* add_actors();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo >&
      actors() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo >*
      mutable_actors();

  // @@protoc_insertion_point(class_scope:S2G.PlayerCaptureStatge)
 private:
  inline void set_has_stage_id();
  inline void clear_has_stage_id();
  inline void set_has_win_battle();
  inline void clear_has_win_battle();
  inline void set_has_player_info();
  inline void clear_has_player_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 stage_id_;
  bool win_battle_;
  ::Packet::PlayerBasicInfo* player_info_;
  ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo > actors_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static PlayerCaptureStatge* default_instance_;
};
// -------------------------------------------------------------------

class PlayerHookDataUpdate : public ::google::protobuf::Message {
 public:
  PlayerHookDataUpdate();
  virtual ~PlayerHookDataUpdate();

  PlayerHookDataUpdate(const PlayerHookDataUpdate& from);

  inline PlayerHookDataUpdate& operator=(const PlayerHookDataUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerHookDataUpdate& default_instance();

  void Swap(PlayerHookDataUpdate* other);

  // implements Message ----------------------------------------------

  PlayerHookDataUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerHookDataUpdate& from);
  void MergeFrom(const PlayerHookDataUpdate& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 stage_id = 1;
  inline bool has_stage_id() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 1;
  inline ::google::protobuf::int32 stage_id() const;
  inline void set_stage_id(::google::protobuf::int32 value);

  // required fixed64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required .Packet.BattleFormation form = 4;
  inline bool has_form() const;
  inline void clear_form();
  static const int kFormFieldNumber = 4;
  inline const ::Packet::BattleFormation& form() const;
  inline ::Packet::BattleFormation* mutable_form();
  inline ::Packet::BattleFormation* release_form();
  inline void set_allocated_form(::Packet::BattleFormation* form);

  // required int32 time_cost = 5;
  inline bool has_time_cost() const;
  inline void clear_time_cost();
  static const int kTimeCostFieldNumber = 5;
  inline ::google::protobuf::int32 time_cost() const;
  inline void set_time_cost(::google::protobuf::int32 value);

  // required int32 score = 6;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 6;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // required int32 hook_time = 7;
  inline bool has_hook_time() const;
  inline void clear_hook_time();
  static const int kHookTimeFieldNumber = 7;
  inline ::google::protobuf::int32 hook_time() const;
  inline void set_hook_time(::google::protobuf::int32 value);

  // required int32 income_per_min = 8;
  inline bool has_income_per_min() const;
  inline void clear_income_per_min();
  static const int kIncomePerMinFieldNumber = 8;
  inline ::google::protobuf::int32 income_per_min() const;
  inline void set_income_per_min(::google::protobuf::int32 value);

  // required int32 exp_pre_min = 9;
  inline bool has_exp_pre_min() const;
  inline void clear_exp_pre_min();
  static const int kExpPreMinFieldNumber = 9;
  inline ::google::protobuf::int32 exp_pre_min() const;
  inline void set_exp_pre_min(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2G.PlayerHookDataUpdate)
 private:
  inline void set_has_stage_id();
  inline void clear_has_stage_id();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_form();
  inline void clear_has_form();
  inline void set_has_time_cost();
  inline void clear_has_time_cost();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_hook_time();
  inline void clear_has_hook_time();
  inline void set_has_income_per_min();
  inline void clear_has_income_per_min();
  inline void set_has_exp_pre_min();
  inline void clear_has_exp_pre_min();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::std::string* name_;
  ::google::protobuf::int32 stage_id_;
  ::google::protobuf::int32 time_cost_;
  ::Packet::BattleFormation* form_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 hook_time_;
  ::google::protobuf::int32 income_per_min_;
  ::google::protobuf::int32 exp_pre_min_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static PlayerHookDataUpdate* default_instance_;
};
// -------------------------------------------------------------------

class HookStageDistributeUpdate : public ::google::protobuf::Message {
 public:
  HookStageDistributeUpdate();
  virtual ~HookStageDistributeUpdate();

  HookStageDistributeUpdate(const HookStageDistributeUpdate& from);

  inline HookStageDistributeUpdate& operator=(const HookStageDistributeUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HookStageDistributeUpdate& default_instance();

  void Swap(HookStageDistributeUpdate* other);

  // implements Message ----------------------------------------------

  HookStageDistributeUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HookStageDistributeUpdate& from);
  void MergeFrom(const HookStageDistributeUpdate& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 scene_id = 1;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);

  // repeated int32 stage_id = 2;
  inline int stage_id_size() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 2;
  inline ::google::protobuf::int32 stage_id(int index) const;
  inline void set_stage_id(int index, ::google::protobuf::int32 value);
  inline void add_stage_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      stage_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_stage_id();

  // repeated int32 player_count = 3;
  inline int player_count_size() const;
  inline void clear_player_count();
  static const int kPlayerCountFieldNumber = 3;
  inline ::google::protobuf::int32 player_count(int index) const;
  inline void set_player_count(int index, ::google::protobuf::int32 value);
  inline void add_player_count(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_count() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_count();

  // @@protoc_insertion_point(class_scope:S2G.HookStageDistributeUpdate)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stage_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_count_;
  ::google::protobuf::int32 scene_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static HookStageDistributeUpdate* default_instance_;
};
// -------------------------------------------------------------------

class PlayerUpdateCaptureForm : public ::google::protobuf::Message {
 public:
  PlayerUpdateCaptureForm();
  virtual ~PlayerUpdateCaptureForm();

  PlayerUpdateCaptureForm(const PlayerUpdateCaptureForm& from);

  inline PlayerUpdateCaptureForm& operator=(const PlayerUpdateCaptureForm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerUpdateCaptureForm& default_instance();

  void Swap(PlayerUpdateCaptureForm* other);

  // implements Message ----------------------------------------------

  PlayerUpdateCaptureForm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerUpdateCaptureForm& from);
  void MergeFrom(const PlayerUpdateCaptureForm& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Packet.PlayerBasicInfo player_info = 1;
  inline bool has_player_info() const;
  inline void clear_player_info();
  static const int kPlayerInfoFieldNumber = 1;
  inline const ::Packet::PlayerBasicInfo& player_info() const;
  inline ::Packet::PlayerBasicInfo* mutable_player_info();
  inline ::Packet::PlayerBasicInfo* release_player_info();
  inline void set_allocated_player_info(::Packet::PlayerBasicInfo* player_info);

  // repeated .Packet.ActorFullInfo actors = 2;
  inline int actors_size() const;
  inline void clear_actors();
  static const int kActorsFieldNumber = 2;
  inline const ::Packet::ActorFullInfo& actors(int index) const;
  inline ::Packet::ActorFullInfo* mutable_actors(int index);
  inline ::Packet::ActorFullInfo* add_actors();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo >&
      actors() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo >*
      mutable_actors();

  // @@protoc_insertion_point(class_scope:S2G.PlayerUpdateCaptureForm)
 private:
  inline void set_has_player_info();
  inline void clear_has_player_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Packet::PlayerBasicInfo* player_info_;
  ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo > actors_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static PlayerUpdateCaptureForm* default_instance_;
};
// -------------------------------------------------------------------

class AddGuildMoney : public ::google::protobuf::Message {
 public:
  AddGuildMoney();
  virtual ~AddGuildMoney();

  AddGuildMoney(const AddGuildMoney& from);

  inline AddGuildMoney& operator=(const AddGuildMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddGuildMoney& default_instance();

  void Swap(AddGuildMoney* other);

  // implements Message ----------------------------------------------

  AddGuildMoney* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddGuildMoney& from);
  void MergeFrom(const AddGuildMoney& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 guildid = 1;
  inline bool has_guildid() const;
  inline void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  inline ::google::protobuf::uint64 guildid() const;
  inline void set_guildid(::google::protobuf::uint64 value);

  // required int32 addcount = 2;
  inline bool has_addcount() const;
  inline void clear_addcount();
  static const int kAddcountFieldNumber = 2;
  inline ::google::protobuf::int32 addcount() const;
  inline void set_addcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2G.AddGuildMoney)
 private:
  inline void set_has_guildid();
  inline void clear_has_guildid();
  inline void set_has_addcount();
  inline void clear_has_addcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::int32 addcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_S2GMessage_2eproto();
  friend void protobuf_AssignDesc_S2GMessage_2eproto();
  friend void protobuf_ShutdownFile_S2GMessage_2eproto();

  void InitAsDefaultInstance();
  static AddGuildMoney* default_instance_;
};
// ===================================================================


// ===================================================================

// S2GCommonMessage

// required string request_name = 1;
inline bool S2GCommonMessage::has_request_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2GCommonMessage::set_has_request_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2GCommonMessage::clear_has_request_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2GCommonMessage::clear_request_name() {
  if (request_name_ != &::google::protobuf::internal::kEmptyString) {
    request_name_->clear();
  }
  clear_has_request_name();
  SetDirty();
}
inline const ::std::string& S2GCommonMessage::request_name() const {
  return *request_name_;
}
inline void S2GCommonMessage::set_request_name(const ::std::string& value) {
  SetDirty();
  set_has_request_name();
  if (request_name_ == &::google::protobuf::internal::kEmptyString) {
    request_name_ = new ::std::string;
  }
  request_name_->assign(value);
}
inline void S2GCommonMessage::set_request_name(const char* value) {
  SetDirty();
  set_has_request_name();
  if (request_name_ == &::google::protobuf::internal::kEmptyString) {
    request_name_ = new ::std::string;
  }
  request_name_->assign(value);
}
inline void S2GCommonMessage::set_request_name(const char* value, size_t size) {
  SetDirty();
  set_has_request_name();
  if (request_name_ == &::google::protobuf::internal::kEmptyString) {
    request_name_ = new ::std::string;
  }
  request_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2GCommonMessage::mutable_request_name() {
  SetDirty();
  set_has_request_name();
  if (request_name_ == &::google::protobuf::internal::kEmptyString) {
    request_name_ = new ::std::string;
  }
  return request_name_;
}
inline ::std::string* S2GCommonMessage::release_request_name() {
  SetDirty();
  clear_has_request_name();
  if (request_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = request_name_;
    request_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2GCommonMessage::set_allocated_request_name(::std::string* request_name) {
  SetDirty();
  if (request_name_ != &::google::protobuf::internal::kEmptyString) {
    delete request_name_;
  }
  if (request_name) {
    set_has_request_name();
    request_name_ = request_name;
  } else {
    clear_has_request_name();
    request_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 int32_params = 2;
inline int S2GCommonMessage::int32_params_size() const {
  return int32_params_.size();
}
inline void S2GCommonMessage::clear_int32_params() {
  int32_params_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 S2GCommonMessage::int32_params(int index) const {
  return int32_params_.Get(index);
}
inline void S2GCommonMessage::set_int32_params(int index, ::google::protobuf::int32 value) {
  SetDirty();
  int32_params_.Set(index, value);
}
inline void S2GCommonMessage::add_int32_params(::google::protobuf::int32 value) {
  SetDirty();
  int32_params_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
S2GCommonMessage::int32_params() const {
  return int32_params_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
S2GCommonMessage::mutable_int32_params() {
  SetDirty();
  return &int32_params_;
}

// repeated fixed64 int64_params = 3;
inline int S2GCommonMessage::int64_params_size() const {
  return int64_params_.size();
}
inline void S2GCommonMessage::clear_int64_params() {
  int64_params_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 S2GCommonMessage::int64_params(int index) const {
  return int64_params_.Get(index);
}
inline void S2GCommonMessage::set_int64_params(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  int64_params_.Set(index, value);
}
inline void S2GCommonMessage::add_int64_params(::google::protobuf::uint64 value) {
  SetDirty();
  int64_params_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2GCommonMessage::int64_params() const {
  return int64_params_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2GCommonMessage::mutable_int64_params() {
  SetDirty();
  return &int64_params_;
}

// repeated string string_params = 4;
inline int S2GCommonMessage::string_params_size() const {
  return string_params_.size();
}
inline void S2GCommonMessage::clear_string_params() {
  string_params_.Clear();
  SetDirty();
}
inline const ::std::string& S2GCommonMessage::string_params(int index) const {
  return string_params_.Get(index);
}
inline ::std::string* S2GCommonMessage::mutable_string_params(int index) {
  SetDirty();
  return string_params_.Mutable(index);
}
inline void S2GCommonMessage::set_string_params(int index, const ::std::string& value) {
  SetDirty();
  string_params_.Mutable(index)->assign(value);
}
inline void S2GCommonMessage::set_string_params(int index, const char* value) {
  SetDirty();
  string_params_.Mutable(index)->assign(value);
}
inline void S2GCommonMessage::set_string_params(int index, const char* value, size_t size) {
  SetDirty();
  string_params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2GCommonMessage::add_string_params() {
  SetDirty();
  return string_params_.Add();
}
inline void S2GCommonMessage::add_string_params(const ::std::string& value) {
  SetDirty();
  string_params_.Add()->assign(value);
}
inline void S2GCommonMessage::add_string_params(const char* value) {
  SetDirty();
  string_params_.Add()->assign(value);
}
inline void S2GCommonMessage::add_string_params(const char* value, size_t size) {
  SetDirty();
  string_params_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
S2GCommonMessage::string_params() const {
  return string_params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
S2GCommonMessage::mutable_string_params() {
  SetDirty();
  return &string_params_;
}

// -------------------------------------------------------------------

// SaveBattleReply

// required .Packet.BattleReply reply = 1;
inline bool SaveBattleReply::has_reply() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SaveBattleReply::set_has_reply() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SaveBattleReply::clear_has_reply() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SaveBattleReply::clear_reply() {
  if (reply_ != NULL) reply_->::Packet::BattleReply::Clear();
  clear_has_reply();
  SetDirty();
}
inline const ::Packet::BattleReply& SaveBattleReply::reply() const {
  return reply_ != NULL ? *reply_ : *default_instance_->reply_;
}
inline ::Packet::BattleReply* SaveBattleReply::mutable_reply() {
  SetDirty();
  set_has_reply();
  if (reply_ == NULL) reply_ = new ::Packet::BattleReply;
  return reply_;
}
inline ::Packet::BattleReply* SaveBattleReply::release_reply() {
  SetDirty();
  clear_has_reply();
  ::Packet::BattleReply* temp = reply_;
  reply_ = NULL;
  return temp;
}
inline void SaveBattleReply::set_allocated_reply(::Packet::BattleReply* reply) {
  SetDirty();
  delete reply_;
  reply_ = reply;
  if (reply) {
    set_has_reply();
  } else {
    clear_has_reply();
  }
}

// -------------------------------------------------------------------

// TeamMemberChangeScene

// required int32 scene_id = 1;
inline bool TeamMemberChangeScene::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamMemberChangeScene::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamMemberChangeScene::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamMemberChangeScene::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
  SetDirty();
}
inline ::google::protobuf::int32 TeamMemberChangeScene::scene_id() const {
  return scene_id_;
}
inline void TeamMemberChangeScene::set_scene_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_scene_id();
  scene_id_ = value;
}

// optional .Packet.Position init_pos = 2;
inline bool TeamMemberChangeScene::has_init_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamMemberChangeScene::set_has_init_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamMemberChangeScene::clear_has_init_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamMemberChangeScene::clear_init_pos() {
  if (init_pos_ != NULL) init_pos_->::Packet::Position::Clear();
  clear_has_init_pos();
  SetDirty();
}
inline const ::Packet::Position& TeamMemberChangeScene::init_pos() const {
  return init_pos_ != NULL ? *init_pos_ : *default_instance_->init_pos_;
}
inline ::Packet::Position* TeamMemberChangeScene::mutable_init_pos() {
  SetDirty();
  set_has_init_pos();
  if (init_pos_ == NULL) init_pos_ = new ::Packet::Position;
  return init_pos_;
}
inline ::Packet::Position* TeamMemberChangeScene::release_init_pos() {
  SetDirty();
  clear_has_init_pos();
  ::Packet::Position* temp = init_pos_;
  init_pos_ = NULL;
  return temp;
}
inline void TeamMemberChangeScene::set_allocated_init_pos(::Packet::Position* init_pos) {
  SetDirty();
  delete init_pos_;
  init_pos_ = init_pos;
  if (init_pos) {
    set_has_init_pos();
  } else {
    clear_has_init_pos();
  }
}

// optional int32 script_id = 3;
inline bool TeamMemberChangeScene::has_script_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamMemberChangeScene::set_has_script_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamMemberChangeScene::clear_has_script_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamMemberChangeScene::clear_script_id() {
  script_id_ = 0;
  clear_has_script_id();
  SetDirty();
}
inline ::google::protobuf::int32 TeamMemberChangeScene::script_id() const {
  return script_id_;
}
inline void TeamMemberChangeScene::set_script_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_script_id();
  script_id_ = value;
}

// optional int32 rtid = 4;
inline bool TeamMemberChangeScene::has_rtid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamMemberChangeScene::set_has_rtid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamMemberChangeScene::clear_has_rtid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamMemberChangeScene::clear_rtid() {
  rtid_ = 0;
  clear_has_rtid();
  SetDirty();
}
inline ::google::protobuf::int32 TeamMemberChangeScene::rtid() const {
  return rtid_;
}
inline void TeamMemberChangeScene::set_rtid(::google::protobuf::int32 value) {
  SetDirty();
  set_has_rtid();
  rtid_ = value;
}

// optional int32 camp = 5;
inline bool TeamMemberChangeScene::has_camp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamMemberChangeScene::set_has_camp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamMemberChangeScene::clear_has_camp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamMemberChangeScene::clear_camp() {
  camp_ = 0;
  clear_has_camp();
  SetDirty();
}
inline ::google::protobuf::int32 TeamMemberChangeScene::camp() const {
  return camp_;
}
inline void TeamMemberChangeScene::set_camp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_camp();
  camp_ = value;
}

// -------------------------------------------------------------------

// TeamChat

// required fixed64 teamid = 1;
inline bool TeamChat::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamChat::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamChat::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamChat::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
  SetDirty();
}
inline ::google::protobuf::uint64 TeamChat::teamid() const {
  return teamid_;
}
inline void TeamChat::set_teamid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_teamid();
  teamid_ = value;
}

// required .Packet.ChatMessage msg = 2;
inline bool TeamChat::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamChat::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamChat::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamChat::clear_msg() {
  if (msg_ != NULL) msg_->::Packet::ChatMessage::Clear();
  clear_has_msg();
  SetDirty();
}
inline const ::Packet::ChatMessage& TeamChat::msg() const {
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::Packet::ChatMessage* TeamChat::mutable_msg() {
  SetDirty();
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::Packet::ChatMessage;
  return msg_;
}
inline ::Packet::ChatMessage* TeamChat::release_msg() {
  SetDirty();
  clear_has_msg();
  ::Packet::ChatMessage* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void TeamChat::set_allocated_msg(::Packet::ChatMessage* msg) {
  SetDirty();
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
}

// -------------------------------------------------------------------

// GuildChat

// required fixed64 guildid = 1;
inline bool GuildChat::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildChat::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildChat::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildChat::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
  SetDirty();
}
inline ::google::protobuf::uint64 GuildChat::guildid() const {
  return guildid_;
}
inline void GuildChat::set_guildid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guildid();
  guildid_ = value;
}

// required .Packet.ChatMessage msg = 2;
inline bool GuildChat::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildChat::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildChat::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildChat::clear_msg() {
  if (msg_ != NULL) msg_->::Packet::ChatMessage::Clear();
  clear_has_msg();
  SetDirty();
}
inline const ::Packet::ChatMessage& GuildChat::msg() const {
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::Packet::ChatMessage* GuildChat::mutable_msg() {
  SetDirty();
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::Packet::ChatMessage;
  return msg_;
}
inline ::Packet::ChatMessage* GuildChat::release_msg() {
  SetDirty();
  clear_has_msg();
  ::Packet::ChatMessage* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void GuildChat::set_allocated_msg(::Packet::ChatMessage* msg) {
  SetDirty();
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
}

// -------------------------------------------------------------------

// WorldChat

// required .Packet.ChatMessage msg = 1;
inline bool WorldChat::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldChat::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldChat::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldChat::clear_msg() {
  if (msg_ != NULL) msg_->::Packet::ChatMessage::Clear();
  clear_has_msg();
  SetDirty();
}
inline const ::Packet::ChatMessage& WorldChat::msg() const {
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::Packet::ChatMessage* WorldChat::mutable_msg() {
  SetDirty();
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::Packet::ChatMessage;
  return msg_;
}
inline ::Packet::ChatMessage* WorldChat::release_msg() {
  SetDirty();
  clear_has_msg();
  ::Packet::ChatMessage* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void WorldChat::set_allocated_msg(::Packet::ChatMessage* msg) {
  SetDirty();
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
}

// -------------------------------------------------------------------

// InsertScenePlayer

// required .Packet.ScenePlayerInfo msg = 1;
inline bool InsertScenePlayer::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InsertScenePlayer::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InsertScenePlayer::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InsertScenePlayer::clear_msg() {
  if (msg_ != NULL) msg_->::Packet::ScenePlayerInfo::Clear();
  clear_has_msg();
  SetDirty();
}
inline const ::Packet::ScenePlayerInfo& InsertScenePlayer::msg() const {
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::Packet::ScenePlayerInfo* InsertScenePlayer::mutable_msg() {
  SetDirty();
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::Packet::ScenePlayerInfo;
  return msg_;
}
inline ::Packet::ScenePlayerInfo* InsertScenePlayer::release_msg() {
  SetDirty();
  clear_has_msg();
  ::Packet::ScenePlayerInfo* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void InsertScenePlayer::set_allocated_msg(::Packet::ScenePlayerInfo* msg) {
  SetDirty();
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
}

// -------------------------------------------------------------------

// GetOperateInfo

// required fixed64 playerid = 1;
inline bool GetOperateInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetOperateInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetOperateInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetOperateInfo::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
  SetDirty();
}
inline ::google::protobuf::uint64 GetOperateInfo::playerid() const {
  return playerid_;
}
inline void GetOperateInfo::set_playerid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// DestroyRoom

// required int32 rtid = 1;
inline bool DestroyRoom::has_rtid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestroyRoom::set_has_rtid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DestroyRoom::clear_has_rtid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DestroyRoom::clear_rtid() {
  rtid_ = 0;
  clear_has_rtid();
  SetDirty();
}
inline ::google::protobuf::int32 DestroyRoom::rtid() const {
  return rtid_;
}
inline void DestroyRoom::set_rtid(::google::protobuf::int32 value) {
  SetDirty();
  set_has_rtid();
  rtid_ = value;
}

// -------------------------------------------------------------------

// PlayerAutoMatch

// required int32 purpose = 1;
inline bool PlayerAutoMatch::has_purpose() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerAutoMatch::set_has_purpose() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerAutoMatch::clear_has_purpose() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerAutoMatch::clear_purpose() {
  purpose_ = 0;
  clear_has_purpose();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerAutoMatch::purpose() const {
  return purpose_;
}
inline void PlayerAutoMatch::set_purpose(::google::protobuf::int32 value) {
  SetDirty();
  set_has_purpose();
  purpose_ = value;
}

// required bool setauto = 2;
inline bool PlayerAutoMatch::has_setauto() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerAutoMatch::set_has_setauto() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerAutoMatch::clear_has_setauto() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerAutoMatch::clear_setauto() {
  setauto_ = false;
  clear_has_setauto();
  SetDirty();
}
inline bool PlayerAutoMatch::setauto() const {
  return setauto_;
}
inline void PlayerAutoMatch::set_setauto(bool value) {
  SetDirty();
  set_has_setauto();
  setauto_ = value;
}

// -------------------------------------------------------------------

// EndGuildBoss

// required fixed64 guid = 1;
inline bool EndGuildBoss::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EndGuildBoss::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EndGuildBoss::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EndGuildBoss::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 EndGuildBoss::guid() const {
  return guid_;
}
inline void EndGuildBoss::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required fixed64 guild_id = 2;
inline bool EndGuildBoss::has_guild_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EndGuildBoss::set_has_guild_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EndGuildBoss::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EndGuildBoss::clear_guild_id() {
  guild_id_ = GOOGLE_ULONGLONG(0);
  clear_has_guild_id();
  SetDirty();
}
inline ::google::protobuf::uint64 EndGuildBoss::guild_id() const {
  return guild_id_;
}
inline void EndGuildBoss::set_guild_id(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guild_id();
  guild_id_ = value;
}

// required int32 damage = 3;
inline bool EndGuildBoss::has_damage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EndGuildBoss::set_has_damage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EndGuildBoss::clear_has_damage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EndGuildBoss::clear_damage() {
  damage_ = 0;
  clear_has_damage();
  SetDirty();
}
inline ::google::protobuf::int32 EndGuildBoss::damage() const {
  return damage_;
}
inline void EndGuildBoss::set_damage(::google::protobuf::int32 value) {
  SetDirty();
  set_has_damage();
  damage_ = value;
}

// -------------------------------------------------------------------

// RefreshTarget

// required fixed64 guid = 1;
inline bool RefreshTarget::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefreshTarget::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefreshTarget::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefreshTarget::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 RefreshTarget::guid() const {
  return guid_;
}
inline void RefreshTarget::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required int32 wave = 2;
inline bool RefreshTarget::has_wave() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RefreshTarget::set_has_wave() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RefreshTarget::clear_has_wave() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RefreshTarget::clear_wave() {
  wave_ = 0;
  clear_has_wave();
  SetDirty();
}
inline ::google::protobuf::int32 RefreshTarget::wave() const {
  return wave_;
}
inline void RefreshTarget::set_wave(::google::protobuf::int32 value) {
  SetDirty();
  set_has_wave();
  wave_ = value;
}

// -------------------------------------------------------------------

// CheckOffLine

// repeated fixed64 guid = 1;
inline int CheckOffLine::guid_size() const {
  return guid_.size();
}
inline void CheckOffLine::clear_guid() {
  guid_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint64 CheckOffLine::guid(int index) const {
  return guid_.Get(index);
}
inline void CheckOffLine::set_guid(int index, ::google::protobuf::uint64 value) {
  SetDirty();
  guid_.Set(index, value);
}
inline void CheckOffLine::add_guid(::google::protobuf::uint64 value) {
  SetDirty();
  guid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CheckOffLine::guid() const {
  return guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CheckOffLine::mutable_guid() {
  SetDirty();
  return &guid_;
}

// repeated uint32 stamp = 2;
inline int CheckOffLine::stamp_size() const {
  return stamp_.size();
}
inline void CheckOffLine::clear_stamp() {
  stamp_.Clear();
  SetDirty();
}
inline ::google::protobuf::uint32 CheckOffLine::stamp(int index) const {
  return stamp_.Get(index);
}
inline void CheckOffLine::set_stamp(int index, ::google::protobuf::uint32 value) {
  SetDirty();
  stamp_.Set(index, value);
}
inline void CheckOffLine::add_stamp(::google::protobuf::uint32 value) {
  SetDirty();
  stamp_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CheckOffLine::stamp() const {
  return stamp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CheckOffLine::mutable_stamp() {
  SetDirty();
  return &stamp_;
}

// -------------------------------------------------------------------

// GuildBattleWeekRank

// required .Packet.GuildBattleWeekRankInfo info = 1;
inline bool GuildBattleWeekRank::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildBattleWeekRank::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildBattleWeekRank::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildBattleWeekRank::clear_info() {
  if (info_ != NULL) info_->::Packet::GuildBattleWeekRankInfo::Clear();
  clear_has_info();
  SetDirty();
}
inline const ::Packet::GuildBattleWeekRankInfo& GuildBattleWeekRank::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Packet::GuildBattleWeekRankInfo* GuildBattleWeekRank::mutable_info() {
  SetDirty();
  set_has_info();
  if (info_ == NULL) info_ = new ::Packet::GuildBattleWeekRankInfo;
  return info_;
}
inline ::Packet::GuildBattleWeekRankInfo* GuildBattleWeekRank::release_info() {
  SetDirty();
  clear_has_info();
  ::Packet::GuildBattleWeekRankInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GuildBattleWeekRank::set_allocated_info(::Packet::GuildBattleWeekRankInfo* info) {
  SetDirty();
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// GuildBattleAllRank

// required .Packet.GuildBattleAllRankInfo info = 1;
inline bool GuildBattleAllRank::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildBattleAllRank::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildBattleAllRank::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildBattleAllRank::clear_info() {
  if (info_ != NULL) info_->::Packet::GuildBattleAllRankInfo::Clear();
  clear_has_info();
  SetDirty();
}
inline const ::Packet::GuildBattleAllRankInfo& GuildBattleAllRank::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Packet::GuildBattleAllRankInfo* GuildBattleAllRank::mutable_info() {
  SetDirty();
  set_has_info();
  if (info_ == NULL) info_ = new ::Packet::GuildBattleAllRankInfo;
  return info_;
}
inline ::Packet::GuildBattleAllRankInfo* GuildBattleAllRank::release_info() {
  SetDirty();
  clear_has_info();
  ::Packet::GuildBattleAllRankInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GuildBattleAllRank::set_allocated_info(::Packet::GuildBattleAllRankInfo* info) {
  SetDirty();
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// XLuaRegNotify

// -------------------------------------------------------------------

// LuaLoadNotify

// repeated int32 ids = 1;
inline int LuaLoadNotify::ids_size() const {
  return ids_.size();
}
inline void LuaLoadNotify::clear_ids() {
  ids_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 LuaLoadNotify::ids(int index) const {
  return ids_.Get(index);
}
inline void LuaLoadNotify::set_ids(int index, ::google::protobuf::int32 value) {
  SetDirty();
  ids_.Set(index, value);
}
inline void LuaLoadNotify::add_ids(::google::protobuf::int32 value) {
  SetDirty();
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LuaLoadNotify::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LuaLoadNotify::mutable_ids() {
  SetDirty();
  return &ids_;
}

// -------------------------------------------------------------------

// BuffPoint

// required int32 posindex = 1;
inline bool BuffPoint::has_posindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffPoint::set_has_posindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffPoint::clear_has_posindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffPoint::clear_posindex() {
  posindex_ = 0;
  clear_has_posindex();
  SetDirty();
}
inline ::google::protobuf::int32 BuffPoint::posindex() const {
  return posindex_;
}
inline void BuffPoint::set_posindex(::google::protobuf::int32 value) {
  SetDirty();
  set_has_posindex();
  posindex_ = value;
}

// -------------------------------------------------------------------

// PlayerCaptureStatge

// required int32 stage_id = 1;
inline bool PlayerCaptureStatge::has_stage_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerCaptureStatge::set_has_stage_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerCaptureStatge::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerCaptureStatge::clear_stage_id() {
  stage_id_ = 0;
  clear_has_stage_id();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerCaptureStatge::stage_id() const {
  return stage_id_;
}
inline void PlayerCaptureStatge::set_stage_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_stage_id();
  stage_id_ = value;
}

// required bool win_battle = 2;
inline bool PlayerCaptureStatge::has_win_battle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerCaptureStatge::set_has_win_battle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerCaptureStatge::clear_has_win_battle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerCaptureStatge::clear_win_battle() {
  win_battle_ = false;
  clear_has_win_battle();
  SetDirty();
}
inline bool PlayerCaptureStatge::win_battle() const {
  return win_battle_;
}
inline void PlayerCaptureStatge::set_win_battle(bool value) {
  SetDirty();
  set_has_win_battle();
  win_battle_ = value;
}

// optional .Packet.PlayerBasicInfo player_info = 3;
inline bool PlayerCaptureStatge::has_player_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerCaptureStatge::set_has_player_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerCaptureStatge::clear_has_player_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerCaptureStatge::clear_player_info() {
  if (player_info_ != NULL) player_info_->::Packet::PlayerBasicInfo::Clear();
  clear_has_player_info();
  SetDirty();
}
inline const ::Packet::PlayerBasicInfo& PlayerCaptureStatge::player_info() const {
  return player_info_ != NULL ? *player_info_ : *default_instance_->player_info_;
}
inline ::Packet::PlayerBasicInfo* PlayerCaptureStatge::mutable_player_info() {
  SetDirty();
  set_has_player_info();
  if (player_info_ == NULL) player_info_ = new ::Packet::PlayerBasicInfo;
  return player_info_;
}
inline ::Packet::PlayerBasicInfo* PlayerCaptureStatge::release_player_info() {
  SetDirty();
  clear_has_player_info();
  ::Packet::PlayerBasicInfo* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
inline void PlayerCaptureStatge::set_allocated_player_info(::Packet::PlayerBasicInfo* player_info) {
  SetDirty();
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    set_has_player_info();
  } else {
    clear_has_player_info();
  }
}

// repeated .Packet.ActorFullInfo actors = 4;
inline int PlayerCaptureStatge::actors_size() const {
  return actors_.size();
}
inline void PlayerCaptureStatge::clear_actors() {
  actors_.Clear();
  SetDirty();
}
inline const ::Packet::ActorFullInfo& PlayerCaptureStatge::actors(int index) const {
  return actors_.Get(index);
}
inline ::Packet::ActorFullInfo* PlayerCaptureStatge::mutable_actors(int index) {
  SetDirty();
  return actors_.Mutable(index);
}
inline ::Packet::ActorFullInfo* PlayerCaptureStatge::add_actors() {
  SetDirty();
  return actors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo >&
PlayerCaptureStatge::actors() const {
  return actors_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo >*
PlayerCaptureStatge::mutable_actors() {
  SetDirty();
  return &actors_;
}

// -------------------------------------------------------------------

// PlayerHookDataUpdate

// required int32 stage_id = 1;
inline bool PlayerHookDataUpdate::has_stage_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerHookDataUpdate::set_has_stage_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerHookDataUpdate::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerHookDataUpdate::clear_stage_id() {
  stage_id_ = 0;
  clear_has_stage_id();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerHookDataUpdate::stage_id() const {
  return stage_id_;
}
inline void PlayerHookDataUpdate::set_stage_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_stage_id();
  stage_id_ = value;
}

// required fixed64 guid = 2;
inline bool PlayerHookDataUpdate::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerHookDataUpdate::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerHookDataUpdate::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerHookDataUpdate::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 PlayerHookDataUpdate::guid() const {
  return guid_;
}
inline void PlayerHookDataUpdate::set_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guid();
  guid_ = value;
}

// required string name = 3;
inline bool PlayerHookDataUpdate::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerHookDataUpdate::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerHookDataUpdate::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerHookDataUpdate::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
  SetDirty();
}
inline const ::std::string& PlayerHookDataUpdate::name() const {
  return *name_;
}
inline void PlayerHookDataUpdate::set_name(const ::std::string& value) {
  SetDirty();
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PlayerHookDataUpdate::set_name(const char* value) {
  SetDirty();
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PlayerHookDataUpdate::set_name(const char* value, size_t size) {
  SetDirty();
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerHookDataUpdate::mutable_name() {
  SetDirty();
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PlayerHookDataUpdate::release_name() {
  SetDirty();
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PlayerHookDataUpdate::set_allocated_name(::std::string* name) {
  SetDirty();
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .Packet.BattleFormation form = 4;
inline bool PlayerHookDataUpdate::has_form() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerHookDataUpdate::set_has_form() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerHookDataUpdate::clear_has_form() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerHookDataUpdate::clear_form() {
  if (form_ != NULL) form_->::Packet::BattleFormation::Clear();
  clear_has_form();
  SetDirty();
}
inline const ::Packet::BattleFormation& PlayerHookDataUpdate::form() const {
  return form_ != NULL ? *form_ : *default_instance_->form_;
}
inline ::Packet::BattleFormation* PlayerHookDataUpdate::mutable_form() {
  SetDirty();
  set_has_form();
  if (form_ == NULL) form_ = new ::Packet::BattleFormation;
  return form_;
}
inline ::Packet::BattleFormation* PlayerHookDataUpdate::release_form() {
  SetDirty();
  clear_has_form();
  ::Packet::BattleFormation* temp = form_;
  form_ = NULL;
  return temp;
}
inline void PlayerHookDataUpdate::set_allocated_form(::Packet::BattleFormation* form) {
  SetDirty();
  delete form_;
  form_ = form;
  if (form) {
    set_has_form();
  } else {
    clear_has_form();
  }
}

// required int32 time_cost = 5;
inline bool PlayerHookDataUpdate::has_time_cost() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerHookDataUpdate::set_has_time_cost() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerHookDataUpdate::clear_has_time_cost() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerHookDataUpdate::clear_time_cost() {
  time_cost_ = 0;
  clear_has_time_cost();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerHookDataUpdate::time_cost() const {
  return time_cost_;
}
inline void PlayerHookDataUpdate::set_time_cost(::google::protobuf::int32 value) {
  SetDirty();
  set_has_time_cost();
  time_cost_ = value;
}

// required int32 score = 6;
inline bool PlayerHookDataUpdate::has_score() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerHookDataUpdate::set_has_score() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerHookDataUpdate::clear_has_score() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerHookDataUpdate::clear_score() {
  score_ = 0;
  clear_has_score();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerHookDataUpdate::score() const {
  return score_;
}
inline void PlayerHookDataUpdate::set_score(::google::protobuf::int32 value) {
  SetDirty();
  set_has_score();
  score_ = value;
}

// required int32 hook_time = 7;
inline bool PlayerHookDataUpdate::has_hook_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerHookDataUpdate::set_has_hook_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerHookDataUpdate::clear_has_hook_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerHookDataUpdate::clear_hook_time() {
  hook_time_ = 0;
  clear_has_hook_time();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerHookDataUpdate::hook_time() const {
  return hook_time_;
}
inline void PlayerHookDataUpdate::set_hook_time(::google::protobuf::int32 value) {
  SetDirty();
  set_has_hook_time();
  hook_time_ = value;
}

// required int32 income_per_min = 8;
inline bool PlayerHookDataUpdate::has_income_per_min() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayerHookDataUpdate::set_has_income_per_min() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayerHookDataUpdate::clear_has_income_per_min() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayerHookDataUpdate::clear_income_per_min() {
  income_per_min_ = 0;
  clear_has_income_per_min();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerHookDataUpdate::income_per_min() const {
  return income_per_min_;
}
inline void PlayerHookDataUpdate::set_income_per_min(::google::protobuf::int32 value) {
  SetDirty();
  set_has_income_per_min();
  income_per_min_ = value;
}

// required int32 exp_pre_min = 9;
inline bool PlayerHookDataUpdate::has_exp_pre_min() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PlayerHookDataUpdate::set_has_exp_pre_min() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PlayerHookDataUpdate::clear_has_exp_pre_min() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PlayerHookDataUpdate::clear_exp_pre_min() {
  exp_pre_min_ = 0;
  clear_has_exp_pre_min();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerHookDataUpdate::exp_pre_min() const {
  return exp_pre_min_;
}
inline void PlayerHookDataUpdate::set_exp_pre_min(::google::protobuf::int32 value) {
  SetDirty();
  set_has_exp_pre_min();
  exp_pre_min_ = value;
}

// -------------------------------------------------------------------

// HookStageDistributeUpdate

// required int32 scene_id = 1;
inline bool HookStageDistributeUpdate::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HookStageDistributeUpdate::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HookStageDistributeUpdate::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HookStageDistributeUpdate::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
  SetDirty();
}
inline ::google::protobuf::int32 HookStageDistributeUpdate::scene_id() const {
  return scene_id_;
}
inline void HookStageDistributeUpdate::set_scene_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_scene_id();
  scene_id_ = value;
}

// repeated int32 stage_id = 2;
inline int HookStageDistributeUpdate::stage_id_size() const {
  return stage_id_.size();
}
inline void HookStageDistributeUpdate::clear_stage_id() {
  stage_id_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 HookStageDistributeUpdate::stage_id(int index) const {
  return stage_id_.Get(index);
}
inline void HookStageDistributeUpdate::set_stage_id(int index, ::google::protobuf::int32 value) {
  SetDirty();
  stage_id_.Set(index, value);
}
inline void HookStageDistributeUpdate::add_stage_id(::google::protobuf::int32 value) {
  SetDirty();
  stage_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HookStageDistributeUpdate::stage_id() const {
  return stage_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HookStageDistributeUpdate::mutable_stage_id() {
  SetDirty();
  return &stage_id_;
}

// repeated int32 player_count = 3;
inline int HookStageDistributeUpdate::player_count_size() const {
  return player_count_.size();
}
inline void HookStageDistributeUpdate::clear_player_count() {
  player_count_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 HookStageDistributeUpdate::player_count(int index) const {
  return player_count_.Get(index);
}
inline void HookStageDistributeUpdate::set_player_count(int index, ::google::protobuf::int32 value) {
  SetDirty();
  player_count_.Set(index, value);
}
inline void HookStageDistributeUpdate::add_player_count(::google::protobuf::int32 value) {
  SetDirty();
  player_count_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HookStageDistributeUpdate::player_count() const {
  return player_count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HookStageDistributeUpdate::mutable_player_count() {
  SetDirty();
  return &player_count_;
}

// -------------------------------------------------------------------

// PlayerUpdateCaptureForm

// required .Packet.PlayerBasicInfo player_info = 1;
inline bool PlayerUpdateCaptureForm::has_player_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerUpdateCaptureForm::set_has_player_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerUpdateCaptureForm::clear_has_player_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerUpdateCaptureForm::clear_player_info() {
  if (player_info_ != NULL) player_info_->::Packet::PlayerBasicInfo::Clear();
  clear_has_player_info();
  SetDirty();
}
inline const ::Packet::PlayerBasicInfo& PlayerUpdateCaptureForm::player_info() const {
  return player_info_ != NULL ? *player_info_ : *default_instance_->player_info_;
}
inline ::Packet::PlayerBasicInfo* PlayerUpdateCaptureForm::mutable_player_info() {
  SetDirty();
  set_has_player_info();
  if (player_info_ == NULL) player_info_ = new ::Packet::PlayerBasicInfo;
  return player_info_;
}
inline ::Packet::PlayerBasicInfo* PlayerUpdateCaptureForm::release_player_info() {
  SetDirty();
  clear_has_player_info();
  ::Packet::PlayerBasicInfo* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
inline void PlayerUpdateCaptureForm::set_allocated_player_info(::Packet::PlayerBasicInfo* player_info) {
  SetDirty();
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    set_has_player_info();
  } else {
    clear_has_player_info();
  }
}

// repeated .Packet.ActorFullInfo actors = 2;
inline int PlayerUpdateCaptureForm::actors_size() const {
  return actors_.size();
}
inline void PlayerUpdateCaptureForm::clear_actors() {
  actors_.Clear();
  SetDirty();
}
inline const ::Packet::ActorFullInfo& PlayerUpdateCaptureForm::actors(int index) const {
  return actors_.Get(index);
}
inline ::Packet::ActorFullInfo* PlayerUpdateCaptureForm::mutable_actors(int index) {
  SetDirty();
  return actors_.Mutable(index);
}
inline ::Packet::ActorFullInfo* PlayerUpdateCaptureForm::add_actors() {
  SetDirty();
  return actors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo >&
PlayerUpdateCaptureForm::actors() const {
  return actors_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::ActorFullInfo >*
PlayerUpdateCaptureForm::mutable_actors() {
  SetDirty();
  return &actors_;
}

// -------------------------------------------------------------------

// AddGuildMoney

// required fixed64 guildid = 1;
inline bool AddGuildMoney::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddGuildMoney::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddGuildMoney::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddGuildMoney::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildid();
  SetDirty();
}
inline ::google::protobuf::uint64 AddGuildMoney::guildid() const {
  return guildid_;
}
inline void AddGuildMoney::set_guildid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_guildid();
  guildid_ = value;
}

// required int32 addcount = 2;
inline bool AddGuildMoney::has_addcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddGuildMoney::set_has_addcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddGuildMoney::clear_has_addcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddGuildMoney::clear_addcount() {
  addcount_ = 0;
  clear_has_addcount();
  SetDirty();
}
inline ::google::protobuf::int32 AddGuildMoney::addcount() const {
  return addcount_;
}
inline void AddGuildMoney::set_addcount(::google::protobuf::int32 value) {
  SetDirty();
  set_has_addcount();
  addcount_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace S2G

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_S2GMessage_2eproto__INCLUDED

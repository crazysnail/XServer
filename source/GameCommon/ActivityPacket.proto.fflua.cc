// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActivityPacket.proto
#include "ActivityPacket.pb.h"
#include "ActivityPacket.proto.fflua.h"
namespace Packet {
bool Activity_fflua_reg(lua_State* state)
{
//for decltype
	Activity* message(nullptr);
	message;
	ff::fflua_register_t<Activity, ctor()>(state, "Activity", "google::protobuf::Message")
		// required .Config.ActivityConfig config = 1;
		.def(&Activity::config, "config")
		.def(&Activity::mutable_config, "mutable_config")
		// required int32 times = 2;
		.def(&Activity::times, "times")
		.def(&Activity::set_times, "set_times")
		// required int32 is_active = 3;
		.def(&Activity::is_active, "is_active")
		.def(&Activity::set_is_active, "set_is_active")
		.def(&Activity::ByteSize, "ByteSize")
		.def(&Activity::SetInitialized, "SetInitialized")
		;
	return true;
}
bool ActivityUpdateReply_fflua_reg(lua_State* state)
{
//for decltype
	ActivityUpdateReply* message(nullptr);
	message;
	ff::fflua_register_t<ActivityUpdateReply, ctor()>(state, "ActivityUpdateReply", "google::protobuf::Message")
		// required .Packet.Activity activity = 1;
		.def(&ActivityUpdateReply::activity, "activity")
		.def(&ActivityUpdateReply::mutable_activity, "mutable_activity")
		.def(&ActivityUpdateReply::ByteSize, "ByteSize")
		.def(&ActivityUpdateReply::SetInitialized, "SetInitialized")
		;
	return true;
}
bool ActivityListReply_fflua_reg(lua_State* state)
{
//for decltype
	ActivityListReply* message(nullptr);
	message;
	ff::fflua_register_t<ActivityListReply, ctor()>(state, "ActivityListReply", "google::protobuf::Message")
		// repeated .Packet.Activity activity_list = 1;
		.def(&ActivityListReply::activity_list_size, "activity_list_size")
		.def<decltype(message->activity_list(0)) (ActivityListReply::*)(int) const>(&ActivityListReply::activity_list, "activity_list")
		.def<decltype(message->mutable_activity_list(0)) (ActivityListReply::*)(int)>(&ActivityListReply::mutable_activity_list, "mutable_activity_list")
		.def(&ActivityListReply::add_activity_list, "add_activity_list")
		.def(&ActivityListReply::ByteSize, "ByteSize")
		.def(&ActivityListReply::SetInitialized, "SetInitialized")
		;
	return true;
}
bool LuaReplyPacketList_fflua_reg(lua_State* state)
{
//for decltype
	LuaReplyPacketList* message(nullptr);
	message;
	ff::fflua_register_t<LuaReplyPacketList, ctor()>(state, "LuaReplyPacketList", "google::protobuf::Message")
		// repeated .Packet.LuaReplyPacket rewards = 1;
		.def(&LuaReplyPacketList::rewards_size, "rewards_size")
		.def<decltype(message->rewards(0)) (LuaReplyPacketList::*)(int) const>(&LuaReplyPacketList::rewards, "rewards")
		.def<decltype(message->mutable_rewards(0)) (LuaReplyPacketList::*)(int)>(&LuaReplyPacketList::mutable_rewards, "mutable_rewards")
		.def(&LuaReplyPacketList::add_rewards, "add_rewards")
		.def(&LuaReplyPacketList::ByteSize, "ByteSize")
		.def(&LuaReplyPacketList::SetInitialized, "SetInitialized")
		;
	return true;
}
bool LuaReplyPacket_fflua_reg(lua_State* state)
{
//for decltype
	LuaReplyPacket* message(nullptr);
	message;
	ff::fflua_register_t<LuaReplyPacket, ctor()>(state, "LuaReplyPacket", "google::protobuf::Message")
		// required string reply_name = 1;
		.def(&LuaReplyPacket::reply_name, "reply_name")
		.def<void (LuaReplyPacket::*)(const std::string&)>(&LuaReplyPacket::set_reply_name, "set_reply_name")
		// repeated int32 int32_params = 2;
		.def(&LuaReplyPacket::int32_params_size, "int32_params_size")
		.def<decltype(message->int32_params(0)) (LuaReplyPacket::*)(int) const>(&LuaReplyPacket::int32_params, "int32_params")
		.def<void(LuaReplyPacket::*)(int, const decltype(message->int32_params(0)))>(&LuaReplyPacket::set_int32_params, "set_int32_params")
		.def(&LuaReplyPacket::add_int32_params, "add_int32_params")
		// repeated fixed64 int64_params = 3;
		.def(&LuaReplyPacket::int64_params_size, "int64_params_size")
		.def<decltype(message->int64_params(0)) (LuaReplyPacket::*)(int) const>(&LuaReplyPacket::int64_params, "int64_params")
		.def<void(LuaReplyPacket::*)(int, const decltype(message->int64_params(0)))>(&LuaReplyPacket::set_int64_params, "set_int64_params")
		.def(&LuaReplyPacket::add_int64_params, "add_int64_params")
		// repeated string string_params = 4;
		.def(&LuaReplyPacket::string_params_size, "string_params_size")
		.def<const std::string& (LuaReplyPacket::*)(int) const>(&LuaReplyPacket::string_params, "string_params")
		.def<void (LuaReplyPacket::*)(int, const std::string&)>(&LuaReplyPacket::set_string_params, "set_string_params")
		.def<void (LuaReplyPacket::*)(const std::string&)>(&LuaReplyPacket::add_string_params, "add_string_params")
		.def(&LuaReplyPacket::ByteSize, "ByteSize")
		.def(&LuaReplyPacket::SetInitialized, "SetInitialized")
		;
	return true;
}
bool LuaRequestPacket_fflua_reg(lua_State* state)
{
//for decltype
	LuaRequestPacket* message(nullptr);
	message;
	ff::fflua_register_t<LuaRequestPacket, ctor()>(state, "LuaRequestPacket", "google::protobuf::Message")
		// required string request_name = 1;
		.def(&LuaRequestPacket::request_name, "request_name")
		.def<void (LuaRequestPacket::*)(const std::string&)>(&LuaRequestPacket::set_request_name, "set_request_name")
		// repeated int32 int32_params = 2;
		.def(&LuaRequestPacket::int32_params_size, "int32_params_size")
		.def<decltype(message->int32_params(0)) (LuaRequestPacket::*)(int) const>(&LuaRequestPacket::int32_params, "int32_params")
		.def<void(LuaRequestPacket::*)(int, const decltype(message->int32_params(0)))>(&LuaRequestPacket::set_int32_params, "set_int32_params")
		.def(&LuaRequestPacket::add_int32_params, "add_int32_params")
		// repeated fixed64 int64_params = 3;
		.def(&LuaRequestPacket::int64_params_size, "int64_params_size")
		.def<decltype(message->int64_params(0)) (LuaRequestPacket::*)(int) const>(&LuaRequestPacket::int64_params, "int64_params")
		.def<void(LuaRequestPacket::*)(int, const decltype(message->int64_params(0)))>(&LuaRequestPacket::set_int64_params, "set_int64_params")
		.def(&LuaRequestPacket::add_int64_params, "add_int64_params")
		// repeated string string_params = 4;
		.def(&LuaRequestPacket::string_params_size, "string_params_size")
		.def<const std::string& (LuaRequestPacket::*)(int) const>(&LuaRequestPacket::string_params, "string_params")
		.def<void (LuaRequestPacket::*)(int, const std::string&)>(&LuaRequestPacket::set_string_params, "set_string_params")
		.def<void (LuaRequestPacket::*)(const std::string&)>(&LuaRequestPacket::add_string_params, "add_string_params")
		.def(&LuaRequestPacket::ByteSize, "ByteSize")
		.def(&LuaRequestPacket::SetInitialized, "SetInitialized")
		;
	return true;
}
bool ActivityPacket_fflua_regist_all(lua_State* state)
{
	Activity_fflua_reg(state);
	ActivityUpdateReply_fflua_reg(state);
	ActivityListReply_fflua_reg(state);
	LuaReplyPacketList_fflua_reg(state);
	LuaReplyPacket_fflua_reg(state);
	LuaRequestPacket_fflua_reg(state);
	return true;
}
}

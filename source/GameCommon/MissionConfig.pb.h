// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MissionConfig.proto

#ifndef PROTOBUF_MissionConfig_2eproto__INCLUDED
#define PROTOBUF_MissionConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "AllConfigEnum.pb.h"
#include "ProtoBufOption.pb.h"
// @@protoc_insertion_point(includes)

namespace Config {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MissionConfig_2eproto();
void protobuf_AssignDesc_MissionConfig_2eproto();
void protobuf_ShutdownFile_MissionConfig_2eproto();

class MissionConfig;
class MissionExConfig;
class TargetConfig;
class StoryStageConfig;

// ===================================================================

class MissionConfig : public ::google::protobuf::Message {
 public:
  MissionConfig();
  virtual ~MissionConfig();

  MissionConfig(const MissionConfig& from);

  inline MissionConfig& operator=(const MissionConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MissionConfig& default_instance();

  void Swap(MissionConfig* other);

  // implements Message ----------------------------------------------

  MissionConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MissionConfig& from);
  void MergeFrom(const MissionConfig& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated int32 pre_id = 2;
  inline int pre_id_size() const;
  inline void clear_pre_id();
  static const int kPreIdFieldNumber = 2;
  inline ::google::protobuf::int32 pre_id(int index) const;
  inline void set_pre_id(int index, ::google::protobuf::int32 value);
  inline void add_pre_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pre_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pre_id();

  // required .Config.FinishType finish_type = 3;
  inline bool has_finish_type() const;
  inline void clear_finish_type();
  static const int kFinishTypeFieldNumber = 3;
  inline ::Config::FinishType finish_type() const;
  inline void set_finish_type(::Config::FinishType value);

  // required .Config.MissionType type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::Config::MissionType type() const;
  inline void set_type(::Config::MissionType value);

  // required int32 group = 5;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 5;
  inline ::google::protobuf::int32 group() const;
  inline void set_group(::google::protobuf::int32 value);

  // required int32 open_level = 6;
  inline bool has_open_level() const;
  inline void clear_open_level();
  static const int kOpenLevelFieldNumber = 6;
  inline ::google::protobuf::int32 open_level() const;
  inline void set_open_level(::google::protobuf::int32 value);

  // required int32 count_limit = 7;
  inline bool has_count_limit() const;
  inline void clear_count_limit();
  static const int kCountLimitFieldNumber = 7;
  inline ::google::protobuf::int32 count_limit() const;
  inline void set_count_limit(::google::protobuf::int32 value);

  // required int32 adapt_level = 8;
  inline bool has_adapt_level() const;
  inline void clear_adapt_level();
  static const int kAdaptLevelFieldNumber = 8;
  inline ::google::protobuf::int32 adapt_level() const;
  inline void set_adapt_level(::google::protobuf::int32 value);

  // required int32 circle = 9;
  inline bool has_circle() const;
  inline void clear_circle();
  static const int kCircleFieldNumber = 9;
  inline ::google::protobuf::int32 circle() const;
  inline void set_circle(::google::protobuf::int32 value);

  // required int32 rate = 10;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 10;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // required int32 can_drop = 11;
  inline bool has_can_drop() const;
  inline void clear_can_drop();
  static const int kCanDropFieldNumber = 11;
  inline ::google::protobuf::int32 can_drop() const;
  inline void set_can_drop(::google::protobuf::int32 value);

  // repeated int32 param = 12;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 12;
  inline ::google::protobuf::int32 param(int index) const;
  inline void set_param(int index, ::google::protobuf::int32 value);
  inline void add_param(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_param();

  // required int32 exp = 13;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 13;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // required float exp_rate = 14;
  inline bool has_exp_rate() const;
  inline void clear_exp_rate();
  static const int kExpRateFieldNumber = 14;
  inline float exp_rate() const;
  inline void set_exp_rate(float value);

  // required int32 gold = 15;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 15;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // required float gold_rate = 16;
  inline bool has_gold_rate() const;
  inline void clear_gold_rate();
  static const int kGoldRateFieldNumber = 16;
  inline float gold_rate() const;
  inline void set_gold_rate(float value);

  // required int32 package_id = 17;
  inline bool has_package_id() const;
  inline void clear_package_id();
  static const int kPackageIdFieldNumber = 17;
  inline ::google::protobuf::int32 package_id() const;
  inline void set_package_id(::google::protobuf::int32 value);

  // required int32 publish_npc_id = 18;
  inline bool has_publish_npc_id() const;
  inline void clear_publish_npc_id();
  static const int kPublishNpcIdFieldNumber = 18;
  inline ::google::protobuf::int32 publish_npc_id() const;
  inline void set_publish_npc_id(::google::protobuf::int32 value);

  // required int32 commit_npc_id = 19;
  inline bool has_commit_npc_id() const;
  inline void clear_commit_npc_id();
  static const int kCommitNpcIdFieldNumber = 19;
  inline ::google::protobuf::int32 commit_npc_id() const;
  inline void set_commit_npc_id(::google::protobuf::int32 value);

  // required int32 other_npc_group = 20;
  inline bool has_other_npc_group() const;
  inline void clear_other_npc_group();
  static const int kOtherNpcGroupFieldNumber = 20;
  inline ::google::protobuf::int32 other_npc_group() const;
  inline void set_other_npc_group(::google::protobuf::int32 value);

  // required int32 roll_drop = 21;
  inline bool has_roll_drop() const;
  inline void clear_roll_drop();
  static const int kRollDropFieldNumber = 21;
  inline ::google::protobuf::int32 roll_drop() const;
  inline void set_roll_drop(::google::protobuf::int32 value);

  // required int32 is_open = 22;
  inline bool has_is_open() const;
  inline void clear_is_open();
  static const int kIsOpenFieldNumber = 22;
  inline ::google::protobuf::int32 is_open() const;
  inline void set_is_open(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Config.MissionConfig)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_finish_type();
  inline void clear_has_finish_type();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_open_level();
  inline void clear_has_open_level();
  inline void set_has_count_limit();
  inline void clear_has_count_limit();
  inline void set_has_adapt_level();
  inline void clear_has_adapt_level();
  inline void set_has_circle();
  inline void clear_has_circle();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_can_drop();
  inline void clear_has_can_drop();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_exp_rate();
  inline void clear_has_exp_rate();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_gold_rate();
  inline void clear_has_gold_rate();
  inline void set_has_package_id();
  inline void clear_has_package_id();
  inline void set_has_publish_npc_id();
  inline void clear_has_publish_npc_id();
  inline void set_has_commit_npc_id();
  inline void clear_has_commit_npc_id();
  inline void set_has_other_npc_group();
  inline void clear_has_other_npc_group();
  inline void set_has_roll_drop();
  inline void clear_has_roll_drop();
  inline void set_has_is_open();
  inline void clear_has_is_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pre_id_;
  ::google::protobuf::int32 id_;
  int finish_type_;
  int type_;
  ::google::protobuf::int32 group_;
  ::google::protobuf::int32 open_level_;
  ::google::protobuf::int32 count_limit_;
  ::google::protobuf::int32 adapt_level_;
  ::google::protobuf::int32 circle_;
  ::google::protobuf::int32 rate_;
  ::google::protobuf::int32 can_drop_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > param_;
  ::google::protobuf::int32 exp_;
  float exp_rate_;
  ::google::protobuf::int32 gold_;
  float gold_rate_;
  ::google::protobuf::int32 package_id_;
  ::google::protobuf::int32 publish_npc_id_;
  ::google::protobuf::int32 commit_npc_id_;
  ::google::protobuf::int32 other_npc_group_;
  ::google::protobuf::int32 roll_drop_;
  ::google::protobuf::int32 is_open_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(22 + 31) / 32];

  friend void  protobuf_AddDesc_MissionConfig_2eproto();
  friend void protobuf_AssignDesc_MissionConfig_2eproto();
  friend void protobuf_ShutdownFile_MissionConfig_2eproto();

  void InitAsDefaultInstance();
  static MissionConfig* default_instance_;
};
// -------------------------------------------------------------------

class MissionExConfig : public ::google::protobuf::Message {
 public:
  MissionExConfig();
  virtual ~MissionExConfig();

  MissionExConfig(const MissionExConfig& from);

  inline MissionExConfig& operator=(const MissionExConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MissionExConfig& default_instance();

  void Swap(MissionExConfig* other);

  // implements Message ----------------------------------------------

  MissionExConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MissionExConfig& from);
  void MergeFrom(const MissionExConfig& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required .Config.SubFinishType sub_type = 2;
  inline bool has_sub_type() const;
  inline void clear_sub_type();
  static const int kSubTypeFieldNumber = 2;
  inline ::Config::SubFinishType sub_type() const;
  inline void set_sub_type(::Config::SubFinishType value);

  // repeated int32 monster = 3;
  inline int monster_size() const;
  inline void clear_monster();
  static const int kMonsterFieldNumber = 3;
  inline ::google::protobuf::int32 monster(int index) const;
  inline void set_monster(int index, ::google::protobuf::int32 value);
  inline void add_monster(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      monster() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_monster();

  // repeated int32 item = 4;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 4;
  inline ::google::protobuf::int32 item(int index) const;
  inline void set_item(int index, ::google::protobuf::int32 value);
  inline void add_item(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      item() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_item();

  // repeated int32 rate = 5;
  inline int rate_size() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 5;
  inline ::google::protobuf::int32 rate(int index) const;
  inline void set_rate(int index, ::google::protobuf::int32 value);
  inline void add_rate(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rate() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rate();

  // repeated int32 count = 6;
  inline int count_size() const;
  inline void clear_count();
  static const int kCountFieldNumber = 6;
  inline ::google::protobuf::int32 count(int index) const;
  inline void set_count(int index, ::google::protobuf::int32 value);
  inline void add_count(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      count() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_count();

  // required int32 pos_param = 7;
  inline bool has_pos_param() const;
  inline void clear_pos_param();
  static const int kPosParamFieldNumber = 7;
  inline ::google::protobuf::int32 pos_param() const;
  inline void set_pos_param(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Config.MissionExConfig)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_sub_type();
  inline void clear_has_sub_type();
  inline void set_has_pos_param();
  inline void clear_has_pos_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 index_;
  int sub_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > monster_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > item_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rate_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > count_;
  ::google::protobuf::int32 pos_param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_MissionConfig_2eproto();
  friend void protobuf_AssignDesc_MissionConfig_2eproto();
  friend void protobuf_ShutdownFile_MissionConfig_2eproto();

  void InitAsDefaultInstance();
  static MissionExConfig* default_instance_;
};
// -------------------------------------------------------------------

class TargetConfig : public ::google::protobuf::Message {
 public:
  TargetConfig();
  virtual ~TargetConfig();

  TargetConfig(const TargetConfig& from);

  inline TargetConfig& operator=(const TargetConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetConfig& default_instance();

  void Swap(TargetConfig* other);

  // implements Message ----------------------------------------------

  TargetConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TargetConfig& from);
  void MergeFrom(const TargetConfig& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 min_level = 2;
  inline bool has_min_level() const;
  inline void clear_min_level();
  static const int kMinLevelFieldNumber = 2;
  inline ::google::protobuf::int32 min_level() const;
  inline void set_min_level(::google::protobuf::int32 value);

  // required int32 max_level = 3;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 3;
  inline ::google::protobuf::int32 max_level() const;
  inline void set_max_level(::google::protobuf::int32 value);

  // required int32 switch_open = 4;
  inline bool has_switch_open() const;
  inline void clear_switch_open();
  static const int kSwitchOpenFieldNumber = 4;
  inline ::google::protobuf::int32 switch_open() const;
  inline void set_switch_open(::google::protobuf::int32 value);

  // required .Config.TargetFinishType finish_type = 5;
  inline bool has_finish_type() const;
  inline void clear_finish_type();
  static const int kFinishTypeFieldNumber = 5;
  inline ::Config::TargetFinishType finish_type() const;
  inline void set_finish_type(::Config::TargetFinishType value);

  // required int32 camp = 6;
  inline bool has_camp() const;
  inline void clear_camp();
  static const int kCampFieldNumber = 6;
  inline ::google::protobuf::int32 camp() const;
  inline void set_camp(::google::protobuf::int32 value);

  // repeated int32 param = 7;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 7;
  inline ::google::protobuf::int32 param(int index) const;
  inline void set_param(int index, ::google::protobuf::int32 value);
  inline void add_param(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_param();

  // repeated int32 reward_item = 8;
  inline int reward_item_size() const;
  inline void clear_reward_item();
  static const int kRewardItemFieldNumber = 8;
  inline ::google::protobuf::int32 reward_item(int index) const;
  inline void set_reward_item(int index, ::google::protobuf::int32 value);
  inline void add_reward_item(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      reward_item() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_reward_item();

  // repeated int32 count = 9;
  inline int count_size() const;
  inline void clear_count();
  static const int kCountFieldNumber = 9;
  inline ::google::protobuf::int32 count(int index) const;
  inline void set_count(int index, ::google::protobuf::int32 value);
  inline void add_count(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      count() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_count();

  // optional int32 group = 10;
  inline bool has_group() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 10;
  inline ::google::protobuf::int32 group() const;
  inline void set_group(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Config.TargetConfig)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_min_level();
  inline void clear_has_min_level();
  inline void set_has_max_level();
  inline void clear_has_max_level();
  inline void set_has_switch_open();
  inline void clear_has_switch_open();
  inline void set_has_finish_type();
  inline void clear_has_finish_type();
  inline void set_has_camp();
  inline void clear_has_camp();
  inline void set_has_group();
  inline void clear_has_group();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 min_level_;
  ::google::protobuf::int32 max_level_;
  ::google::protobuf::int32 switch_open_;
  int finish_type_;
  ::google::protobuf::int32 camp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > reward_item_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > count_;
  ::google::protobuf::int32 group_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_MissionConfig_2eproto();
  friend void protobuf_AssignDesc_MissionConfig_2eproto();
  friend void protobuf_ShutdownFile_MissionConfig_2eproto();

  void InitAsDefaultInstance();
  static TargetConfig* default_instance_;
};
// -------------------------------------------------------------------

class StoryStageConfig : public ::google::protobuf::Message {
 public:
  StoryStageConfig();
  virtual ~StoryStageConfig();

  StoryStageConfig(const StoryStageConfig& from);

  inline StoryStageConfig& operator=(const StoryStageConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoryStageConfig& default_instance();

  void Swap(StoryStageConfig* other);

  // implements Message ----------------------------------------------

  StoryStageConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoryStageConfig& from);
  void MergeFrom(const StoryStageConfig& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mission_id = 1;
  inline bool has_mission_id() const;
  inline void clear_mission_id();
  static const int kMissionIdFieldNumber = 1;
  inline ::google::protobuf::int32 mission_id() const;
  inline void set_mission_id(::google::protobuf::int32 value);

  // required int32 stage_index = 2;
  inline bool has_stage_index() const;
  inline void clear_stage_index();
  static const int kStageIndexFieldNumber = 2;
  inline ::google::protobuf::int32 stage_index() const;
  inline void set_stage_index(::google::protobuf::int32 value);

  // required int32 event_type_1 = 3;
  inline bool has_event_type_1() const;
  inline void clear_event_type_1();
  static const int kEventType1FieldNumber = 3;
  inline ::google::protobuf::int32 event_type_1() const;
  inline void set_event_type_1(::google::protobuf::int32 value);

  // required int32 npc_id_1 = 4;
  inline bool has_npc_id_1() const;
  inline void clear_npc_id_1();
  static const int kNpcId1FieldNumber = 4;
  inline ::google::protobuf::int32 npc_id_1() const;
  inline void set_npc_id_1(::google::protobuf::int32 value);

  // required int32 npc_side_1 = 5;
  inline bool has_npc_side_1() const;
  inline void clear_npc_side_1();
  static const int kNpcSide1FieldNumber = 5;
  inline ::google::protobuf::int32 npc_side_1() const;
  inline void set_npc_side_1(::google::protobuf::int32 value);

  // required int32 npc_pos_1 = 6;
  inline bool has_npc_pos_1() const;
  inline void clear_npc_pos_1();
  static const int kNpcPos1FieldNumber = 6;
  inline ::google::protobuf::int32 npc_pos_1() const;
  inline void set_npc_pos_1(::google::protobuf::int32 value);

  // required int32 npc_id_2 = 7;
  inline bool has_npc_id_2() const;
  inline void clear_npc_id_2();
  static const int kNpcId2FieldNumber = 7;
  inline ::google::protobuf::int32 npc_id_2() const;
  inline void set_npc_id_2(::google::protobuf::int32 value);

  // required int32 npc_side_2 = 8;
  inline bool has_npc_side_2() const;
  inline void clear_npc_side_2();
  static const int kNpcSide2FieldNumber = 8;
  inline ::google::protobuf::int32 npc_side_2() const;
  inline void set_npc_side_2(::google::protobuf::int32 value);

  // required int32 npc_pos_2 = 9;
  inline bool has_npc_pos_2() const;
  inline void clear_npc_pos_2();
  static const int kNpcPos2FieldNumber = 9;
  inline ::google::protobuf::int32 npc_pos_2() const;
  inline void set_npc_pos_2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Config.StoryStageConfig)
 private:
  inline void set_has_mission_id();
  inline void clear_has_mission_id();
  inline void set_has_stage_index();
  inline void clear_has_stage_index();
  inline void set_has_event_type_1();
  inline void clear_has_event_type_1();
  inline void set_has_npc_id_1();
  inline void clear_has_npc_id_1();
  inline void set_has_npc_side_1();
  inline void clear_has_npc_side_1();
  inline void set_has_npc_pos_1();
  inline void clear_has_npc_pos_1();
  inline void set_has_npc_id_2();
  inline void clear_has_npc_id_2();
  inline void set_has_npc_side_2();
  inline void clear_has_npc_side_2();
  inline void set_has_npc_pos_2();
  inline void clear_has_npc_pos_2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mission_id_;
  ::google::protobuf::int32 stage_index_;
  ::google::protobuf::int32 event_type_1_;
  ::google::protobuf::int32 npc_id_1_;
  ::google::protobuf::int32 npc_side_1_;
  ::google::protobuf::int32 npc_pos_1_;
  ::google::protobuf::int32 npc_id_2_;
  ::google::protobuf::int32 npc_side_2_;
  ::google::protobuf::int32 npc_pos_2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_MissionConfig_2eproto();
  friend void protobuf_AssignDesc_MissionConfig_2eproto();
  friend void protobuf_ShutdownFile_MissionConfig_2eproto();

  void InitAsDefaultInstance();
  static StoryStageConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// MissionConfig

// required int32 id = 1;
inline bool MissionConfig::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MissionConfig::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MissionConfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MissionConfig::clear_id() {
  id_ = 0;
  clear_has_id();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::id() const {
  return id_;
}
inline void MissionConfig::set_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_id();
  id_ = value;
}

// repeated int32 pre_id = 2;
inline int MissionConfig::pre_id_size() const {
  return pre_id_.size();
}
inline void MissionConfig::clear_pre_id() {
  pre_id_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::pre_id(int index) const {
  return pre_id_.Get(index);
}
inline void MissionConfig::set_pre_id(int index, ::google::protobuf::int32 value) {
  SetDirty();
  pre_id_.Set(index, value);
}
inline void MissionConfig::add_pre_id(::google::protobuf::int32 value) {
  SetDirty();
  pre_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MissionConfig::pre_id() const {
  return pre_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MissionConfig::mutable_pre_id() {
  SetDirty();
  return &pre_id_;
}

// required .Config.FinishType finish_type = 3;
inline bool MissionConfig::has_finish_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MissionConfig::set_has_finish_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MissionConfig::clear_has_finish_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MissionConfig::clear_finish_type() {
  finish_type_ = -1;
  clear_has_finish_type();
  SetDirty();
}
inline ::Config::FinishType MissionConfig::finish_type() const {
  return static_cast< ::Config::FinishType >(finish_type_);
}
inline void MissionConfig::set_finish_type(::Config::FinishType value) {
  assert(::Config::FinishType_IsValid(value));
  SetDirty();
  set_has_finish_type();
  finish_type_ = value;
}

// required .Config.MissionType type = 4;
inline bool MissionConfig::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MissionConfig::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MissionConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MissionConfig::clear_type() {
  type_ = -1;
  clear_has_type();
  SetDirty();
}
inline ::Config::MissionType MissionConfig::type() const {
  return static_cast< ::Config::MissionType >(type_);
}
inline void MissionConfig::set_type(::Config::MissionType value) {
  assert(::Config::MissionType_IsValid(value));
  SetDirty();
  set_has_type();
  type_ = value;
}

// required int32 group = 5;
inline bool MissionConfig::has_group() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MissionConfig::set_has_group() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MissionConfig::clear_has_group() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MissionConfig::clear_group() {
  group_ = 0;
  clear_has_group();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::group() const {
  return group_;
}
inline void MissionConfig::set_group(::google::protobuf::int32 value) {
  SetDirty();
  set_has_group();
  group_ = value;
}

// required int32 open_level = 6;
inline bool MissionConfig::has_open_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MissionConfig::set_has_open_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MissionConfig::clear_has_open_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MissionConfig::clear_open_level() {
  open_level_ = 0;
  clear_has_open_level();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::open_level() const {
  return open_level_;
}
inline void MissionConfig::set_open_level(::google::protobuf::int32 value) {
  SetDirty();
  set_has_open_level();
  open_level_ = value;
}

// required int32 count_limit = 7;
inline bool MissionConfig::has_count_limit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MissionConfig::set_has_count_limit() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MissionConfig::clear_has_count_limit() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MissionConfig::clear_count_limit() {
  count_limit_ = 0;
  clear_has_count_limit();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::count_limit() const {
  return count_limit_;
}
inline void MissionConfig::set_count_limit(::google::protobuf::int32 value) {
  SetDirty();
  set_has_count_limit();
  count_limit_ = value;
}

// required int32 adapt_level = 8;
inline bool MissionConfig::has_adapt_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MissionConfig::set_has_adapt_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MissionConfig::clear_has_adapt_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MissionConfig::clear_adapt_level() {
  adapt_level_ = 0;
  clear_has_adapt_level();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::adapt_level() const {
  return adapt_level_;
}
inline void MissionConfig::set_adapt_level(::google::protobuf::int32 value) {
  SetDirty();
  set_has_adapt_level();
  adapt_level_ = value;
}

// required int32 circle = 9;
inline bool MissionConfig::has_circle() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MissionConfig::set_has_circle() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MissionConfig::clear_has_circle() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MissionConfig::clear_circle() {
  circle_ = 0;
  clear_has_circle();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::circle() const {
  return circle_;
}
inline void MissionConfig::set_circle(::google::protobuf::int32 value) {
  SetDirty();
  set_has_circle();
  circle_ = value;
}

// required int32 rate = 10;
inline bool MissionConfig::has_rate() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MissionConfig::set_has_rate() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MissionConfig::clear_has_rate() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MissionConfig::clear_rate() {
  rate_ = 0;
  clear_has_rate();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::rate() const {
  return rate_;
}
inline void MissionConfig::set_rate(::google::protobuf::int32 value) {
  SetDirty();
  set_has_rate();
  rate_ = value;
}

// required int32 can_drop = 11;
inline bool MissionConfig::has_can_drop() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MissionConfig::set_has_can_drop() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MissionConfig::clear_has_can_drop() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MissionConfig::clear_can_drop() {
  can_drop_ = 0;
  clear_has_can_drop();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::can_drop() const {
  return can_drop_;
}
inline void MissionConfig::set_can_drop(::google::protobuf::int32 value) {
  SetDirty();
  set_has_can_drop();
  can_drop_ = value;
}

// repeated int32 param = 12;
inline int MissionConfig::param_size() const {
  return param_.size();
}
inline void MissionConfig::clear_param() {
  param_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::param(int index) const {
  return param_.Get(index);
}
inline void MissionConfig::set_param(int index, ::google::protobuf::int32 value) {
  SetDirty();
  param_.Set(index, value);
}
inline void MissionConfig::add_param(::google::protobuf::int32 value) {
  SetDirty();
  param_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MissionConfig::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MissionConfig::mutable_param() {
  SetDirty();
  return &param_;
}

// required int32 exp = 13;
inline bool MissionConfig::has_exp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void MissionConfig::set_has_exp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void MissionConfig::clear_has_exp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void MissionConfig::clear_exp() {
  exp_ = 0;
  clear_has_exp();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::exp() const {
  return exp_;
}
inline void MissionConfig::set_exp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_exp();
  exp_ = value;
}

// required float exp_rate = 14;
inline bool MissionConfig::has_exp_rate() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void MissionConfig::set_has_exp_rate() {
  _has_bits_[0] |= 0x00002000u;
}
inline void MissionConfig::clear_has_exp_rate() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void MissionConfig::clear_exp_rate() {
  exp_rate_ = 0;
  clear_has_exp_rate();
  SetDirty();
}
inline float MissionConfig::exp_rate() const {
  return exp_rate_;
}
inline void MissionConfig::set_exp_rate(float value) {
  SetDirty();
  set_has_exp_rate();
  exp_rate_ = value;
}

// required int32 gold = 15;
inline bool MissionConfig::has_gold() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void MissionConfig::set_has_gold() {
  _has_bits_[0] |= 0x00004000u;
}
inline void MissionConfig::clear_has_gold() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void MissionConfig::clear_gold() {
  gold_ = 0;
  clear_has_gold();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::gold() const {
  return gold_;
}
inline void MissionConfig::set_gold(::google::protobuf::int32 value) {
  SetDirty();
  set_has_gold();
  gold_ = value;
}

// required float gold_rate = 16;
inline bool MissionConfig::has_gold_rate() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void MissionConfig::set_has_gold_rate() {
  _has_bits_[0] |= 0x00008000u;
}
inline void MissionConfig::clear_has_gold_rate() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void MissionConfig::clear_gold_rate() {
  gold_rate_ = 0;
  clear_has_gold_rate();
  SetDirty();
}
inline float MissionConfig::gold_rate() const {
  return gold_rate_;
}
inline void MissionConfig::set_gold_rate(float value) {
  SetDirty();
  set_has_gold_rate();
  gold_rate_ = value;
}

// required int32 package_id = 17;
inline bool MissionConfig::has_package_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void MissionConfig::set_has_package_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void MissionConfig::clear_has_package_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void MissionConfig::clear_package_id() {
  package_id_ = 0;
  clear_has_package_id();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::package_id() const {
  return package_id_;
}
inline void MissionConfig::set_package_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_package_id();
  package_id_ = value;
}

// required int32 publish_npc_id = 18;
inline bool MissionConfig::has_publish_npc_id() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void MissionConfig::set_has_publish_npc_id() {
  _has_bits_[0] |= 0x00020000u;
}
inline void MissionConfig::clear_has_publish_npc_id() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void MissionConfig::clear_publish_npc_id() {
  publish_npc_id_ = 0;
  clear_has_publish_npc_id();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::publish_npc_id() const {
  return publish_npc_id_;
}
inline void MissionConfig::set_publish_npc_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_publish_npc_id();
  publish_npc_id_ = value;
}

// required int32 commit_npc_id = 19;
inline bool MissionConfig::has_commit_npc_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void MissionConfig::set_has_commit_npc_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void MissionConfig::clear_has_commit_npc_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void MissionConfig::clear_commit_npc_id() {
  commit_npc_id_ = 0;
  clear_has_commit_npc_id();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::commit_npc_id() const {
  return commit_npc_id_;
}
inline void MissionConfig::set_commit_npc_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_commit_npc_id();
  commit_npc_id_ = value;
}

// required int32 other_npc_group = 20;
inline bool MissionConfig::has_other_npc_group() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void MissionConfig::set_has_other_npc_group() {
  _has_bits_[0] |= 0x00080000u;
}
inline void MissionConfig::clear_has_other_npc_group() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void MissionConfig::clear_other_npc_group() {
  other_npc_group_ = 0;
  clear_has_other_npc_group();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::other_npc_group() const {
  return other_npc_group_;
}
inline void MissionConfig::set_other_npc_group(::google::protobuf::int32 value) {
  SetDirty();
  set_has_other_npc_group();
  other_npc_group_ = value;
}

// required int32 roll_drop = 21;
inline bool MissionConfig::has_roll_drop() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void MissionConfig::set_has_roll_drop() {
  _has_bits_[0] |= 0x00100000u;
}
inline void MissionConfig::clear_has_roll_drop() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void MissionConfig::clear_roll_drop() {
  roll_drop_ = 0;
  clear_has_roll_drop();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::roll_drop() const {
  return roll_drop_;
}
inline void MissionConfig::set_roll_drop(::google::protobuf::int32 value) {
  SetDirty();
  set_has_roll_drop();
  roll_drop_ = value;
}

// required int32 is_open = 22;
inline bool MissionConfig::has_is_open() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void MissionConfig::set_has_is_open() {
  _has_bits_[0] |= 0x00200000u;
}
inline void MissionConfig::clear_has_is_open() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void MissionConfig::clear_is_open() {
  is_open_ = 0;
  clear_has_is_open();
  SetDirty();
}
inline ::google::protobuf::int32 MissionConfig::is_open() const {
  return is_open_;
}
inline void MissionConfig::set_is_open(::google::protobuf::int32 value) {
  SetDirty();
  set_has_is_open();
  is_open_ = value;
}

// -------------------------------------------------------------------

// MissionExConfig

// required int32 index = 1;
inline bool MissionExConfig::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MissionExConfig::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MissionExConfig::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MissionExConfig::clear_index() {
  index_ = 0;
  clear_has_index();
  SetDirty();
}
inline ::google::protobuf::int32 MissionExConfig::index() const {
  return index_;
}
inline void MissionExConfig::set_index(::google::protobuf::int32 value) {
  SetDirty();
  set_has_index();
  index_ = value;
}

// required .Config.SubFinishType sub_type = 2;
inline bool MissionExConfig::has_sub_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MissionExConfig::set_has_sub_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MissionExConfig::clear_has_sub_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MissionExConfig::clear_sub_type() {
  sub_type_ = -1;
  clear_has_sub_type();
  SetDirty();
}
inline ::Config::SubFinishType MissionExConfig::sub_type() const {
  return static_cast< ::Config::SubFinishType >(sub_type_);
}
inline void MissionExConfig::set_sub_type(::Config::SubFinishType value) {
  assert(::Config::SubFinishType_IsValid(value));
  SetDirty();
  set_has_sub_type();
  sub_type_ = value;
}

// repeated int32 monster = 3;
inline int MissionExConfig::monster_size() const {
  return monster_.size();
}
inline void MissionExConfig::clear_monster() {
  monster_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 MissionExConfig::monster(int index) const {
  return monster_.Get(index);
}
inline void MissionExConfig::set_monster(int index, ::google::protobuf::int32 value) {
  SetDirty();
  monster_.Set(index, value);
}
inline void MissionExConfig::add_monster(::google::protobuf::int32 value) {
  SetDirty();
  monster_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MissionExConfig::monster() const {
  return monster_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MissionExConfig::mutable_monster() {
  SetDirty();
  return &monster_;
}

// repeated int32 item = 4;
inline int MissionExConfig::item_size() const {
  return item_.size();
}
inline void MissionExConfig::clear_item() {
  item_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 MissionExConfig::item(int index) const {
  return item_.Get(index);
}
inline void MissionExConfig::set_item(int index, ::google::protobuf::int32 value) {
  SetDirty();
  item_.Set(index, value);
}
inline void MissionExConfig::add_item(::google::protobuf::int32 value) {
  SetDirty();
  item_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MissionExConfig::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MissionExConfig::mutable_item() {
  SetDirty();
  return &item_;
}

// repeated int32 rate = 5;
inline int MissionExConfig::rate_size() const {
  return rate_.size();
}
inline void MissionExConfig::clear_rate() {
  rate_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 MissionExConfig::rate(int index) const {
  return rate_.Get(index);
}
inline void MissionExConfig::set_rate(int index, ::google::protobuf::int32 value) {
  SetDirty();
  rate_.Set(index, value);
}
inline void MissionExConfig::add_rate(::google::protobuf::int32 value) {
  SetDirty();
  rate_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MissionExConfig::rate() const {
  return rate_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MissionExConfig::mutable_rate() {
  SetDirty();
  return &rate_;
}

// repeated int32 count = 6;
inline int MissionExConfig::count_size() const {
  return count_.size();
}
inline void MissionExConfig::clear_count() {
  count_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 MissionExConfig::count(int index) const {
  return count_.Get(index);
}
inline void MissionExConfig::set_count(int index, ::google::protobuf::int32 value) {
  SetDirty();
  count_.Set(index, value);
}
inline void MissionExConfig::add_count(::google::protobuf::int32 value) {
  SetDirty();
  count_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MissionExConfig::count() const {
  return count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MissionExConfig::mutable_count() {
  SetDirty();
  return &count_;
}

// required int32 pos_param = 7;
inline bool MissionExConfig::has_pos_param() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MissionExConfig::set_has_pos_param() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MissionExConfig::clear_has_pos_param() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MissionExConfig::clear_pos_param() {
  pos_param_ = 0;
  clear_has_pos_param();
  SetDirty();
}
inline ::google::protobuf::int32 MissionExConfig::pos_param() const {
  return pos_param_;
}
inline void MissionExConfig::set_pos_param(::google::protobuf::int32 value) {
  SetDirty();
  set_has_pos_param();
  pos_param_ = value;
}

// -------------------------------------------------------------------

// TargetConfig

// required int32 index = 1;
inline bool TargetConfig::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TargetConfig::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TargetConfig::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TargetConfig::clear_index() {
  index_ = 0;
  clear_has_index();
  SetDirty();
}
inline ::google::protobuf::int32 TargetConfig::index() const {
  return index_;
}
inline void TargetConfig::set_index(::google::protobuf::int32 value) {
  SetDirty();
  set_has_index();
  index_ = value;
}

// required int32 min_level = 2;
inline bool TargetConfig::has_min_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TargetConfig::set_has_min_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TargetConfig::clear_has_min_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TargetConfig::clear_min_level() {
  min_level_ = 0;
  clear_has_min_level();
  SetDirty();
}
inline ::google::protobuf::int32 TargetConfig::min_level() const {
  return min_level_;
}
inline void TargetConfig::set_min_level(::google::protobuf::int32 value) {
  SetDirty();
  set_has_min_level();
  min_level_ = value;
}

// required int32 max_level = 3;
inline bool TargetConfig::has_max_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TargetConfig::set_has_max_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TargetConfig::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TargetConfig::clear_max_level() {
  max_level_ = 0;
  clear_has_max_level();
  SetDirty();
}
inline ::google::protobuf::int32 TargetConfig::max_level() const {
  return max_level_;
}
inline void TargetConfig::set_max_level(::google::protobuf::int32 value) {
  SetDirty();
  set_has_max_level();
  max_level_ = value;
}

// required int32 switch_open = 4;
inline bool TargetConfig::has_switch_open() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TargetConfig::set_has_switch_open() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TargetConfig::clear_has_switch_open() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TargetConfig::clear_switch_open() {
  switch_open_ = 0;
  clear_has_switch_open();
  SetDirty();
}
inline ::google::protobuf::int32 TargetConfig::switch_open() const {
  return switch_open_;
}
inline void TargetConfig::set_switch_open(::google::protobuf::int32 value) {
  SetDirty();
  set_has_switch_open();
  switch_open_ = value;
}

// required .Config.TargetFinishType finish_type = 5;
inline bool TargetConfig::has_finish_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TargetConfig::set_has_finish_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TargetConfig::clear_has_finish_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TargetConfig::clear_finish_type() {
  finish_type_ = -1;
  clear_has_finish_type();
  SetDirty();
}
inline ::Config::TargetFinishType TargetConfig::finish_type() const {
  return static_cast< ::Config::TargetFinishType >(finish_type_);
}
inline void TargetConfig::set_finish_type(::Config::TargetFinishType value) {
  assert(::Config::TargetFinishType_IsValid(value));
  SetDirty();
  set_has_finish_type();
  finish_type_ = value;
}

// required int32 camp = 6;
inline bool TargetConfig::has_camp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TargetConfig::set_has_camp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TargetConfig::clear_has_camp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TargetConfig::clear_camp() {
  camp_ = 0;
  clear_has_camp();
  SetDirty();
}
inline ::google::protobuf::int32 TargetConfig::camp() const {
  return camp_;
}
inline void TargetConfig::set_camp(::google::protobuf::int32 value) {
  SetDirty();
  set_has_camp();
  camp_ = value;
}

// repeated int32 param = 7;
inline int TargetConfig::param_size() const {
  return param_.size();
}
inline void TargetConfig::clear_param() {
  param_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 TargetConfig::param(int index) const {
  return param_.Get(index);
}
inline void TargetConfig::set_param(int index, ::google::protobuf::int32 value) {
  SetDirty();
  param_.Set(index, value);
}
inline void TargetConfig::add_param(::google::protobuf::int32 value) {
  SetDirty();
  param_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TargetConfig::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TargetConfig::mutable_param() {
  SetDirty();
  return &param_;
}

// repeated int32 reward_item = 8;
inline int TargetConfig::reward_item_size() const {
  return reward_item_.size();
}
inline void TargetConfig::clear_reward_item() {
  reward_item_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 TargetConfig::reward_item(int index) const {
  return reward_item_.Get(index);
}
inline void TargetConfig::set_reward_item(int index, ::google::protobuf::int32 value) {
  SetDirty();
  reward_item_.Set(index, value);
}
inline void TargetConfig::add_reward_item(::google::protobuf::int32 value) {
  SetDirty();
  reward_item_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TargetConfig::reward_item() const {
  return reward_item_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TargetConfig::mutable_reward_item() {
  SetDirty();
  return &reward_item_;
}

// repeated int32 count = 9;
inline int TargetConfig::count_size() const {
  return count_.size();
}
inline void TargetConfig::clear_count() {
  count_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 TargetConfig::count(int index) const {
  return count_.Get(index);
}
inline void TargetConfig::set_count(int index, ::google::protobuf::int32 value) {
  SetDirty();
  count_.Set(index, value);
}
inline void TargetConfig::add_count(::google::protobuf::int32 value) {
  SetDirty();
  count_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TargetConfig::count() const {
  return count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TargetConfig::mutable_count() {
  SetDirty();
  return &count_;
}

// optional int32 group = 10;
inline bool TargetConfig::has_group() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TargetConfig::set_has_group() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TargetConfig::clear_has_group() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TargetConfig::clear_group() {
  group_ = 0;
  clear_has_group();
  SetDirty();
}
inline ::google::protobuf::int32 TargetConfig::group() const {
  return group_;
}
inline void TargetConfig::set_group(::google::protobuf::int32 value) {
  SetDirty();
  set_has_group();
  group_ = value;
}

// -------------------------------------------------------------------

// StoryStageConfig

// required int32 mission_id = 1;
inline bool StoryStageConfig::has_mission_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoryStageConfig::set_has_mission_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoryStageConfig::clear_has_mission_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoryStageConfig::clear_mission_id() {
  mission_id_ = 0;
  clear_has_mission_id();
  SetDirty();
}
inline ::google::protobuf::int32 StoryStageConfig::mission_id() const {
  return mission_id_;
}
inline void StoryStageConfig::set_mission_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_mission_id();
  mission_id_ = value;
}

// required int32 stage_index = 2;
inline bool StoryStageConfig::has_stage_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoryStageConfig::set_has_stage_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoryStageConfig::clear_has_stage_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoryStageConfig::clear_stage_index() {
  stage_index_ = 0;
  clear_has_stage_index();
  SetDirty();
}
inline ::google::protobuf::int32 StoryStageConfig::stage_index() const {
  return stage_index_;
}
inline void StoryStageConfig::set_stage_index(::google::protobuf::int32 value) {
  SetDirty();
  set_has_stage_index();
  stage_index_ = value;
}

// required int32 event_type_1 = 3;
inline bool StoryStageConfig::has_event_type_1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StoryStageConfig::set_has_event_type_1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StoryStageConfig::clear_has_event_type_1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StoryStageConfig::clear_event_type_1() {
  event_type_1_ = 0;
  clear_has_event_type_1();
  SetDirty();
}
inline ::google::protobuf::int32 StoryStageConfig::event_type_1() const {
  return event_type_1_;
}
inline void StoryStageConfig::set_event_type_1(::google::protobuf::int32 value) {
  SetDirty();
  set_has_event_type_1();
  event_type_1_ = value;
}

// required int32 npc_id_1 = 4;
inline bool StoryStageConfig::has_npc_id_1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StoryStageConfig::set_has_npc_id_1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StoryStageConfig::clear_has_npc_id_1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StoryStageConfig::clear_npc_id_1() {
  npc_id_1_ = 0;
  clear_has_npc_id_1();
  SetDirty();
}
inline ::google::protobuf::int32 StoryStageConfig::npc_id_1() const {
  return npc_id_1_;
}
inline void StoryStageConfig::set_npc_id_1(::google::protobuf::int32 value) {
  SetDirty();
  set_has_npc_id_1();
  npc_id_1_ = value;
}

// required int32 npc_side_1 = 5;
inline bool StoryStageConfig::has_npc_side_1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StoryStageConfig::set_has_npc_side_1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StoryStageConfig::clear_has_npc_side_1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StoryStageConfig::clear_npc_side_1() {
  npc_side_1_ = 0;
  clear_has_npc_side_1();
  SetDirty();
}
inline ::google::protobuf::int32 StoryStageConfig::npc_side_1() const {
  return npc_side_1_;
}
inline void StoryStageConfig::set_npc_side_1(::google::protobuf::int32 value) {
  SetDirty();
  set_has_npc_side_1();
  npc_side_1_ = value;
}

// required int32 npc_pos_1 = 6;
inline bool StoryStageConfig::has_npc_pos_1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StoryStageConfig::set_has_npc_pos_1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StoryStageConfig::clear_has_npc_pos_1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StoryStageConfig::clear_npc_pos_1() {
  npc_pos_1_ = 0;
  clear_has_npc_pos_1();
  SetDirty();
}
inline ::google::protobuf::int32 StoryStageConfig::npc_pos_1() const {
  return npc_pos_1_;
}
inline void StoryStageConfig::set_npc_pos_1(::google::protobuf::int32 value) {
  SetDirty();
  set_has_npc_pos_1();
  npc_pos_1_ = value;
}

// required int32 npc_id_2 = 7;
inline bool StoryStageConfig::has_npc_id_2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StoryStageConfig::set_has_npc_id_2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void StoryStageConfig::clear_has_npc_id_2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void StoryStageConfig::clear_npc_id_2() {
  npc_id_2_ = 0;
  clear_has_npc_id_2();
  SetDirty();
}
inline ::google::protobuf::int32 StoryStageConfig::npc_id_2() const {
  return npc_id_2_;
}
inline void StoryStageConfig::set_npc_id_2(::google::protobuf::int32 value) {
  SetDirty();
  set_has_npc_id_2();
  npc_id_2_ = value;
}

// required int32 npc_side_2 = 8;
inline bool StoryStageConfig::has_npc_side_2() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void StoryStageConfig::set_has_npc_side_2() {
  _has_bits_[0] |= 0x00000080u;
}
inline void StoryStageConfig::clear_has_npc_side_2() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void StoryStageConfig::clear_npc_side_2() {
  npc_side_2_ = 0;
  clear_has_npc_side_2();
  SetDirty();
}
inline ::google::protobuf::int32 StoryStageConfig::npc_side_2() const {
  return npc_side_2_;
}
inline void StoryStageConfig::set_npc_side_2(::google::protobuf::int32 value) {
  SetDirty();
  set_has_npc_side_2();
  npc_side_2_ = value;
}

// required int32 npc_pos_2 = 9;
inline bool StoryStageConfig::has_npc_pos_2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void StoryStageConfig::set_has_npc_pos_2() {
  _has_bits_[0] |= 0x00000100u;
}
inline void StoryStageConfig::clear_has_npc_pos_2() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void StoryStageConfig::clear_npc_pos_2() {
  npc_pos_2_ = 0;
  clear_has_npc_pos_2();
  SetDirty();
}
inline ::google::protobuf::int32 StoryStageConfig::npc_pos_2() const {
  return npc_pos_2_;
}
inline void StoryStageConfig::set_npc_pos_2(::google::protobuf::int32 value) {
  SetDirty();
  set_has_npc_pos_2();
  npc_pos_2_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MissionConfig_2eproto__INCLUDED

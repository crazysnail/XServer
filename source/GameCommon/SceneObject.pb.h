// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SceneObject.proto

#ifndef PROTOBUF_SceneObject_2eproto__INCLUDED
#define PROTOBUF_SceneObject_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "AllPacketEnum.pb.h"
#include "PlayerBasicInfo.pb.h"
#include "Base.pb.h"
#include "MonsterConfig.pb.h"
#include "MissionPacket.pb.h"
#include "ProtoBufOption.pb.h"
#include "TrialFieldDB.pb.h"
// @@protoc_insertion_point(includes)

namespace Packet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SceneObject_2eproto();
void protobuf_AssignDesc_SceneObject_2eproto();
void protobuf_ShutdownFile_SceneObject_2eproto();

class SceneLayout;
class NpcStaticConfig;
class NpcDynamicConfig;
class PositionGroupConfig;
class NpcInfo;
class PlayerList;
class NpcList;
class PlayerNpc;
class PlayerNpcList;
class NpcSession;
class PlayerNpcSession;
class NpcSessionReply;
class NoNpcSession;
class MountConfig;

// ===================================================================

class SceneLayout : public ::google::protobuf::Message {
 public:
  SceneLayout();
  virtual ~SceneLayout();

  SceneLayout(const SceneLayout& from);

  inline SceneLayout& operator=(const SceneLayout& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneLayout& default_instance();

  void Swap(SceneLayout* other);

  // implements Message ----------------------------------------------

  SceneLayout* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneLayout& from);
  void MergeFrom(const SceneLayout& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 scene_id = 2;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);

  // required .Packet.Position position = 3;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 3;
  inline const ::Packet::Position& position() const;
  inline ::Packet::Position* mutable_position();
  inline ::Packet::Position* release_position();
  inline void set_allocated_position(::Packet::Position* position);

  // required float angle = 4;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 4;
  inline float angle() const;
  inline void set_angle(float value);

  // required int32 group_index = 5;
  inline bool has_group_index() const;
  inline void clear_group_index();
  static const int kGroupIndexFieldNumber = 5;
  inline ::google::protobuf::int32 group_index() const;
  inline void set_group_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.SceneLayout)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_angle();
  inline void clear_has_angle();
  inline void set_has_group_index();
  inline void clear_has_group_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 scene_id_;
  ::Packet::Position* position_;
  float angle_;
  ::google::protobuf::int32 group_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_SceneObject_2eproto();
  friend void protobuf_AssignDesc_SceneObject_2eproto();
  friend void protobuf_ShutdownFile_SceneObject_2eproto();

  void InitAsDefaultInstance();
  static SceneLayout* default_instance_;
};
// -------------------------------------------------------------------

class NpcStaticConfig : public ::google::protobuf::Message {
 public:
  NpcStaticConfig();
  virtual ~NpcStaticConfig();

  NpcStaticConfig(const NpcStaticConfig& from);

  inline NpcStaticConfig& operator=(const NpcStaticConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NpcStaticConfig& default_instance();

  void Swap(NpcStaticConfig* other);

  // implements Message ----------------------------------------------

  NpcStaticConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NpcStaticConfig& from);
  void MergeFrom(const NpcStaticConfig& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 npc_id = 2;
  inline bool has_npc_id() const;
  inline void clear_npc_id();
  static const int kNpcIdFieldNumber = 2;
  inline ::google::protobuf::int32 npc_id() const;
  inline void set_npc_id(::google::protobuf::int32 value);

  // required int32 pos_id = 3;
  inline bool has_pos_id() const;
  inline void clear_pos_id();
  static const int kPosIdFieldNumber = 3;
  inline ::google::protobuf::int32 pos_id() const;
  inline void set_pos_id(::google::protobuf::int32 value);

  // repeated string talk_option = 4;
  inline int talk_option_size() const;
  inline void clear_talk_option();
  static const int kTalkOptionFieldNumber = 4;
  inline const ::std::string& talk_option(int index) const;
  inline ::std::string* mutable_talk_option(int index);
  inline void set_talk_option(int index, const ::std::string& value);
  inline void set_talk_option(int index, const char* value);
  inline void set_talk_option(int index, const char* value, size_t size);
  inline ::std::string* add_talk_option();
  inline void add_talk_option(const ::std::string& value);
  inline void add_talk_option(const char* value);
  inline void add_talk_option(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& talk_option() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_talk_option();

  // @@protoc_insertion_point(class_scope:Packet.NpcStaticConfig)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_npc_id();
  inline void clear_has_npc_id();
  inline void set_has_pos_id();
  inline void clear_has_pos_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 npc_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> talk_option_;
  ::google::protobuf::int32 pos_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SceneObject_2eproto();
  friend void protobuf_AssignDesc_SceneObject_2eproto();
  friend void protobuf_ShutdownFile_SceneObject_2eproto();

  void InitAsDefaultInstance();
  static NpcStaticConfig* default_instance_;
};
// -------------------------------------------------------------------

class NpcDynamicConfig : public ::google::protobuf::Message {
 public:
  NpcDynamicConfig();
  virtual ~NpcDynamicConfig();

  NpcDynamicConfig(const NpcDynamicConfig& from);

  inline NpcDynamicConfig& operator=(const NpcDynamicConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NpcDynamicConfig& default_instance();

  void Swap(NpcDynamicConfig* other);

  // implements Message ----------------------------------------------

  NpcDynamicConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NpcDynamicConfig& from);
  void MergeFrom(const NpcDynamicConfig& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::int32 group_id() const;
  inline void set_group_id(::google::protobuf::int32 value);

  // required int32 npc_id = 3;
  inline bool has_npc_id() const;
  inline void clear_npc_id();
  static const int kNpcIdFieldNumber = 3;
  inline ::google::protobuf::int32 npc_id() const;
  inline void set_npc_id(::google::protobuf::int32 value);

  // repeated int32 monster_group = 4;
  inline int monster_group_size() const;
  inline void clear_monster_group();
  static const int kMonsterGroupFieldNumber = 4;
  inline ::google::protobuf::int32 monster_group(int index) const;
  inline void set_monster_group(int index, ::google::protobuf::int32 value);
  inline void add_monster_group(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      monster_group() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_monster_group();

  // repeated string talk_option = 5;
  inline int talk_option_size() const;
  inline void clear_talk_option();
  static const int kTalkOptionFieldNumber = 5;
  inline const ::std::string& talk_option(int index) const;
  inline ::std::string* mutable_talk_option(int index);
  inline void set_talk_option(int index, const ::std::string& value);
  inline void set_talk_option(int index, const char* value);
  inline void set_talk_option(int index, const char* value, size_t size);
  inline ::std::string* add_talk_option();
  inline void add_talk_option(const ::std::string& value);
  inline void add_talk_option(const char* value);
  inline void add_talk_option(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& talk_option() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_talk_option();

  // required string npc_tag = 6;
  inline bool has_npc_tag() const;
  inline void clear_npc_tag();
  static const int kNpcTagFieldNumber = 6;
  inline const ::std::string& npc_tag() const;
  inline void set_npc_tag(const ::std::string& value);
  inline void set_npc_tag(const char* value);
  inline void set_npc_tag(const char* value, size_t size);
  inline ::std::string* mutable_npc_tag();
  inline ::std::string* release_npc_tag();
  inline void set_allocated_npc_tag(::std::string* npc_tag);

  // required int32 pos_id = 7;
  inline bool has_pos_id() const;
  inline void clear_pos_id();
  static const int kPosIdFieldNumber = 7;
  inline ::google::protobuf::int32 pos_id() const;
  inline void set_pos_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.NpcDynamicConfig)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_npc_id();
  inline void clear_has_npc_id();
  inline void set_has_npc_tag();
  inline void clear_has_npc_tag();
  inline void set_has_pos_id();
  inline void clear_has_pos_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 group_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > monster_group_;
  ::google::protobuf::RepeatedPtrField< ::std::string> talk_option_;
  ::google::protobuf::int32 npc_id_;
  ::google::protobuf::int32 pos_id_;
  ::std::string* npc_tag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_SceneObject_2eproto();
  friend void protobuf_AssignDesc_SceneObject_2eproto();
  friend void protobuf_ShutdownFile_SceneObject_2eproto();

  void InitAsDefaultInstance();
  static NpcDynamicConfig* default_instance_;
};
// -------------------------------------------------------------------

class PositionGroupConfig : public ::google::protobuf::Message {
 public:
  PositionGroupConfig();
  virtual ~PositionGroupConfig();

  PositionGroupConfig(const PositionGroupConfig& from);

  inline PositionGroupConfig& operator=(const PositionGroupConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PositionGroupConfig& default_instance();

  void Swap(PositionGroupConfig* other);

  // implements Message ----------------------------------------------

  PositionGroupConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PositionGroupConfig& from);
  void MergeFrom(const PositionGroupConfig& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::int32 group_id() const;
  inline void set_group_id(::google::protobuf::int32 value);

  // required int32 pos_id = 2;
  inline bool has_pos_id() const;
  inline void clear_pos_id();
  static const int kPosIdFieldNumber = 2;
  inline ::google::protobuf::int32 pos_id() const;
  inline void set_pos_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.PositionGroupConfig)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_pos_id();
  inline void clear_has_pos_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 group_id_;
  ::google::protobuf::int32 pos_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SceneObject_2eproto();
  friend void protobuf_AssignDesc_SceneObject_2eproto();
  friend void protobuf_ShutdownFile_SceneObject_2eproto();

  void InitAsDefaultInstance();
  static PositionGroupConfig* default_instance_;
};
// -------------------------------------------------------------------

class NpcInfo : public ::google::protobuf::Message {
 public:
  NpcInfo();
  virtual ~NpcInfo();

  NpcInfo(const NpcInfo& from);

  inline NpcInfo& operator=(const NpcInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NpcInfo& default_instance();

  void Swap(NpcInfo* other);

  // implements Message ----------------------------------------------

  NpcInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NpcInfo& from);
  void MergeFrom(const NpcInfo& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 pos_id = 2;
  inline bool has_pos_id() const;
  inline void clear_pos_id();
  static const int kPosIdFieldNumber = 2;
  inline ::google::protobuf::int32 pos_id() const;
  inline void set_pos_id(::google::protobuf::int32 value);

  // required int32 series_id = 3;
  inline bool has_series_id() const;
  inline void clear_series_id();
  static const int kSeriesIdFieldNumber = 3;
  inline ::google::protobuf::int32 series_id() const;
  inline void set_series_id(::google::protobuf::int32 value);

  // required int32 lifetime = 4;
  inline bool has_lifetime() const;
  inline void clear_lifetime();
  static const int kLifetimeFieldNumber = 4;
  inline ::google::protobuf::int32 lifetime() const;
  inline void set_lifetime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.NpcInfo)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_pos_id();
  inline void clear_has_pos_id();
  inline void set_has_series_id();
  inline void clear_has_series_id();
  inline void set_has_lifetime();
  inline void clear_has_lifetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 pos_id_;
  ::google::protobuf::int32 series_id_;
  ::google::protobuf::int32 lifetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SceneObject_2eproto();
  friend void protobuf_AssignDesc_SceneObject_2eproto();
  friend void protobuf_ShutdownFile_SceneObject_2eproto();

  void InitAsDefaultInstance();
  static NpcInfo* default_instance_;
};
// -------------------------------------------------------------------

class PlayerList : public ::google::protobuf::Message {
 public:
  PlayerList();
  virtual ~PlayerList();

  PlayerList(const PlayerList& from);

  inline PlayerList& operator=(const PlayerList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerList& default_instance();

  void Swap(PlayerList* other);

  // implements Message ----------------------------------------------

  PlayerList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerList& from);
  void MergeFrom(const PlayerList& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.PlayerBasicInfo player_info = 1;
  inline int player_info_size() const;
  inline void clear_player_info();
  static const int kPlayerInfoFieldNumber = 1;
  inline const ::Packet::PlayerBasicInfo& player_info(int index) const;
  inline ::Packet::PlayerBasicInfo* mutable_player_info(int index);
  inline ::Packet::PlayerBasicInfo* add_player_info();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::PlayerBasicInfo >&
      player_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::PlayerBasicInfo >*
      mutable_player_info();

  // @@protoc_insertion_point(class_scope:Packet.PlayerList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::PlayerBasicInfo > player_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SceneObject_2eproto();
  friend void protobuf_AssignDesc_SceneObject_2eproto();
  friend void protobuf_ShutdownFile_SceneObject_2eproto();

  void InitAsDefaultInstance();
  static PlayerList* default_instance_;
};
// -------------------------------------------------------------------

class NpcList : public ::google::protobuf::Message {
 public:
  NpcList();
  virtual ~NpcList();

  NpcList(const NpcList& from);

  inline NpcList& operator=(const NpcList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NpcList& default_instance();

  void Swap(NpcList* other);

  // implements Message ----------------------------------------------

  NpcList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NpcList& from);
  void MergeFrom(const NpcList& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.NpcInfo npc_info = 1;
  inline int npc_info_size() const;
  inline void clear_npc_info();
  static const int kNpcInfoFieldNumber = 1;
  inline const ::Packet::NpcInfo& npc_info(int index) const;
  inline ::Packet::NpcInfo* mutable_npc_info(int index);
  inline ::Packet::NpcInfo* add_npc_info();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::NpcInfo >&
      npc_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::NpcInfo >*
      mutable_npc_info();

  // required .Packet.NpcOption option = 2;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 2;
  inline ::Packet::NpcOption option() const;
  inline void set_option(::Packet::NpcOption value);

  // @@protoc_insertion_point(class_scope:Packet.NpcList)
 private:
  inline void set_has_option();
  inline void clear_has_option();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::NpcInfo > npc_info_;
  int option_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SceneObject_2eproto();
  friend void protobuf_AssignDesc_SceneObject_2eproto();
  friend void protobuf_ShutdownFile_SceneObject_2eproto();

  void InitAsDefaultInstance();
  static NpcList* default_instance_;
};
// -------------------------------------------------------------------

class PlayerNpc : public ::google::protobuf::Message {
 public:
  PlayerNpc();
  virtual ~PlayerNpc();

  PlayerNpc(const PlayerNpc& from);

  inline PlayerNpc& operator=(const PlayerNpc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerNpc& default_instance();

  void Swap(PlayerNpc* other);

  // implements Message ----------------------------------------------

  PlayerNpc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerNpc& from);
  void MergeFrom(const PlayerNpc& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DB.TrialTarget target = 1;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 1;
  inline const ::DB::TrialTarget& target() const;
  inline ::DB::TrialTarget* mutable_target();
  inline ::DB::TrialTarget* release_target();
  inline void set_allocated_target(::DB::TrialTarget* target);

  // @@protoc_insertion_point(class_scope:Packet.PlayerNpc)
 private:
  inline void set_has_target();
  inline void clear_has_target();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DB::TrialTarget* target_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SceneObject_2eproto();
  friend void protobuf_AssignDesc_SceneObject_2eproto();
  friend void protobuf_ShutdownFile_SceneObject_2eproto();

  void InitAsDefaultInstance();
  static PlayerNpc* default_instance_;
};
// -------------------------------------------------------------------

class PlayerNpcList : public ::google::protobuf::Message {
 public:
  PlayerNpcList();
  virtual ~PlayerNpcList();

  PlayerNpcList(const PlayerNpcList& from);

  inline PlayerNpcList& operator=(const PlayerNpcList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerNpcList& default_instance();

  void Swap(PlayerNpcList* other);

  // implements Message ----------------------------------------------

  PlayerNpcList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerNpcList& from);
  void MergeFrom(const PlayerNpcList& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Packet.PlayerNpc player_npc = 1;
  inline int player_npc_size() const;
  inline void clear_player_npc();
  static const int kPlayerNpcFieldNumber = 1;
  inline const ::Packet::PlayerNpc& player_npc(int index) const;
  inline ::Packet::PlayerNpc* mutable_player_npc(int index);
  inline ::Packet::PlayerNpc* add_player_npc();
  inline const ::google::protobuf::RepeatedPtrField< ::Packet::PlayerNpc >&
      player_npc() const;
  inline ::google::protobuf::RepeatedPtrField< ::Packet::PlayerNpc >*
      mutable_player_npc();

  // required .Packet.NpcOption option = 2;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 2;
  inline ::Packet::NpcOption option() const;
  inline void set_option(::Packet::NpcOption value);

  // @@protoc_insertion_point(class_scope:Packet.PlayerNpcList)
 private:
  inline void set_has_option();
  inline void clear_has_option();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Packet::PlayerNpc > player_npc_;
  int option_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SceneObject_2eproto();
  friend void protobuf_AssignDesc_SceneObject_2eproto();
  friend void protobuf_ShutdownFile_SceneObject_2eproto();

  void InitAsDefaultInstance();
  static PlayerNpcList* default_instance_;
};
// -------------------------------------------------------------------

class NpcSession : public ::google::protobuf::Message {
 public:
  NpcSession();
  virtual ~NpcSession();

  NpcSession(const NpcSession& from);

  inline NpcSession& operator=(const NpcSession& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NpcSession& default_instance();

  void Swap(NpcSession* other);

  // implements Message ----------------------------------------------

  NpcSession* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NpcSession& from);
  void MergeFrom(const NpcSession& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 series_id = 2;
  inline bool has_series_id() const;
  inline void clear_series_id();
  static const int kSeriesIdFieldNumber = 2;
  inline ::google::protobuf::int32 series_id() const;
  inline void set_series_id(::google::protobuf::int32 value);

  // optional int32 mission_id = 3;
  inline bool has_mission_id() const;
  inline void clear_mission_id();
  static const int kMissionIdFieldNumber = 3;
  inline ::google::protobuf::int32 mission_id() const;
  inline void set_mission_id(::google::protobuf::int32 value);

  // optional .Packet.MissionOption option = 4;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 4;
  inline ::Packet::MissionOption option() const;
  inline void set_option(::Packet::MissionOption value);

  // optional int32 option_index = 5;
  inline bool has_option_index() const;
  inline void clear_option_index();
  static const int kOptionIndexFieldNumber = 5;
  inline ::google::protobuf::int32 option_index() const;
  inline void set_option_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.NpcSession)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_series_id();
  inline void clear_has_series_id();
  inline void set_has_mission_id();
  inline void clear_has_mission_id();
  inline void set_has_option();
  inline void clear_has_option();
  inline void set_has_option_index();
  inline void clear_has_option_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 series_id_;
  ::google::protobuf::int32 mission_id_;
  int option_;
  ::google::protobuf::int32 option_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_SceneObject_2eproto();
  friend void protobuf_AssignDesc_SceneObject_2eproto();
  friend void protobuf_ShutdownFile_SceneObject_2eproto();

  void InitAsDefaultInstance();
  static NpcSession* default_instance_;
};
// -------------------------------------------------------------------

class PlayerNpcSession : public ::google::protobuf::Message {
 public:
  PlayerNpcSession();
  virtual ~PlayerNpcSession();

  PlayerNpcSession(const PlayerNpcSession& from);

  inline PlayerNpcSession& operator=(const PlayerNpcSession& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerNpcSession& default_instance();

  void Swap(PlayerNpcSession* other);

  // implements Message ----------------------------------------------

  PlayerNpcSession* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerNpcSession& from);
  void MergeFrom(const PlayerNpcSession& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 target_guid = 1;
  inline bool has_target_guid() const;
  inline void clear_target_guid();
  static const int kTargetGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 target_guid() const;
  inline void set_target_guid(::google::protobuf::uint64 value);

  // optional int32 option_index = 2;
  inline bool has_option_index() const;
  inline void clear_option_index();
  static const int kOptionIndexFieldNumber = 2;
  inline ::google::protobuf::int32 option_index() const;
  inline void set_option_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.PlayerNpcSession)
 private:
  inline void set_has_target_guid();
  inline void clear_has_target_guid();
  inline void set_has_option_index();
  inline void clear_has_option_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 target_guid_;
  ::google::protobuf::int32 option_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SceneObject_2eproto();
  friend void protobuf_AssignDesc_SceneObject_2eproto();
  friend void protobuf_ShutdownFile_SceneObject_2eproto();

  void InitAsDefaultInstance();
  static PlayerNpcSession* default_instance_;
};
// -------------------------------------------------------------------

class NpcSessionReply : public ::google::protobuf::Message {
 public:
  NpcSessionReply();
  virtual ~NpcSessionReply();

  NpcSessionReply(const NpcSessionReply& from);

  inline NpcSessionReply& operator=(const NpcSessionReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NpcSessionReply& default_instance();

  void Swap(NpcSessionReply* other);

  // implements Message ----------------------------------------------

  NpcSessionReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NpcSessionReply& from);
  void MergeFrom(const NpcSessionReply& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required string msg_name = 2;
  inline bool has_msg_name() const;
  inline void clear_msg_name();
  static const int kMsgNameFieldNumber = 2;
  inline const ::std::string& msg_name() const;
  inline void set_msg_name(const ::std::string& value);
  inline void set_msg_name(const char* value);
  inline void set_msg_name(const char* value, size_t size);
  inline ::std::string* mutable_msg_name();
  inline ::std::string* release_msg_name();
  inline void set_allocated_msg_name(::std::string* msg_name);

  // optional string string_param = 3;
  inline bool has_string_param() const;
  inline void clear_string_param();
  static const int kStringParamFieldNumber = 3;
  inline const ::std::string& string_param() const;
  inline void set_string_param(const ::std::string& value);
  inline void set_string_param(const char* value);
  inline void set_string_param(const char* value, size_t size);
  inline ::std::string* mutable_string_param();
  inline ::std::string* release_string_param();
  inline void set_allocated_string_param(::std::string* string_param);

  // optional int32 int_param = 4;
  inline bool has_int_param() const;
  inline void clear_int_param();
  static const int kIntParamFieldNumber = 4;
  inline ::google::protobuf::int32 int_param() const;
  inline void set_int_param(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.NpcSessionReply)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_msg_name();
  inline void clear_has_msg_name();
  inline void set_has_string_param();
  inline void clear_has_string_param();
  inline void set_has_int_param();
  inline void clear_has_int_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* msg_name_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 int_param_;
  ::std::string* string_param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SceneObject_2eproto();
  friend void protobuf_AssignDesc_SceneObject_2eproto();
  friend void protobuf_ShutdownFile_SceneObject_2eproto();

  void InitAsDefaultInstance();
  static NpcSessionReply* default_instance_;
};
// -------------------------------------------------------------------

class NoNpcSession : public ::google::protobuf::Message {
 public:
  NoNpcSession();
  virtual ~NoNpcSession();

  NoNpcSession(const NoNpcSession& from);

  inline NoNpcSession& operator=(const NoNpcSession& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NoNpcSession& default_instance();

  void Swap(NoNpcSession* other);

  // implements Message ----------------------------------------------

  NoNpcSession* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NoNpcSession& from);
  void MergeFrom(const NoNpcSession& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string string_param = 1;
  inline bool has_string_param() const;
  inline void clear_string_param();
  static const int kStringParamFieldNumber = 1;
  inline const ::std::string& string_param() const;
  inline void set_string_param(const ::std::string& value);
  inline void set_string_param(const char* value);
  inline void set_string_param(const char* value, size_t size);
  inline ::std::string* mutable_string_param();
  inline ::std::string* release_string_param();
  inline void set_allocated_string_param(::std::string* string_param);

  // required fixed64 long_param = 2;
  inline bool has_long_param() const;
  inline void clear_long_param();
  static const int kLongParamFieldNumber = 2;
  inline ::google::protobuf::uint64 long_param() const;
  inline void set_long_param(::google::protobuf::uint64 value);

  // required int32 int_param = 3;
  inline bool has_int_param() const;
  inline void clear_int_param();
  static const int kIntParamFieldNumber = 3;
  inline ::google::protobuf::int32 int_param() const;
  inline void set_int_param(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.NoNpcSession)
 private:
  inline void set_has_string_param();
  inline void clear_has_string_param();
  inline void set_has_long_param();
  inline void clear_has_long_param();
  inline void set_has_int_param();
  inline void clear_has_int_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* string_param_;
  ::google::protobuf::uint64 long_param_;
  ::google::protobuf::int32 int_param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_SceneObject_2eproto();
  friend void protobuf_AssignDesc_SceneObject_2eproto();
  friend void protobuf_ShutdownFile_SceneObject_2eproto();

  void InitAsDefaultInstance();
  static NoNpcSession* default_instance_;
};
// -------------------------------------------------------------------

class MountConfig : public ::google::protobuf::Message {
 public:
  MountConfig();
  virtual ~MountConfig();

  MountConfig(const MountConfig& from);

  inline MountConfig& operator=(const MountConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountConfig& default_instance();

  void Swap(MountConfig* other);

  // implements Message ----------------------------------------------

  MountConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountConfig& from);
  void MergeFrom(const MountConfig& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 speed = 2;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 2;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);

  // required int32 impact_id = 3;
  inline bool has_impact_id() const;
  inline void clear_impact_id();
  static const int kImpactIdFieldNumber = 3;
  inline ::google::protobuf::int32 impact_id() const;
  inline void set_impact_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.MountConfig)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_impact_id();
  inline void clear_has_impact_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 impact_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_SceneObject_2eproto();
  friend void protobuf_AssignDesc_SceneObject_2eproto();
  friend void protobuf_ShutdownFile_SceneObject_2eproto();

  void InitAsDefaultInstance();
  static MountConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// SceneLayout

// required int32 id = 1;
inline bool SceneLayout::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneLayout::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneLayout::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneLayout::clear_id() {
  id_ = 0;
  clear_has_id();
  SetDirty();
}
inline ::google::protobuf::int32 SceneLayout::id() const {
  return id_;
}
inline void SceneLayout::set_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_id();
  id_ = value;
}

// required int32 scene_id = 2;
inline bool SceneLayout::has_scene_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneLayout::set_has_scene_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneLayout::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneLayout::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
  SetDirty();
}
inline ::google::protobuf::int32 SceneLayout::scene_id() const {
  return scene_id_;
}
inline void SceneLayout::set_scene_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_scene_id();
  scene_id_ = value;
}

// required .Packet.Position position = 3;
inline bool SceneLayout::has_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneLayout::set_has_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneLayout::clear_has_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneLayout::clear_position() {
  if (position_ != NULL) position_->::Packet::Position::Clear();
  clear_has_position();
  SetDirty();
}
inline const ::Packet::Position& SceneLayout::position() const {
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::Packet::Position* SceneLayout::mutable_position() {
  SetDirty();
  set_has_position();
  if (position_ == NULL) position_ = new ::Packet::Position;
  return position_;
}
inline ::Packet::Position* SceneLayout::release_position() {
  SetDirty();
  clear_has_position();
  ::Packet::Position* temp = position_;
  position_ = NULL;
  return temp;
}
inline void SceneLayout::set_allocated_position(::Packet::Position* position) {
  SetDirty();
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
}

// required float angle = 4;
inline bool SceneLayout::has_angle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SceneLayout::set_has_angle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SceneLayout::clear_has_angle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SceneLayout::clear_angle() {
  angle_ = 0;
  clear_has_angle();
  SetDirty();
}
inline float SceneLayout::angle() const {
  return angle_;
}
inline void SceneLayout::set_angle(float value) {
  SetDirty();
  set_has_angle();
  angle_ = value;
}

// required int32 group_index = 5;
inline bool SceneLayout::has_group_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SceneLayout::set_has_group_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SceneLayout::clear_has_group_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SceneLayout::clear_group_index() {
  group_index_ = 0;
  clear_has_group_index();
  SetDirty();
}
inline ::google::protobuf::int32 SceneLayout::group_index() const {
  return group_index_;
}
inline void SceneLayout::set_group_index(::google::protobuf::int32 value) {
  SetDirty();
  set_has_group_index();
  group_index_ = value;
}

// -------------------------------------------------------------------

// NpcStaticConfig

// required int32 index = 1;
inline bool NpcStaticConfig::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NpcStaticConfig::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NpcStaticConfig::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NpcStaticConfig::clear_index() {
  index_ = 0;
  clear_has_index();
  SetDirty();
}
inline ::google::protobuf::int32 NpcStaticConfig::index() const {
  return index_;
}
inline void NpcStaticConfig::set_index(::google::protobuf::int32 value) {
  SetDirty();
  set_has_index();
  index_ = value;
}

// required int32 npc_id = 2;
inline bool NpcStaticConfig::has_npc_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NpcStaticConfig::set_has_npc_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NpcStaticConfig::clear_has_npc_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NpcStaticConfig::clear_npc_id() {
  npc_id_ = 0;
  clear_has_npc_id();
  SetDirty();
}
inline ::google::protobuf::int32 NpcStaticConfig::npc_id() const {
  return npc_id_;
}
inline void NpcStaticConfig::set_npc_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_npc_id();
  npc_id_ = value;
}

// required int32 pos_id = 3;
inline bool NpcStaticConfig::has_pos_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NpcStaticConfig::set_has_pos_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NpcStaticConfig::clear_has_pos_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NpcStaticConfig::clear_pos_id() {
  pos_id_ = 0;
  clear_has_pos_id();
  SetDirty();
}
inline ::google::protobuf::int32 NpcStaticConfig::pos_id() const {
  return pos_id_;
}
inline void NpcStaticConfig::set_pos_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_pos_id();
  pos_id_ = value;
}

// repeated string talk_option = 4;
inline int NpcStaticConfig::talk_option_size() const {
  return talk_option_.size();
}
inline void NpcStaticConfig::clear_talk_option() {
  talk_option_.Clear();
  SetDirty();
}
inline const ::std::string& NpcStaticConfig::talk_option(int index) const {
  return talk_option_.Get(index);
}
inline ::std::string* NpcStaticConfig::mutable_talk_option(int index) {
  SetDirty();
  return talk_option_.Mutable(index);
}
inline void NpcStaticConfig::set_talk_option(int index, const ::std::string& value) {
  SetDirty();
  talk_option_.Mutable(index)->assign(value);
}
inline void NpcStaticConfig::set_talk_option(int index, const char* value) {
  SetDirty();
  talk_option_.Mutable(index)->assign(value);
}
inline void NpcStaticConfig::set_talk_option(int index, const char* value, size_t size) {
  SetDirty();
  talk_option_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NpcStaticConfig::add_talk_option() {
  SetDirty();
  return talk_option_.Add();
}
inline void NpcStaticConfig::add_talk_option(const ::std::string& value) {
  SetDirty();
  talk_option_.Add()->assign(value);
}
inline void NpcStaticConfig::add_talk_option(const char* value) {
  SetDirty();
  talk_option_.Add()->assign(value);
}
inline void NpcStaticConfig::add_talk_option(const char* value, size_t size) {
  SetDirty();
  talk_option_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NpcStaticConfig::talk_option() const {
  return talk_option_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NpcStaticConfig::mutable_talk_option() {
  SetDirty();
  return &talk_option_;
}

// -------------------------------------------------------------------

// NpcDynamicConfig

// required int32 index = 1;
inline bool NpcDynamicConfig::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NpcDynamicConfig::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NpcDynamicConfig::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NpcDynamicConfig::clear_index() {
  index_ = 0;
  clear_has_index();
  SetDirty();
}
inline ::google::protobuf::int32 NpcDynamicConfig::index() const {
  return index_;
}
inline void NpcDynamicConfig::set_index(::google::protobuf::int32 value) {
  SetDirty();
  set_has_index();
  index_ = value;
}

// required int32 group_id = 2;
inline bool NpcDynamicConfig::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NpcDynamicConfig::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NpcDynamicConfig::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NpcDynamicConfig::clear_group_id() {
  group_id_ = 0;
  clear_has_group_id();
  SetDirty();
}
inline ::google::protobuf::int32 NpcDynamicConfig::group_id() const {
  return group_id_;
}
inline void NpcDynamicConfig::set_group_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_group_id();
  group_id_ = value;
}

// required int32 npc_id = 3;
inline bool NpcDynamicConfig::has_npc_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NpcDynamicConfig::set_has_npc_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NpcDynamicConfig::clear_has_npc_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NpcDynamicConfig::clear_npc_id() {
  npc_id_ = 0;
  clear_has_npc_id();
  SetDirty();
}
inline ::google::protobuf::int32 NpcDynamicConfig::npc_id() const {
  return npc_id_;
}
inline void NpcDynamicConfig::set_npc_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_npc_id();
  npc_id_ = value;
}

// repeated int32 monster_group = 4;
inline int NpcDynamicConfig::monster_group_size() const {
  return monster_group_.size();
}
inline void NpcDynamicConfig::clear_monster_group() {
  monster_group_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 NpcDynamicConfig::monster_group(int index) const {
  return monster_group_.Get(index);
}
inline void NpcDynamicConfig::set_monster_group(int index, ::google::protobuf::int32 value) {
  SetDirty();
  monster_group_.Set(index, value);
}
inline void NpcDynamicConfig::add_monster_group(::google::protobuf::int32 value) {
  SetDirty();
  monster_group_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NpcDynamicConfig::monster_group() const {
  return monster_group_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NpcDynamicConfig::mutable_monster_group() {
  SetDirty();
  return &monster_group_;
}

// repeated string talk_option = 5;
inline int NpcDynamicConfig::talk_option_size() const {
  return talk_option_.size();
}
inline void NpcDynamicConfig::clear_talk_option() {
  talk_option_.Clear();
  SetDirty();
}
inline const ::std::string& NpcDynamicConfig::talk_option(int index) const {
  return talk_option_.Get(index);
}
inline ::std::string* NpcDynamicConfig::mutable_talk_option(int index) {
  SetDirty();
  return talk_option_.Mutable(index);
}
inline void NpcDynamicConfig::set_talk_option(int index, const ::std::string& value) {
  SetDirty();
  talk_option_.Mutable(index)->assign(value);
}
inline void NpcDynamicConfig::set_talk_option(int index, const char* value) {
  SetDirty();
  talk_option_.Mutable(index)->assign(value);
}
inline void NpcDynamicConfig::set_talk_option(int index, const char* value, size_t size) {
  SetDirty();
  talk_option_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NpcDynamicConfig::add_talk_option() {
  SetDirty();
  return talk_option_.Add();
}
inline void NpcDynamicConfig::add_talk_option(const ::std::string& value) {
  SetDirty();
  talk_option_.Add()->assign(value);
}
inline void NpcDynamicConfig::add_talk_option(const char* value) {
  SetDirty();
  talk_option_.Add()->assign(value);
}
inline void NpcDynamicConfig::add_talk_option(const char* value, size_t size) {
  SetDirty();
  talk_option_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NpcDynamicConfig::talk_option() const {
  return talk_option_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NpcDynamicConfig::mutable_talk_option() {
  SetDirty();
  return &talk_option_;
}

// required string npc_tag = 6;
inline bool NpcDynamicConfig::has_npc_tag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NpcDynamicConfig::set_has_npc_tag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NpcDynamicConfig::clear_has_npc_tag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NpcDynamicConfig::clear_npc_tag() {
  if (npc_tag_ != &::google::protobuf::internal::kEmptyString) {
    npc_tag_->clear();
  }
  clear_has_npc_tag();
  SetDirty();
}
inline const ::std::string& NpcDynamicConfig::npc_tag() const {
  return *npc_tag_;
}
inline void NpcDynamicConfig::set_npc_tag(const ::std::string& value) {
  SetDirty();
  set_has_npc_tag();
  if (npc_tag_ == &::google::protobuf::internal::kEmptyString) {
    npc_tag_ = new ::std::string;
  }
  npc_tag_->assign(value);
}
inline void NpcDynamicConfig::set_npc_tag(const char* value) {
  SetDirty();
  set_has_npc_tag();
  if (npc_tag_ == &::google::protobuf::internal::kEmptyString) {
    npc_tag_ = new ::std::string;
  }
  npc_tag_->assign(value);
}
inline void NpcDynamicConfig::set_npc_tag(const char* value, size_t size) {
  SetDirty();
  set_has_npc_tag();
  if (npc_tag_ == &::google::protobuf::internal::kEmptyString) {
    npc_tag_ = new ::std::string;
  }
  npc_tag_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NpcDynamicConfig::mutable_npc_tag() {
  SetDirty();
  set_has_npc_tag();
  if (npc_tag_ == &::google::protobuf::internal::kEmptyString) {
    npc_tag_ = new ::std::string;
  }
  return npc_tag_;
}
inline ::std::string* NpcDynamicConfig::release_npc_tag() {
  SetDirty();
  clear_has_npc_tag();
  if (npc_tag_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = npc_tag_;
    npc_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NpcDynamicConfig::set_allocated_npc_tag(::std::string* npc_tag) {
  SetDirty();
  if (npc_tag_ != &::google::protobuf::internal::kEmptyString) {
    delete npc_tag_;
  }
  if (npc_tag) {
    set_has_npc_tag();
    npc_tag_ = npc_tag;
  } else {
    clear_has_npc_tag();
    npc_tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 pos_id = 7;
inline bool NpcDynamicConfig::has_pos_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NpcDynamicConfig::set_has_pos_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NpcDynamicConfig::clear_has_pos_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NpcDynamicConfig::clear_pos_id() {
  pos_id_ = 0;
  clear_has_pos_id();
  SetDirty();
}
inline ::google::protobuf::int32 NpcDynamicConfig::pos_id() const {
  return pos_id_;
}
inline void NpcDynamicConfig::set_pos_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_pos_id();
  pos_id_ = value;
}

// -------------------------------------------------------------------

// PositionGroupConfig

// required int32 group_id = 1;
inline bool PositionGroupConfig::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PositionGroupConfig::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PositionGroupConfig::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PositionGroupConfig::clear_group_id() {
  group_id_ = 0;
  clear_has_group_id();
  SetDirty();
}
inline ::google::protobuf::int32 PositionGroupConfig::group_id() const {
  return group_id_;
}
inline void PositionGroupConfig::set_group_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_group_id();
  group_id_ = value;
}

// required int32 pos_id = 2;
inline bool PositionGroupConfig::has_pos_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PositionGroupConfig::set_has_pos_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PositionGroupConfig::clear_has_pos_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PositionGroupConfig::clear_pos_id() {
  pos_id_ = 0;
  clear_has_pos_id();
  SetDirty();
}
inline ::google::protobuf::int32 PositionGroupConfig::pos_id() const {
  return pos_id_;
}
inline void PositionGroupConfig::set_pos_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_pos_id();
  pos_id_ = value;
}

// -------------------------------------------------------------------

// NpcInfo

// required int32 index = 1;
inline bool NpcInfo::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NpcInfo::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NpcInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NpcInfo::clear_index() {
  index_ = 0;
  clear_has_index();
  SetDirty();
}
inline ::google::protobuf::int32 NpcInfo::index() const {
  return index_;
}
inline void NpcInfo::set_index(::google::protobuf::int32 value) {
  SetDirty();
  set_has_index();
  index_ = value;
}

// required int32 pos_id = 2;
inline bool NpcInfo::has_pos_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NpcInfo::set_has_pos_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NpcInfo::clear_has_pos_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NpcInfo::clear_pos_id() {
  pos_id_ = 0;
  clear_has_pos_id();
  SetDirty();
}
inline ::google::protobuf::int32 NpcInfo::pos_id() const {
  return pos_id_;
}
inline void NpcInfo::set_pos_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_pos_id();
  pos_id_ = value;
}

// required int32 series_id = 3;
inline bool NpcInfo::has_series_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NpcInfo::set_has_series_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NpcInfo::clear_has_series_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NpcInfo::clear_series_id() {
  series_id_ = 0;
  clear_has_series_id();
  SetDirty();
}
inline ::google::protobuf::int32 NpcInfo::series_id() const {
  return series_id_;
}
inline void NpcInfo::set_series_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_series_id();
  series_id_ = value;
}

// required int32 lifetime = 4;
inline bool NpcInfo::has_lifetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NpcInfo::set_has_lifetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NpcInfo::clear_has_lifetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NpcInfo::clear_lifetime() {
  lifetime_ = 0;
  clear_has_lifetime();
  SetDirty();
}
inline ::google::protobuf::int32 NpcInfo::lifetime() const {
  return lifetime_;
}
inline void NpcInfo::set_lifetime(::google::protobuf::int32 value) {
  SetDirty();
  set_has_lifetime();
  lifetime_ = value;
}

// -------------------------------------------------------------------

// PlayerList

// repeated .Packet.PlayerBasicInfo player_info = 1;
inline int PlayerList::player_info_size() const {
  return player_info_.size();
}
inline void PlayerList::clear_player_info() {
  player_info_.Clear();
  SetDirty();
}
inline const ::Packet::PlayerBasicInfo& PlayerList::player_info(int index) const {
  return player_info_.Get(index);
}
inline ::Packet::PlayerBasicInfo* PlayerList::mutable_player_info(int index) {
  SetDirty();
  return player_info_.Mutable(index);
}
inline ::Packet::PlayerBasicInfo* PlayerList::add_player_info() {
  SetDirty();
  return player_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::PlayerBasicInfo >&
PlayerList::player_info() const {
  return player_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::PlayerBasicInfo >*
PlayerList::mutable_player_info() {
  SetDirty();
  return &player_info_;
}

// -------------------------------------------------------------------

// NpcList

// repeated .Packet.NpcInfo npc_info = 1;
inline int NpcList::npc_info_size() const {
  return npc_info_.size();
}
inline void NpcList::clear_npc_info() {
  npc_info_.Clear();
  SetDirty();
}
inline const ::Packet::NpcInfo& NpcList::npc_info(int index) const {
  return npc_info_.Get(index);
}
inline ::Packet::NpcInfo* NpcList::mutable_npc_info(int index) {
  SetDirty();
  return npc_info_.Mutable(index);
}
inline ::Packet::NpcInfo* NpcList::add_npc_info() {
  SetDirty();
  return npc_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::NpcInfo >&
NpcList::npc_info() const {
  return npc_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::NpcInfo >*
NpcList::mutable_npc_info() {
  SetDirty();
  return &npc_info_;
}

// required .Packet.NpcOption option = 2;
inline bool NpcList::has_option() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NpcList::set_has_option() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NpcList::clear_has_option() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NpcList::clear_option() {
  option_ = 0;
  clear_has_option();
  SetDirty();
}
inline ::Packet::NpcOption NpcList::option() const {
  return static_cast< ::Packet::NpcOption >(option_);
}
inline void NpcList::set_option(::Packet::NpcOption value) {
  assert(::Packet::NpcOption_IsValid(value));
  SetDirty();
  set_has_option();
  option_ = value;
}

// -------------------------------------------------------------------

// PlayerNpc

// required .DB.TrialTarget target = 1;
inline bool PlayerNpc::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerNpc::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerNpc::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerNpc::clear_target() {
  if (target_ != NULL) target_->::DB::TrialTarget::Clear();
  clear_has_target();
  SetDirty();
}
inline const ::DB::TrialTarget& PlayerNpc::target() const {
  return target_ != NULL ? *target_ : *default_instance_->target_;
}
inline ::DB::TrialTarget* PlayerNpc::mutable_target() {
  SetDirty();
  set_has_target();
  if (target_ == NULL) target_ = new ::DB::TrialTarget;
  return target_;
}
inline ::DB::TrialTarget* PlayerNpc::release_target() {
  SetDirty();
  clear_has_target();
  ::DB::TrialTarget* temp = target_;
  target_ = NULL;
  return temp;
}
inline void PlayerNpc::set_allocated_target(::DB::TrialTarget* target) {
  SetDirty();
  delete target_;
  target_ = target;
  if (target) {
    set_has_target();
  } else {
    clear_has_target();
  }
}

// -------------------------------------------------------------------

// PlayerNpcList

// repeated .Packet.PlayerNpc player_npc = 1;
inline int PlayerNpcList::player_npc_size() const {
  return player_npc_.size();
}
inline void PlayerNpcList::clear_player_npc() {
  player_npc_.Clear();
  SetDirty();
}
inline const ::Packet::PlayerNpc& PlayerNpcList::player_npc(int index) const {
  return player_npc_.Get(index);
}
inline ::Packet::PlayerNpc* PlayerNpcList::mutable_player_npc(int index) {
  SetDirty();
  return player_npc_.Mutable(index);
}
inline ::Packet::PlayerNpc* PlayerNpcList::add_player_npc() {
  SetDirty();
  return player_npc_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Packet::PlayerNpc >&
PlayerNpcList::player_npc() const {
  return player_npc_;
}
inline ::google::protobuf::RepeatedPtrField< ::Packet::PlayerNpc >*
PlayerNpcList::mutable_player_npc() {
  SetDirty();
  return &player_npc_;
}

// required .Packet.NpcOption option = 2;
inline bool PlayerNpcList::has_option() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerNpcList::set_has_option() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerNpcList::clear_has_option() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerNpcList::clear_option() {
  option_ = 0;
  clear_has_option();
  SetDirty();
}
inline ::Packet::NpcOption PlayerNpcList::option() const {
  return static_cast< ::Packet::NpcOption >(option_);
}
inline void PlayerNpcList::set_option(::Packet::NpcOption value) {
  assert(::Packet::NpcOption_IsValid(value));
  SetDirty();
  set_has_option();
  option_ = value;
}

// -------------------------------------------------------------------

// NpcSession

// required int32 index = 1;
inline bool NpcSession::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NpcSession::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NpcSession::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NpcSession::clear_index() {
  index_ = 0;
  clear_has_index();
  SetDirty();
}
inline ::google::protobuf::int32 NpcSession::index() const {
  return index_;
}
inline void NpcSession::set_index(::google::protobuf::int32 value) {
  SetDirty();
  set_has_index();
  index_ = value;
}

// optional int32 series_id = 2;
inline bool NpcSession::has_series_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NpcSession::set_has_series_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NpcSession::clear_has_series_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NpcSession::clear_series_id() {
  series_id_ = 0;
  clear_has_series_id();
  SetDirty();
}
inline ::google::protobuf::int32 NpcSession::series_id() const {
  return series_id_;
}
inline void NpcSession::set_series_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_series_id();
  series_id_ = value;
}

// optional int32 mission_id = 3;
inline bool NpcSession::has_mission_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NpcSession::set_has_mission_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NpcSession::clear_has_mission_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NpcSession::clear_mission_id() {
  mission_id_ = 0;
  clear_has_mission_id();
  SetDirty();
}
inline ::google::protobuf::int32 NpcSession::mission_id() const {
  return mission_id_;
}
inline void NpcSession::set_mission_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_mission_id();
  mission_id_ = value;
}

// optional .Packet.MissionOption option = 4;
inline bool NpcSession::has_option() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NpcSession::set_has_option() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NpcSession::clear_has_option() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NpcSession::clear_option() {
  option_ = 0;
  clear_has_option();
  SetDirty();
}
inline ::Packet::MissionOption NpcSession::option() const {
  return static_cast< ::Packet::MissionOption >(option_);
}
inline void NpcSession::set_option(::Packet::MissionOption value) {
  assert(::Packet::MissionOption_IsValid(value));
  SetDirty();
  set_has_option();
  option_ = value;
}

// optional int32 option_index = 5;
inline bool NpcSession::has_option_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NpcSession::set_has_option_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NpcSession::clear_has_option_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NpcSession::clear_option_index() {
  option_index_ = 0;
  clear_has_option_index();
  SetDirty();
}
inline ::google::protobuf::int32 NpcSession::option_index() const {
  return option_index_;
}
inline void NpcSession::set_option_index(::google::protobuf::int32 value) {
  SetDirty();
  set_has_option_index();
  option_index_ = value;
}

// -------------------------------------------------------------------

// PlayerNpcSession

// required fixed64 target_guid = 1;
inline bool PlayerNpcSession::has_target_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerNpcSession::set_has_target_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerNpcSession::clear_has_target_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerNpcSession::clear_target_guid() {
  target_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 PlayerNpcSession::target_guid() const {
  return target_guid_;
}
inline void PlayerNpcSession::set_target_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_target_guid();
  target_guid_ = value;
}

// optional int32 option_index = 2;
inline bool PlayerNpcSession::has_option_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerNpcSession::set_has_option_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerNpcSession::clear_has_option_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerNpcSession::clear_option_index() {
  option_index_ = 0;
  clear_has_option_index();
  SetDirty();
}
inline ::google::protobuf::int32 PlayerNpcSession::option_index() const {
  return option_index_;
}
inline void PlayerNpcSession::set_option_index(::google::protobuf::int32 value) {
  SetDirty();
  set_has_option_index();
  option_index_ = value;
}

// -------------------------------------------------------------------

// NpcSessionReply

// required int32 index = 1;
inline bool NpcSessionReply::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NpcSessionReply::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NpcSessionReply::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NpcSessionReply::clear_index() {
  index_ = 0;
  clear_has_index();
  SetDirty();
}
inline ::google::protobuf::int32 NpcSessionReply::index() const {
  return index_;
}
inline void NpcSessionReply::set_index(::google::protobuf::int32 value) {
  SetDirty();
  set_has_index();
  index_ = value;
}

// required string msg_name = 2;
inline bool NpcSessionReply::has_msg_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NpcSessionReply::set_has_msg_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NpcSessionReply::clear_has_msg_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NpcSessionReply::clear_msg_name() {
  if (msg_name_ != &::google::protobuf::internal::kEmptyString) {
    msg_name_->clear();
  }
  clear_has_msg_name();
  SetDirty();
}
inline const ::std::string& NpcSessionReply::msg_name() const {
  return *msg_name_;
}
inline void NpcSessionReply::set_msg_name(const ::std::string& value) {
  SetDirty();
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(value);
}
inline void NpcSessionReply::set_msg_name(const char* value) {
  SetDirty();
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(value);
}
inline void NpcSessionReply::set_msg_name(const char* value, size_t size) {
  SetDirty();
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NpcSessionReply::mutable_msg_name() {
  SetDirty();
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  return msg_name_;
}
inline ::std::string* NpcSessionReply::release_msg_name() {
  SetDirty();
  clear_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_name_;
    msg_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NpcSessionReply::set_allocated_msg_name(::std::string* msg_name) {
  SetDirty();
  if (msg_name_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_name_;
  }
  if (msg_name) {
    set_has_msg_name();
    msg_name_ = msg_name;
  } else {
    clear_has_msg_name();
    msg_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string string_param = 3;
inline bool NpcSessionReply::has_string_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NpcSessionReply::set_has_string_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NpcSessionReply::clear_has_string_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NpcSessionReply::clear_string_param() {
  if (string_param_ != &::google::protobuf::internal::kEmptyString) {
    string_param_->clear();
  }
  clear_has_string_param();
  SetDirty();
}
inline const ::std::string& NpcSessionReply::string_param() const {
  return *string_param_;
}
inline void NpcSessionReply::set_string_param(const ::std::string& value) {
  SetDirty();
  set_has_string_param();
  if (string_param_ == &::google::protobuf::internal::kEmptyString) {
    string_param_ = new ::std::string;
  }
  string_param_->assign(value);
}
inline void NpcSessionReply::set_string_param(const char* value) {
  SetDirty();
  set_has_string_param();
  if (string_param_ == &::google::protobuf::internal::kEmptyString) {
    string_param_ = new ::std::string;
  }
  string_param_->assign(value);
}
inline void NpcSessionReply::set_string_param(const char* value, size_t size) {
  SetDirty();
  set_has_string_param();
  if (string_param_ == &::google::protobuf::internal::kEmptyString) {
    string_param_ = new ::std::string;
  }
  string_param_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NpcSessionReply::mutable_string_param() {
  SetDirty();
  set_has_string_param();
  if (string_param_ == &::google::protobuf::internal::kEmptyString) {
    string_param_ = new ::std::string;
  }
  return string_param_;
}
inline ::std::string* NpcSessionReply::release_string_param() {
  SetDirty();
  clear_has_string_param();
  if (string_param_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = string_param_;
    string_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NpcSessionReply::set_allocated_string_param(::std::string* string_param) {
  SetDirty();
  if (string_param_ != &::google::protobuf::internal::kEmptyString) {
    delete string_param_;
  }
  if (string_param) {
    set_has_string_param();
    string_param_ = string_param;
  } else {
    clear_has_string_param();
    string_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 int_param = 4;
inline bool NpcSessionReply::has_int_param() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NpcSessionReply::set_has_int_param() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NpcSessionReply::clear_has_int_param() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NpcSessionReply::clear_int_param() {
  int_param_ = 0;
  clear_has_int_param();
  SetDirty();
}
inline ::google::protobuf::int32 NpcSessionReply::int_param() const {
  return int_param_;
}
inline void NpcSessionReply::set_int_param(::google::protobuf::int32 value) {
  SetDirty();
  set_has_int_param();
  int_param_ = value;
}

// -------------------------------------------------------------------

// NoNpcSession

// required string string_param = 1;
inline bool NoNpcSession::has_string_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NoNpcSession::set_has_string_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NoNpcSession::clear_has_string_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NoNpcSession::clear_string_param() {
  if (string_param_ != &::google::protobuf::internal::kEmptyString) {
    string_param_->clear();
  }
  clear_has_string_param();
  SetDirty();
}
inline const ::std::string& NoNpcSession::string_param() const {
  return *string_param_;
}
inline void NoNpcSession::set_string_param(const ::std::string& value) {
  SetDirty();
  set_has_string_param();
  if (string_param_ == &::google::protobuf::internal::kEmptyString) {
    string_param_ = new ::std::string;
  }
  string_param_->assign(value);
}
inline void NoNpcSession::set_string_param(const char* value) {
  SetDirty();
  set_has_string_param();
  if (string_param_ == &::google::protobuf::internal::kEmptyString) {
    string_param_ = new ::std::string;
  }
  string_param_->assign(value);
}
inline void NoNpcSession::set_string_param(const char* value, size_t size) {
  SetDirty();
  set_has_string_param();
  if (string_param_ == &::google::protobuf::internal::kEmptyString) {
    string_param_ = new ::std::string;
  }
  string_param_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NoNpcSession::mutable_string_param() {
  SetDirty();
  set_has_string_param();
  if (string_param_ == &::google::protobuf::internal::kEmptyString) {
    string_param_ = new ::std::string;
  }
  return string_param_;
}
inline ::std::string* NoNpcSession::release_string_param() {
  SetDirty();
  clear_has_string_param();
  if (string_param_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = string_param_;
    string_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NoNpcSession::set_allocated_string_param(::std::string* string_param) {
  SetDirty();
  if (string_param_ != &::google::protobuf::internal::kEmptyString) {
    delete string_param_;
  }
  if (string_param) {
    set_has_string_param();
    string_param_ = string_param;
  } else {
    clear_has_string_param();
    string_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required fixed64 long_param = 2;
inline bool NoNpcSession::has_long_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NoNpcSession::set_has_long_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NoNpcSession::clear_has_long_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NoNpcSession::clear_long_param() {
  long_param_ = GOOGLE_ULONGLONG(0);
  clear_has_long_param();
  SetDirty();
}
inline ::google::protobuf::uint64 NoNpcSession::long_param() const {
  return long_param_;
}
inline void NoNpcSession::set_long_param(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_long_param();
  long_param_ = value;
}

// required int32 int_param = 3;
inline bool NoNpcSession::has_int_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NoNpcSession::set_has_int_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NoNpcSession::clear_has_int_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NoNpcSession::clear_int_param() {
  int_param_ = 0;
  clear_has_int_param();
  SetDirty();
}
inline ::google::protobuf::int32 NoNpcSession::int_param() const {
  return int_param_;
}
inline void NoNpcSession::set_int_param(::google::protobuf::int32 value) {
  SetDirty();
  set_has_int_param();
  int_param_ = value;
}

// -------------------------------------------------------------------

// MountConfig

// required int32 id = 1;
inline bool MountConfig::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountConfig::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountConfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountConfig::clear_id() {
  id_ = 0;
  clear_has_id();
  SetDirty();
}
inline ::google::protobuf::int32 MountConfig::id() const {
  return id_;
}
inline void MountConfig::set_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_id();
  id_ = value;
}

// required int32 speed = 2;
inline bool MountConfig::has_speed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountConfig::set_has_speed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountConfig::clear_has_speed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountConfig::clear_speed() {
  speed_ = 0;
  clear_has_speed();
  SetDirty();
}
inline ::google::protobuf::int32 MountConfig::speed() const {
  return speed_;
}
inline void MountConfig::set_speed(::google::protobuf::int32 value) {
  SetDirty();
  set_has_speed();
  speed_ = value;
}

// required int32 impact_id = 3;
inline bool MountConfig::has_impact_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MountConfig::set_has_impact_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MountConfig::clear_has_impact_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MountConfig::clear_impact_id() {
  impact_id_ = 0;
  clear_has_impact_id();
  SetDirty();
}
inline ::google::protobuf::int32 MountConfig::impact_id() const {
  return impact_id_;
}
inline void MountConfig::set_impact_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_impact_id();
  impact_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Packet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SceneObject_2eproto__INCLUDED

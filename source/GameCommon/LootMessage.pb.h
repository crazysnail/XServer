// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LootMessage.proto

#ifndef PROTOBUF_LootMessage_2eproto__INCLUDED
#define PROTOBUF_LootMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ProtoBufOption.pb.h"
// @@protoc_insertion_point(includes)

namespace Packet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_LootMessage_2eproto();
void protobuf_AssignDesc_LootMessage_2eproto();
void protobuf_ShutdownFile_LootMessage_2eproto();

class LootPlayer;
class LootNotify;

// ===================================================================

class LootPlayer : public ::google::protobuf::Message {
 public:
  LootPlayer();
  virtual ~LootPlayer();

  LootPlayer(const LootPlayer& from);

  inline LootPlayer& operator=(const LootPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LootPlayer& default_instance();

  void Swap(LootPlayer* other);

  // implements Message ----------------------------------------------

  LootPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LootPlayer& from);
  void MergeFrom(const LootPlayer& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 target_guid = 1;
  inline bool has_target_guid() const;
  inline void clear_target_guid();
  static const int kTargetGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 target_guid() const;
  inline void set_target_guid(::google::protobuf::uint64 value);

  // required int32 battle_group_id = 2;
  inline bool has_battle_group_id() const;
  inline void clear_battle_group_id();
  static const int kBattleGroupIdFieldNumber = 2;
  inline ::google::protobuf::int32 battle_group_id() const;
  inline void set_battle_group_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet.LootPlayer)
 private:
  inline void set_has_target_guid();
  inline void clear_has_target_guid();
  inline void set_has_battle_group_id();
  inline void clear_has_battle_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 target_guid_;
  ::google::protobuf::int32 battle_group_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_LootMessage_2eproto();
  friend void protobuf_AssignDesc_LootMessage_2eproto();
  friend void protobuf_ShutdownFile_LootMessage_2eproto();

  void InitAsDefaultInstance();
  static LootPlayer* default_instance_;
};
// -------------------------------------------------------------------

class LootNotify : public ::google::protobuf::Message {
 public:
  LootNotify();
  virtual ~LootNotify();

  LootNotify(const LootNotify& from);

  inline LootNotify& operator=(const LootNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LootNotify& default_instance();

  void Swap(LootNotify* other);

  // implements Message ----------------------------------------------

  LootNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LootNotify& from);
  void MergeFrom(const LootNotify& from);
  void Clear();
  bool IsInitialized() const;
  void SetInitialized();

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 loot_coin_a = 1;
  inline bool has_loot_coin_a() const;
  inline void clear_loot_coin_a();
  static const int kLootCoinAFieldNumber = 1;
  inline ::google::protobuf::int32 loot_coin_a() const;
  inline void set_loot_coin_a(::google::protobuf::int32 value);

  // required int32 loot_coin_b = 2;
  inline bool has_loot_coin_b() const;
  inline void clear_loot_coin_b();
  static const int kLootCoinBFieldNumber = 2;
  inline ::google::protobuf::int32 loot_coin_b() const;
  inline void set_loot_coin_b(::google::protobuf::int32 value);

  // repeated int32 item_id = 3;
  inline int item_id_size() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  inline ::google::protobuf::int32 item_id(int index) const;
  inline void set_item_id(int index, ::google::protobuf::int32 value);
  inline void add_item_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      item_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_item_id();

  // repeated int32 item_count = 4;
  inline int item_count_size() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 4;
  inline ::google::protobuf::int32 item_count(int index) const;
  inline void set_item_count(int index, ::google::protobuf::int32 value);
  inline void add_item_count(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      item_count() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_item_count();

  // required fixed64 be_loot_player_guid = 5;
  inline bool has_be_loot_player_guid() const;
  inline void clear_be_loot_player_guid();
  static const int kBeLootPlayerGuidFieldNumber = 5;
  inline ::google::protobuf::uint64 be_loot_player_guid() const;
  inline void set_be_loot_player_guid(::google::protobuf::uint64 value);

  // required string be_loot_player_name = 6;
  inline bool has_be_loot_player_name() const;
  inline void clear_be_loot_player_name();
  static const int kBeLootPlayerNameFieldNumber = 6;
  inline const ::std::string& be_loot_player_name() const;
  inline void set_be_loot_player_name(const ::std::string& value);
  inline void set_be_loot_player_name(const char* value);
  inline void set_be_loot_player_name(const char* value, size_t size);
  inline ::std::string* mutable_be_loot_player_name();
  inline ::std::string* release_be_loot_player_name();
  inline void set_allocated_be_loot_player_name(::std::string* be_loot_player_name);

  // required fixed64 loot_player_guid = 7;
  inline bool has_loot_player_guid() const;
  inline void clear_loot_player_guid();
  static const int kLootPlayerGuidFieldNumber = 7;
  inline ::google::protobuf::uint64 loot_player_guid() const;
  inline void set_loot_player_guid(::google::protobuf::uint64 value);

  // required string loot_player_name = 8;
  inline bool has_loot_player_name() const;
  inline void clear_loot_player_name();
  static const int kLootPlayerNameFieldNumber = 8;
  inline const ::std::string& loot_player_name() const;
  inline void set_loot_player_name(const ::std::string& value);
  inline void set_loot_player_name(const char* value);
  inline void set_loot_player_name(const char* value, size_t size);
  inline ::std::string* mutable_loot_player_name();
  inline ::std::string* release_loot_player_name();
  inline void set_allocated_loot_player_name(::std::string* loot_player_name);

  // @@protoc_insertion_point(class_scope:Packet.LootNotify)
 private:
  inline void set_has_loot_coin_a();
  inline void clear_has_loot_coin_a();
  inline void set_has_loot_coin_b();
  inline void clear_has_loot_coin_b();
  inline void set_has_be_loot_player_guid();
  inline void clear_has_be_loot_player_guid();
  inline void set_has_be_loot_player_name();
  inline void clear_has_be_loot_player_name();
  inline void set_has_loot_player_guid();
  inline void clear_has_loot_player_guid();
  inline void set_has_loot_player_name();
  inline void clear_has_loot_player_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 loot_coin_a_;
  ::google::protobuf::int32 loot_coin_b_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > item_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > item_count_;
  ::google::protobuf::uint64 be_loot_player_guid_;
  ::std::string* be_loot_player_name_;
  ::google::protobuf::uint64 loot_player_guid_;
  ::std::string* loot_player_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_LootMessage_2eproto();
  friend void protobuf_AssignDesc_LootMessage_2eproto();
  friend void protobuf_ShutdownFile_LootMessage_2eproto();

  void InitAsDefaultInstance();
  static LootNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// LootPlayer

// required fixed64 target_guid = 1;
inline bool LootPlayer::has_target_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LootPlayer::set_has_target_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LootPlayer::clear_has_target_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LootPlayer::clear_target_guid() {
  target_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 LootPlayer::target_guid() const {
  return target_guid_;
}
inline void LootPlayer::set_target_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_target_guid();
  target_guid_ = value;
}

// required int32 battle_group_id = 2;
inline bool LootPlayer::has_battle_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LootPlayer::set_has_battle_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LootPlayer::clear_has_battle_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LootPlayer::clear_battle_group_id() {
  battle_group_id_ = 0;
  clear_has_battle_group_id();
  SetDirty();
}
inline ::google::protobuf::int32 LootPlayer::battle_group_id() const {
  return battle_group_id_;
}
inline void LootPlayer::set_battle_group_id(::google::protobuf::int32 value) {
  SetDirty();
  set_has_battle_group_id();
  battle_group_id_ = value;
}

// -------------------------------------------------------------------

// LootNotify

// required int32 loot_coin_a = 1;
inline bool LootNotify::has_loot_coin_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LootNotify::set_has_loot_coin_a() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LootNotify::clear_has_loot_coin_a() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LootNotify::clear_loot_coin_a() {
  loot_coin_a_ = 0;
  clear_has_loot_coin_a();
  SetDirty();
}
inline ::google::protobuf::int32 LootNotify::loot_coin_a() const {
  return loot_coin_a_;
}
inline void LootNotify::set_loot_coin_a(::google::protobuf::int32 value) {
  SetDirty();
  set_has_loot_coin_a();
  loot_coin_a_ = value;
}

// required int32 loot_coin_b = 2;
inline bool LootNotify::has_loot_coin_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LootNotify::set_has_loot_coin_b() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LootNotify::clear_has_loot_coin_b() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LootNotify::clear_loot_coin_b() {
  loot_coin_b_ = 0;
  clear_has_loot_coin_b();
  SetDirty();
}
inline ::google::protobuf::int32 LootNotify::loot_coin_b() const {
  return loot_coin_b_;
}
inline void LootNotify::set_loot_coin_b(::google::protobuf::int32 value) {
  SetDirty();
  set_has_loot_coin_b();
  loot_coin_b_ = value;
}

// repeated int32 item_id = 3;
inline int LootNotify::item_id_size() const {
  return item_id_.size();
}
inline void LootNotify::clear_item_id() {
  item_id_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 LootNotify::item_id(int index) const {
  return item_id_.Get(index);
}
inline void LootNotify::set_item_id(int index, ::google::protobuf::int32 value) {
  SetDirty();
  item_id_.Set(index, value);
}
inline void LootNotify::add_item_id(::google::protobuf::int32 value) {
  SetDirty();
  item_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LootNotify::item_id() const {
  return item_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LootNotify::mutable_item_id() {
  SetDirty();
  return &item_id_;
}

// repeated int32 item_count = 4;
inline int LootNotify::item_count_size() const {
  return item_count_.size();
}
inline void LootNotify::clear_item_count() {
  item_count_.Clear();
  SetDirty();
}
inline ::google::protobuf::int32 LootNotify::item_count(int index) const {
  return item_count_.Get(index);
}
inline void LootNotify::set_item_count(int index, ::google::protobuf::int32 value) {
  SetDirty();
  item_count_.Set(index, value);
}
inline void LootNotify::add_item_count(::google::protobuf::int32 value) {
  SetDirty();
  item_count_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LootNotify::item_count() const {
  return item_count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LootNotify::mutable_item_count() {
  SetDirty();
  return &item_count_;
}

// required fixed64 be_loot_player_guid = 5;
inline bool LootNotify::has_be_loot_player_guid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LootNotify::set_has_be_loot_player_guid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LootNotify::clear_has_be_loot_player_guid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LootNotify::clear_be_loot_player_guid() {
  be_loot_player_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_be_loot_player_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 LootNotify::be_loot_player_guid() const {
  return be_loot_player_guid_;
}
inline void LootNotify::set_be_loot_player_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_be_loot_player_guid();
  be_loot_player_guid_ = value;
}

// required string be_loot_player_name = 6;
inline bool LootNotify::has_be_loot_player_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LootNotify::set_has_be_loot_player_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LootNotify::clear_has_be_loot_player_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LootNotify::clear_be_loot_player_name() {
  if (be_loot_player_name_ != &::google::protobuf::internal::kEmptyString) {
    be_loot_player_name_->clear();
  }
  clear_has_be_loot_player_name();
  SetDirty();
}
inline const ::std::string& LootNotify::be_loot_player_name() const {
  return *be_loot_player_name_;
}
inline void LootNotify::set_be_loot_player_name(const ::std::string& value) {
  SetDirty();
  set_has_be_loot_player_name();
  if (be_loot_player_name_ == &::google::protobuf::internal::kEmptyString) {
    be_loot_player_name_ = new ::std::string;
  }
  be_loot_player_name_->assign(value);
}
inline void LootNotify::set_be_loot_player_name(const char* value) {
  SetDirty();
  set_has_be_loot_player_name();
  if (be_loot_player_name_ == &::google::protobuf::internal::kEmptyString) {
    be_loot_player_name_ = new ::std::string;
  }
  be_loot_player_name_->assign(value);
}
inline void LootNotify::set_be_loot_player_name(const char* value, size_t size) {
  SetDirty();
  set_has_be_loot_player_name();
  if (be_loot_player_name_ == &::google::protobuf::internal::kEmptyString) {
    be_loot_player_name_ = new ::std::string;
  }
  be_loot_player_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LootNotify::mutable_be_loot_player_name() {
  SetDirty();
  set_has_be_loot_player_name();
  if (be_loot_player_name_ == &::google::protobuf::internal::kEmptyString) {
    be_loot_player_name_ = new ::std::string;
  }
  return be_loot_player_name_;
}
inline ::std::string* LootNotify::release_be_loot_player_name() {
  SetDirty();
  clear_has_be_loot_player_name();
  if (be_loot_player_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = be_loot_player_name_;
    be_loot_player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LootNotify::set_allocated_be_loot_player_name(::std::string* be_loot_player_name) {
  SetDirty();
  if (be_loot_player_name_ != &::google::protobuf::internal::kEmptyString) {
    delete be_loot_player_name_;
  }
  if (be_loot_player_name) {
    set_has_be_loot_player_name();
    be_loot_player_name_ = be_loot_player_name;
  } else {
    clear_has_be_loot_player_name();
    be_loot_player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required fixed64 loot_player_guid = 7;
inline bool LootNotify::has_loot_player_guid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LootNotify::set_has_loot_player_guid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LootNotify::clear_has_loot_player_guid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LootNotify::clear_loot_player_guid() {
  loot_player_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_loot_player_guid();
  SetDirty();
}
inline ::google::protobuf::uint64 LootNotify::loot_player_guid() const {
  return loot_player_guid_;
}
inline void LootNotify::set_loot_player_guid(::google::protobuf::uint64 value) {
  SetDirty();
  set_has_loot_player_guid();
  loot_player_guid_ = value;
}

// required string loot_player_name = 8;
inline bool LootNotify::has_loot_player_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LootNotify::set_has_loot_player_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LootNotify::clear_has_loot_player_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LootNotify::clear_loot_player_name() {
  if (loot_player_name_ != &::google::protobuf::internal::kEmptyString) {
    loot_player_name_->clear();
  }
  clear_has_loot_player_name();
  SetDirty();
}
inline const ::std::string& LootNotify::loot_player_name() const {
  return *loot_player_name_;
}
inline void LootNotify::set_loot_player_name(const ::std::string& value) {
  SetDirty();
  set_has_loot_player_name();
  if (loot_player_name_ == &::google::protobuf::internal::kEmptyString) {
    loot_player_name_ = new ::std::string;
  }
  loot_player_name_->assign(value);
}
inline void LootNotify::set_loot_player_name(const char* value) {
  SetDirty();
  set_has_loot_player_name();
  if (loot_player_name_ == &::google::protobuf::internal::kEmptyString) {
    loot_player_name_ = new ::std::string;
  }
  loot_player_name_->assign(value);
}
inline void LootNotify::set_loot_player_name(const char* value, size_t size) {
  SetDirty();
  set_has_loot_player_name();
  if (loot_player_name_ == &::google::protobuf::internal::kEmptyString) {
    loot_player_name_ = new ::std::string;
  }
  loot_player_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LootNotify::mutable_loot_player_name() {
  SetDirty();
  set_has_loot_player_name();
  if (loot_player_name_ == &::google::protobuf::internal::kEmptyString) {
    loot_player_name_ = new ::std::string;
  }
  return loot_player_name_;
}
inline ::std::string* LootNotify::release_loot_player_name() {
  SetDirty();
  clear_has_loot_player_name();
  if (loot_player_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = loot_player_name_;
    loot_player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LootNotify::set_allocated_loot_player_name(::std::string* loot_player_name) {
  SetDirty();
  if (loot_player_name_ != &::google::protobuf::internal::kEmptyString) {
    delete loot_player_name_;
  }
  if (loot_player_name) {
    set_has_loot_player_name();
    loot_player_name_ = loot_player_name;
  } else {
    clear_has_loot_player_name();
    loot_player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Packet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LootMessage_2eproto__INCLUDED
